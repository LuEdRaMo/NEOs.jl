# DO NOT MODIFY THIS FILE BY HAND

# Methods of `TaylorIntegration._allocate_jetcoeffs!` and `TaylorIntegration.jetcoeffs!` generated by @taylorize for the functions 
# in src/propagation/asteroid_dynamical_models.jl

# To update the functions do the following:
# 1.- Update the corresponding function in src/propagation/asteroid_dynamical_models.jl
# 2.- using TaylorIntegration
# 2.- ex = :(paste here the modified function)
# 3.- x, y = TaylorIntegration._make_parsed_coeffs(ex)
# 4.- Paste x and y in this file 

# TaylorIntegration._allocate_jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph!
function TaylorIntegration._allocate_jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = params[1]
    local acceph_t = params[2]
    local newtonianNb_Potential_t = params[3]
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    X = Array{S}(undef, N)
    Y = Array{S}(undef, N)
    Z = Array{S}(undef, N)
    r_p2 = Array{S}(undef, N)
    r_p1d2 = Array{S}(undef, N)
    r_p3d2 = Array{S}(undef, N)
    r_p7d2 = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N)
    ui = Array{S}(undef, N - 1)
    vi = Array{S}(undef, N - 1)
    wi = Array{S}(undef, N - 1)
    U = Array{S}(undef, N)
    V = Array{S}(undef, N)
    W = Array{S}(undef, N)
    _4U_m_3X = Array{S}(undef, N)
    _4V_m_3Y = Array{S}(undef, N)
    _4W_m_3Z = Array{S}(undef, N)
    UU = Array{S}(undef, N)
    VV = Array{S}(undef, N)
    WW = Array{S}(undef, N)
    newtonian1b_Potential = Array{S}(undef, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N)
    newton_acc_Y = Array{S}(undef, N)
    newton_acc_Z = Array{S}(undef, N)
    v2 = Array{S}(undef, N)
    vi_dot_vj = Array{S}(undef, N)
    pn2 = Array{S}(undef, N)
    U_t_pn2 = Array{S}(undef, N)
    V_t_pn2 = Array{S}(undef, N)
    W_t_pn2 = Array{S}(undef, N)
    pn3 = Array{S}(undef, N)
    pNX_t_pn3 = Array{S}(undef, N)
    pNY_t_pn3 = Array{S}(undef, N)
    pNZ_t_pn3 = Array{S}(undef, N)
    _4ϕj = Array{S}(undef, N)
    ϕi_plus_4ϕj = Array{S}(undef, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N)
    ϕs_and_vs = Array{S}(undef, N)
    pn1t1_7 = Array{S}(undef, N)
    pNX_t_X = Array{S}(undef, N)
    pNY_t_Y = Array{S}(undef, N)
    pNZ_t_Z = Array{S}(undef, N)
    pn1 = Array{S}(undef, N)
    X_t_pn1 = Array{S}(undef, N)
    Y_t_pn1 = Array{S}(undef, N)
    Z_t_pn1 = Array{S}(undef, N)
    pntempX = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempY = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempZ = Taylor1(identity(constant_term(zero_q_1)), order)
    t31 = Array{S}(undef, N)
    t32 = Array{S}(undef, N)
    t33 = Array{S}(undef, N)
    r_sin_ϕ = Array{S}(undef, N)
    sin_ϕ = Array{S}(undef, N)
    ϕ = Array{S}(undef, N)
    cos_ϕ = Array{S}(undef, N)
    sin2_ϕ = Array{S}(undef, N)
    sin3_ϕ = Array{S}(undef, N)
    sin4_ϕ = Array{S}(undef, N)
    F_J2_x = Array{S}(undef, N)
    F_J2_y = Array{S}(undef, N)
    F_J2_z = Array{S}(undef, N)
    F_J2_x1 = Array{S}(undef, N)
    F_J2_y1 = Array{S}(undef, N)
    F_J2_z1 = Array{S}(undef, N)
    F_J2_x2 = Array{S}(undef, N)
    F_J2_y2 = Array{S}(undef, N)
    F_J2_z2 = Array{S}(undef, N)
    temp_accX_i = Array{S}(undef, N)
    temp_accY_i = Array{S}(undef, N)
    temp_accZ_i = Array{S}(undef, N)
    P_2_sin_ϕ = Array{S}(undef, N)
    ∂P_2_sin_ϕ = Array{S}(undef, N)
    P_3_sin_ϕ = Array{S}(undef, N)
    ∂P_3_sin_ϕ = Array{S}(undef, N)
    m_c_ϕ_∂P_2 = Array{S}(undef, N)
    m_c_ϕ_∂P_3 = Array{S}(undef, N)
    Λ2j_div_r4 = Array{S}(undef, N)
    Λ3j_div_r5 = Array{S}(undef, N)
    F_J_ξ = Array{S}(undef, N)
    F_J_η = Array{S}(undef, N)
    F_J_ζ = Array{S}(undef, N)
    F_J2_ξ = Array{S}(undef, N)
    F_J2_η = Array{S}(undef, N)
    F_J2_ζ = Array{S}(undef, N)
    F_J3_ξ = Array{S}(undef, N)
    F_J3_η = Array{S}(undef, N)
    F_J3_ζ = Array{S}(undef, N)
    ξx = Array{S}(undef, N)
    ξy = Array{S}(undef, N)
    ξz = Array{S}(undef, N)
    ηx = Array{S}(undef, N)
    ηy = Array{S}(undef, N)
    ηz = Array{S}(undef, N)
    ηx1 = Array{S}(undef, N)
    ηy1 = Array{S}(undef, N)
    ηz1 = Array{S}(undef, N)
    ηx2 = Array{S}(undef, N)
    ηy2 = Array{S}(undef, N)
    ηz2 = Array{S}(undef, N)
    ζx = Array{S}(undef, N)
    ζy = Array{S}(undef, N)
    ζz = Array{S}(undef, N)
    ζx1 = Array{S}(undef, N)
    ζy1 = Array{S}(undef, N)
    ζz1 = Array{S}(undef, N)
    ζx2 = Array{S}(undef, N)
    ζy2 = Array{S}(undef, N)
    ζz2 = Array{S}(undef, N)
    accX = Taylor1(identity(constant_term(zero_q_1)), order)
    accY = Taylor1(identity(constant_term(zero_q_1)), order)
    accZ = Taylor1(identity(constant_term(zero_q_1)), order)
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    dq[1] = Taylor1(identity(constant_term(q[4])), order)
    dq[2] = Taylor1(identity(constant_term(q[5])), order)
    dq[3] = Taylor1(identity(constant_term(q[6])), order)
    newtonianNb_Potential[N] = Taylor1(identity(constant_term(zero_q_1)), order)
    tmp666 = Array{Taylor1{_S}}(undef, size(dq))
    tmp666 .= Taylor1(zero(_S), order)
    tmp668 = Array{Taylor1{_S}}(undef, size(ui))
    tmp668 .= Taylor1(zero(_S), order)
    tmp671 = Array{Taylor1{_S}}(undef, size(dq))
    tmp671 .= Taylor1(zero(_S), order)
    tmp673 = Array{Taylor1{_S}}(undef, size(vi))
    tmp673 .= Taylor1(zero(_S), order)
    tmp676 = Array{Taylor1{_S}}(undef, size(dq))
    tmp676 .= Taylor1(zero(_S), order)
    tmp678 = Array{Taylor1{_S}}(undef, size(wi))
    tmp678 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp686 = Array{Taylor1{_S}}(undef, size(UU))
    tmp686 .= Taylor1(zero(_S), order)
    tmp689 = Array{Taylor1{_S}}(undef, size(X))
    tmp689 .= Taylor1(zero(_S), order)
    tmp691 = Array{Taylor1{_S}}(undef, size(Y))
    tmp691 .= Taylor1(zero(_S), order)
    tmp692 = Array{Taylor1{_S}}(undef, size(tmp689))
    tmp692 .= Taylor1(zero(_S), order)
    tmp694 = Array{Taylor1{_S}}(undef, size(Z))
    tmp694 .= Taylor1(zero(_S), order)
    tmp702 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp702 .= Taylor1(zero(_S), order)
    tmp703 = Array{Taylor1{_S}}(undef, size(tmp702))
    tmp703 .= Taylor1(zero(_S), order)
    tmp798 = Array{Taylor1{_S}}(undef, size(ui))
    tmp798 .= Taylor1(zero(_S), order)
    tmp800 = Array{Taylor1{_S}}(undef, size(vi))
    tmp800 .= Taylor1(zero(_S), order)
    tmp801 = Array{Taylor1{_S}}(undef, size(tmp798))
    tmp801 .= Taylor1(zero(_S), order)
    tmp803 = Array{Taylor1{_S}}(undef, size(wi))
    tmp803 .= Taylor1(zero(_S), order)
    tmp714 = Array{Taylor1{_S}}(undef, size(X))
    tmp714 .= Taylor1(zero(_S), order)
    tmp716 = Array{Taylor1{_S}}(undef, size(Y))
    tmp716 .= Taylor1(zero(_S), order)
    tmp718 = Array{Taylor1{_S}}(undef, size(Z))
    tmp718 .= Taylor1(zero(_S), order)
    tmp720 = Array{Taylor1{_S}}(undef, size(t31))
    tmp720 .= Taylor1(zero(_S), order)
    tmp927 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp927 .= Taylor1(zero(_S), order)
    tmp928 = Array{Taylor1{_S}}(undef, size(ϕ))
    tmp928 .= Taylor1(zero(_S), order)
    tmp730 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp730 .= Taylor1(zero(_S), order)
    tmp736 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp736 .= Taylor1(zero(_S), order)
    tmp738 = Array{Taylor1{_S}}(undef, size(sin3_ϕ))
    tmp738 .= Taylor1(zero(_S), order)
    tmp742 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp742 .= Taylor1(zero(_S), order)
    tmp745 = Array{Taylor1{_S}}(undef, size(r_p2))
    tmp745 .= Taylor1(zero(_S), order)
    tmp746 = Array{Taylor1{_S}}(undef, size(Λ2))
    tmp746 .= Taylor1(zero(_S), order)
    tmp749 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    tmp749 .= Taylor1(zero(_S), order)
    tmp750 = Array{Taylor1{_S}}(undef, size(Λ3))
    tmp750 .= Taylor1(zero(_S), order)
    tmp752 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp752 .= Taylor1(zero(_S), order)
    tmp754 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp754 .= Taylor1(zero(_S), order)
    tmp757 = Array{Taylor1{_S}}(undef, size(Λ2j_div_r4))
    tmp757 .= Taylor1(zero(_S), order)
    tmp761 = Array{Taylor1{_S}}(undef, size(Λ3j_div_r5))
    tmp761 .= Taylor1(zero(_S), order)
    tmp764 = Array{Taylor1{_S}}(undef, size(X))
    tmp764 .= Taylor1(zero(_S), order)
    tmp766 = Array{Taylor1{_S}}(undef, size(Y))
    tmp766 .= Taylor1(zero(_S), order)
    tmp768 = Array{Taylor1{_S}}(undef, size(Z))
    tmp768 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        ui[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2])), order)
        vi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1])), order)
        wi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)])), order)
        X[i] = Taylor1(constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1]), order)
        Y[i] = Taylor1(constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2]), order)
        Z[i] = Taylor1(constant_term(ss16asteph_t[3i]) - constant_term(q[3]), order)
        U[i] = Taylor1(constant_term(ui[i]) - constant_term(dq[1]), order)
        V[i] = Taylor1(constant_term(vi[i]) - constant_term(dq[2]), order)
        W[i] = Taylor1(constant_term(wi[i]) - constant_term(dq[3]), order)
        tmp666[1] = Taylor1(constant_term(4) * constant_term(dq[1]), order)
        tmp668[i] = Taylor1(constant_term(3) * constant_term(ui[i]), order)
        _4U_m_3X[i] = Taylor1(constant_term(tmp666[1]) - constant_term(tmp668[i]), order)
        tmp671[2] = Taylor1(constant_term(4) * constant_term(dq[2]), order)
        tmp673[i] = Taylor1(constant_term(3) * constant_term(vi[i]), order)
        _4V_m_3Y[i] = Taylor1(constant_term(tmp671[2]) - constant_term(tmp673[i]), order)
        tmp676[3] = Taylor1(constant_term(4) * constant_term(dq[3]), order)
        tmp678[i] = Taylor1(constant_term(3) * constant_term(wi[i]), order)
        _4W_m_3Z[i] = Taylor1(constant_term(tmp676[3]) - constant_term(tmp678[i]), order)
        pn2x[i] = Taylor1(constant_term(X[i]) * constant_term(_4U_m_3X[i]), order)
        pn2y[i] = Taylor1(constant_term(Y[i]) * constant_term(_4V_m_3Y[i]), order)
        pn2z[i] = Taylor1(constant_term(Z[i]) * constant_term(_4W_m_3Z[i]), order)
        UU[i] = Taylor1(constant_term(ui[i]) * constant_term(dq[1]), order)
        VV[i] = Taylor1(constant_term(vi[i]) * constant_term(dq[2]), order)
        WW[i] = Taylor1(constant_term(wi[i]) * constant_term(dq[3]), order)
        tmp686[i] = Taylor1(constant_term(UU[i]) + constant_term(VV[i]), order)
        vi_dot_vj[i] = Taylor1(constant_term(tmp686[i]) + constant_term(WW[i]), order)
        tmp689[i] = Taylor1(constant_term(X[i]) ^ float(constant_term(2)), order)
        tmp691[i] = Taylor1(constant_term(Y[i]) ^ float(constant_term(2)), order)
        tmp692[i] = Taylor1(constant_term(tmp689[i]) + constant_term(tmp691[i]), order)
        tmp694[i] = Taylor1(constant_term(Z[i]) ^ float(constant_term(2)), order)
        r_p2[i] = Taylor1(constant_term(tmp692[i]) + constant_term(tmp694[i]), order)
        r_p1d2[i] = Taylor1(sqrt(constant_term(r_p2[i])), order)
        r_p3d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(1.5)), order)
        r_p7d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(3.5)), order)
        newtonianCoeff[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i]), order)
        tmp702[i] = Taylor1(constant_term(pn2x[i]) + constant_term(pn2y[i]), order)
        tmp703[i] = Taylor1(constant_term(tmp702[i]) + constant_term(pn2z[i]), order)
        pn2[i] = Taylor1(constant_term(newtonianCoeff[i]) * constant_term(tmp703[i]), order)
        newton_acc_X[i] = Taylor1(constant_term(X[i]) * constant_term(newtonianCoeff[i]), order)
        newton_acc_Y[i] = Taylor1(constant_term(Y[i]) * constant_term(newtonianCoeff[i]), order)
        newton_acc_Z[i] = Taylor1(constant_term(Z[i]) * constant_term(newtonianCoeff[i]), order)
        newtonian1b_Potential[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i]), order)
        pn3[i] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i]), order)
        U_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(U[i]), order)
        V_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(V[i]), order)
        W_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(W[i]), order)
        if UJ_interaction[i]
            tmp714[i] = Taylor1(-(constant_term(X[i])), order)
            t31[i] = Taylor1(constant_term(tmp714[i]) * constant_term(M_[1, 3, i]), order)
            tmp716[i] = Taylor1(-(constant_term(Y[i])), order)
            t32[i] = Taylor1(constant_term(tmp716[i]) * constant_term(M_[2, 3, i]), order)
            tmp718[i] = Taylor1(-(constant_term(Z[i])), order)
            t33[i] = Taylor1(constant_term(tmp718[i]) * constant_term(M_[3, 3, i]), order)
            tmp720[i] = Taylor1(constant_term(t31[i]) + constant_term(t32[i]), order)
            r_sin_ϕ[i] = Taylor1(constant_term(tmp720[i]) + constant_term(t33[i]), order)
            sin_ϕ[i] = Taylor1(constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i]), order)
            ϕ[i] = Taylor1(asin(constant_term(sin_ϕ[i])), order)
            tmp927[i] = Taylor1(sqrt(1 - constant_term(sin_ϕ[i]) ^ 2), order)
            cos_ϕ[i] = Taylor1(cos(constant_term(ϕ[i])), order)
            tmp928[i] = Taylor1(sin(constant_term(ϕ[i])), order)
            sin2_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(2)), order)
            sin3_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(3)), order)
            tmp730[i] = Taylor1(constant_term(1.5) * constant_term(sin2_ϕ[i]), order)
            P_2_sin_ϕ[i] = Taylor1(constant_term(tmp730[i]) - constant_term(0.5), order)
            ∂P_2_sin_ϕ[i] = Taylor1(constant_term(3) * constant_term(sin_ϕ[i]), order)
            tmp736[i] = Taylor1(constant_term(-1.5) * constant_term(sin_ϕ[i]), order)
            tmp738[i] = Taylor1(constant_term(2.5) * constant_term(sin3_ϕ[i]), order)
            P_3_sin_ϕ[i] = Taylor1(constant_term(tmp736[i]) + constant_term(tmp738[i]), order)
            tmp742[i] = Taylor1(constant_term(7.5) * constant_term(sin2_ϕ[i]), order)
            ∂P_3_sin_ϕ[i] = Taylor1(constant_term(-1.5) + constant_term(tmp742[i]), order)
            tmp745[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(2)), order)
            tmp746[i] = Taylor1(constant_term(Λ2[i]) / constant_term(tmp745[i]), order)
            Λ2j_div_r4[i] = Taylor1(-(constant_term(tmp746[i])), order)
            tmp749[i] = Taylor1(constant_term(r_p1d2[i]) ^ float(constant_term(5)), order)
            tmp750[i] = Taylor1(constant_term(Λ3[i]) / constant_term(tmp749[i]), order)
            Λ3j_div_r5[i] = Taylor1(-(constant_term(tmp750[i])), order)
            tmp752[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
            m_c_ϕ_∂P_2[i] = Taylor1(constant_term(tmp752[i]) * constant_term(∂P_2_sin_ϕ[i]), order)
            tmp754[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
            m_c_ϕ_∂P_3[i] = Taylor1(constant_term(tmp754[i]) * constant_term(∂P_3_sin_ϕ[i]), order)
            tmp757[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(3), order)
            F_J2_ξ[i] = Taylor1(constant_term(tmp757[i]) * constant_term(P_2_sin_ϕ[i]), order)
            F_J2_ζ[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i]), order)
            tmp761[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(4), order)
            F_J3_ξ[i] = Taylor1(constant_term(tmp761[i]) * constant_term(P_3_sin_ϕ[i]), order)
            F_J3_ζ[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i]), order)
            F_J_ξ[i] = Taylor1(identity(constant_term(F_J2_ξ[i])), order)
            F_J_ζ[i] = Taylor1(identity(constant_term(F_J2_ζ[i])), order)
            tmp764[i] = Taylor1(-(constant_term(X[i])), order)
            ξx[i] = Taylor1(constant_term(tmp764[i]) / constant_term(r_p1d2[i]), order)
            tmp766[i] = Taylor1(-(constant_term(Y[i])), order)
            ξy[i] = Taylor1(constant_term(tmp766[i]) / constant_term(r_p1d2[i]), order)
            tmp768[i] = Taylor1(-(constant_term(Z[i])), order)
            ξz[i] = Taylor1(constant_term(tmp768[i]) / constant_term(r_p1d2[i]), order)
            ηx1[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξz[i]), order)
            ηy1[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξx[i]), order)
            ηz1[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξy[i]), order)
            ηx2[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξy[i]), order)
            ηy2[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξz[i]), order)
            ηz2[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξx[i]), order)
            ηx[i] = Taylor1(constant_term(ηx1[i]) - constant_term(ηx2[i]), order)
            ηy[i] = Taylor1(constant_term(ηy1[i]) - constant_term(ηy2[i]), order)
            ηz[i] = Taylor1(constant_term(ηz1[i]) - constant_term(ηz2[i]), order)
            ζx1[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηz[i]), order)
            ζy1[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηx[i]), order)
            ζz1[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηy[i]), order)
            ζx2[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηy[i]), order)
            ζy2[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηz[i]), order)
            ζz2[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηx[i]), order)
            ζx[i] = Taylor1(constant_term(ζx1[i]) - constant_term(ζx2[i]), order)
            ζy[i] = Taylor1(constant_term(ζy1[i]) - constant_term(ζy2[i]), order)
            ζz[i] = Taylor1(constant_term(ζz1[i]) - constant_term(ζz2[i]), order)
            F_J2_x1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξx[i]), order)
            F_J2_y1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξy[i]), order)
            F_J2_z1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξz[i]), order)
            F_J2_x2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζx[i]), order)
            F_J2_y2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζy[i]), order)
            F_J2_z2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζz[i]), order)
            F_J2_x[i] = Taylor1(constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i]), order)
            F_J2_y[i] = Taylor1(constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i]), order)
            F_J2_z[i] = Taylor1(constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i]), order)
        end
        tmp798[i] = Taylor1(constant_term(ui[i]) ^ float(constant_term(2)), order)
        tmp800[i] = Taylor1(constant_term(vi[i]) ^ float(constant_term(2)), order)
        tmp801[i] = Taylor1(constant_term(tmp798[i]) + constant_term(tmp800[i]), order)
        tmp803[i] = Taylor1(constant_term(wi[i]) ^ float(constant_term(2)), order)
        v2[i] = Taylor1(constant_term(tmp801[i]) + constant_term(tmp803[i]), order)
    end
    tmp806 = Taylor1(constant_term(q[4]) ^ float(constant_term(2)), order)
    tmp808 = Taylor1(constant_term(q[5]) ^ float(constant_term(2)), order)
    tmp809 = Taylor1(constant_term(tmp806) + constant_term(tmp808), order)
    tmp811 = Taylor1(constant_term(q[6]) ^ float(constant_term(2)), order)
    v2[N] = Taylor1(constant_term(tmp809) + constant_term(tmp811), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp814 = Array{Taylor1{_S}}(undef, size(μ))
    tmp814 .= Taylor1(zero(_S), order)
    tmp816 = Array{Taylor1{_S}}(undef, size(μ))
    tmp816 .= Taylor1(zero(_S), order)
    tmp818 = Array{Taylor1{_S}}(undef, size(μ))
    tmp818 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        temp_004[i] = Taylor1(constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N]), order)
        newtonianNb_Potential[N] = Taylor1(identity(constant_term(temp_004[i])), order)
        if UJ_interaction[i]
            tmp814[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_x[i]), order)
            temp_accX_i[i] = Taylor1(constant_term(accX) - constant_term(tmp814[i]), order)
            accX = Taylor1(identity(constant_term(temp_accX_i[i])), order)
            tmp816[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_y[i]), order)
            temp_accY_i[i] = Taylor1(constant_term(accY) - constant_term(tmp816[i]), order)
            accY = Taylor1(identity(constant_term(temp_accY_i[i])), order)
            tmp818[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_z[i]), order)
            temp_accZ_i[i] = Taylor1(constant_term(accZ) - constant_term(tmp818[i]), order)
            accZ = Taylor1(identity(constant_term(temp_accZ_i[i])), order)
        end
    end
    _4ϕj[N] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[N]), order)
    tmp824 = Array{Taylor1{_S}}(undef, size(v2))
    tmp824 .= Taylor1(zero(_S), order)
    tmp826 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp826 .= Taylor1(zero(_S), order)
    tmp827 = Array{Taylor1{_S}}(undef, size(tmp824))
    tmp827 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp833 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp833 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp833))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp836 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp836 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp836))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp839 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp839 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    tmp846 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp846 .= Taylor1(zero(_S), order)
    tmp847 = Array{Taylor1{_S}}(undef, size(tmp846))
    tmp847 .= Taylor1(zero(_S), order)
    tmp848 = Array{Taylor1{_S}}(undef, size(tmp847))
    tmp848 .= Taylor1(zero(_S), order)
    for i = 1:10
        ϕi_plus_4ϕj[i] = Taylor1(constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N]), order)
        tmp824[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
        tmp826[i] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i]), order)
        tmp827[i] = Taylor1(constant_term(tmp824[i]) - constant_term(tmp826[i]), order)
        sj2_plus_2si2_minus_4vivj[i] = Taylor1(constant_term(tmp827[i]) + constant_term(v2[N]), order)
        ϕs_and_vs[i] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i]), order)
        Xij_t_Ui[i] = Taylor1(constant_term(X[i]) * constant_term(ui[i]), order)
        Yij_t_Vi[i] = Taylor1(constant_term(Y[i]) * constant_term(vi[i]), order)
        Zij_t_Wi[i] = Taylor1(constant_term(Z[i]) * constant_term(wi[i]), order)
        tmp833[i] = Taylor1(constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i]), order)
        Rij_dot_Vi[i] = Taylor1(constant_term(tmp833[i]) + constant_term(Zij_t_Wi[i]), order)
        tmp836[i] = Taylor1(constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2)), order)
        pn1t7[i] = Taylor1(constant_term(tmp836[i]) / constant_term(r_p2[i]), order)
        tmp839[i] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i]), order)
        pn1t2_7[i] = Taylor1(constant_term(ϕs_and_vs[i]) - constant_term(tmp839[i]), order)
        pn1t1_7[i] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i]), order)
        pNX_t_X[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(X[i]), order)
        pNY_t_Y[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(Y[i]), order)
        pNZ_t_Z[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(Z[i]), order)
        tmp846[i] = Taylor1(constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i]), order)
        tmp847[i] = Taylor1(constant_term(tmp846[i]) + constant_term(pNZ_t_Z[i]), order)
        tmp848[i] = Taylor1(constant_term(0.5) * constant_term(tmp847[i]), order)
        pn1[i] = Taylor1(constant_term(pn1t1_7[i]) + constant_term(tmp848[i]), order)
        X_t_pn1[i] = Taylor1(constant_term(newton_acc_X[i]) * constant_term(pn1[i]), order)
        Y_t_pn1[i] = Taylor1(constant_term(newton_acc_Y[i]) * constant_term(pn1[i]), order)
        Z_t_pn1[i] = Taylor1(constant_term(newton_acc_Z[i]) * constant_term(pn1[i]), order)
        pNX_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(pn3[i]), order)
        pNY_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(pn3[i]), order)
        pNZ_t_pn3[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(pn3[i]), order)
    end
    tmp856 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp856 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp859 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp859 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp862 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp862 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for i = 1:10
        tmp856[i] = Taylor1(constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i]), order)
        termpnx[i] = Taylor1(constant_term(X_t_pn1[i]) + constant_term(tmp856[i]), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        tmp859[i] = Taylor1(constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i]), order)
        termpny[i] = Taylor1(constant_term(Y_t_pn1[i]) + constant_term(tmp859[i]), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        tmp862[i] = Taylor1(constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i]), order)
        termpnz[i] = Taylor1(constant_term(Z_t_pn1[i]) + constant_term(tmp862[i]), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    for i = 11:Nm1
        X_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_X[i]), order)
        Y_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Y[i]), order)
        Z_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Z[i]), order)
    end
    for i = 11:Nm1
        termpnx[i] = Taylor1(identity(constant_term(X_t_pn1[i])), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        termpny[i] = Taylor1(identity(constant_term(Y_t_pn1[i])), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        termpnz[i] = Taylor1(identity(constant_term(Z_t_pn1[i])), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    postNewtonX = Taylor1(constant_term(pntempX) * constant_term(c_m2), order)
    postNewtonY = Taylor1(constant_term(pntempY) * constant_term(c_m2), order)
    postNewtonZ = Taylor1(constant_term(pntempZ) * constant_term(c_m2), order)
    tmp874 = Taylor1(constant_term(Y[1]) * constant_term(W[1]), order)
    tmp875 = Taylor1(constant_term(Z[1]) * constant_term(V[1]), order)
    hx = Taylor1(constant_term(tmp874) - constant_term(tmp875), order)
    tmp877 = Taylor1(constant_term(Z[1]) * constant_term(U[1]), order)
    tmp878 = Taylor1(constant_term(X[1]) * constant_term(W[1]), order)
    hy = Taylor1(constant_term(tmp877) - constant_term(tmp878), order)
    tmp880 = Taylor1(constant_term(X[1]) * constant_term(V[1]), order)
    tmp881 = Taylor1(constant_term(Y[1]) * constant_term(U[1]), order)
    hz = Taylor1(constant_term(tmp880) - constant_term(tmp881), order)
    tmp883 = Taylor1(constant_term(hz) * constant_term(Y[1]), order)
    tmp884 = Taylor1(constant_term(hy) * constant_term(Z[1]), order)
    t_x = Taylor1(constant_term(tmp883) - constant_term(tmp884), order)
    tmp886 = Taylor1(constant_term(hx) * constant_term(Z[1]), order)
    tmp887 = Taylor1(constant_term(hz) * constant_term(X[1]), order)
    t_y = Taylor1(constant_term(tmp886) - constant_term(tmp887), order)
    tmp889 = Taylor1(constant_term(hy) * constant_term(X[1]), order)
    tmp890 = Taylor1(constant_term(hx) * constant_term(Y[1]), order)
    t_z = Taylor1(constant_term(tmp889) - constant_term(tmp890), order)
    tmp893 = Taylor1(constant_term(t_x) ^ float(constant_term(2)), order)
    tmp895 = Taylor1(constant_term(t_y) ^ float(constant_term(2)), order)
    tmp896 = Taylor1(constant_term(tmp893) + constant_term(tmp895), order)
    tmp898 = Taylor1(constant_term(t_z) ^ float(constant_term(2)), order)
    tmp899 = Taylor1(constant_term(tmp896) + constant_term(tmp898), order)
    t_norm = Taylor1(sqrt(constant_term(tmp899)), order)
    t_x_unit = Taylor1(constant_term(t_x) / constant_term(t_norm), order)
    t_y_unit = Taylor1(constant_term(t_y) / constant_term(t_norm), order)
    t_z_unit = Taylor1(constant_term(t_z) / constant_term(t_norm), order)
    tmp904 = Taylor1(constant_term(X[1]) / constant_term(r_p1d2[1]), order)
    r_x_unit = Taylor1(-(constant_term(tmp904)), order)
    tmp906 = Taylor1(constant_term(Y[1]) / constant_term(r_p1d2[1]), order)
    r_y_unit = Taylor1(-(constant_term(tmp906)), order)
    tmp908 = Taylor1(constant_term(Z[1]) / constant_term(r_p1d2[1]), order)
    r_z_unit = Taylor1(-(constant_term(tmp908)), order)
    g_r = Taylor1(identity(constant_term(r_p2[1])), order)
    A2_t_g_r = Taylor1(constant_term(q[7]) / constant_term(g_r), order)
    A1_t_g_r = Taylor1(constant_term(q[8]) / constant_term(g_r), order)
    tmp912 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_x_unit), order)
    tmp913 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_x_unit), order)
    NGAx = Taylor1(constant_term(tmp912) + constant_term(tmp913), order)
    tmp915 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_y_unit), order)
    tmp916 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_y_unit), order)
    NGAy = Taylor1(constant_term(tmp915) + constant_term(tmp916), order)
    tmp918 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_z_unit), order)
    tmp919 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_z_unit), order)
    NGAz = Taylor1(constant_term(tmp918) + constant_term(tmp919), order)
    tmp921 = Taylor1(constant_term(postNewtonX) + constant_term(accX), order)
    dq[4] = Taylor1(constant_term(tmp921) + constant_term(NGAx), order)
    tmp923 = Taylor1(constant_term(postNewtonY) + constant_term(accY), order)
    dq[5] = Taylor1(constant_term(tmp923) + constant_term(NGAy), order)
    tmp925 = Taylor1(constant_term(postNewtonZ) + constant_term(accZ), order)
    dq[6] = Taylor1(constant_term(tmp925) + constant_term(NGAz), order)
    dq[7] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp806, tmp808, tmp809, tmp811, tmp874, tmp875, tmp877, tmp878, tmp880, tmp881, tmp883, tmp884, tmp886, tmp887, tmp889, tmp890, tmp893, tmp895, tmp896, tmp898, tmp899, tmp904, tmp906, tmp908, tmp912, tmp913, tmp915, tmp916, tmp918, tmp919, tmp921, tmp923, tmp925, pntempX, pntempY, pntempZ, accX, accY, accZ, postNewtonX, postNewtonY, postNewtonZ, hx, hy, hz, t_x, t_y, t_z, t_norm, t_x_unit, t_y_unit, t_z_unit, r_x_unit, r_y_unit, r_z_unit, g_r, A2_t_g_r, A1_t_g_r, NGAx, NGAy, NGAz], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, ui, vi, wi, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newtonianNb_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, t31, t32, t33, r_sin_ϕ, sin_ϕ, ϕ, cos_ϕ, sin2_ϕ, sin3_ϕ, F_J2_x, F_J2_y, F_J2_z, F_J2_x1, F_J2_y1, F_J2_z1, F_J2_x2, F_J2_y2, F_J2_z2, temp_accX_i, temp_accY_i, temp_accZ_i, P_2_sin_ϕ, ∂P_2_sin_ϕ, P_3_sin_ϕ, ∂P_3_sin_ϕ, m_c_ϕ_∂P_2, m_c_ϕ_∂P_3, Λ2j_div_r4, Λ3j_div_r5, F_J_ξ, F_J_ζ, F_J2_ξ, F_J2_ζ, F_J3_ξ, F_J3_ζ, ξx, ξy, ξz, ηx, ηy, ηz, ηx1, ηy1, ηz1, ηx2, ηy2, ηz2, ζx, ζy, ζz, ζx1, ζy1, ζz1, ζx2, ζy2, ζz2, tmp666, tmp668, tmp671, tmp673, tmp676, tmp678, pn2x, pn2y, pn2z, tmp686, tmp689, tmp691, tmp692, tmp694, tmp702, tmp703, tmp714, tmp716, tmp718, tmp720, tmp927, tmp928, tmp730, tmp736, tmp738, tmp742, tmp745, tmp746, tmp749, tmp750, tmp752, tmp754, tmp757, tmp761, tmp764, tmp766, tmp768, tmp798, tmp800, tmp801, tmp803, temp_004, tmp814, tmp816, tmp818, tmp824, tmp826, tmp827, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp833, Rij_dot_Vi, tmp836, pn1t7, tmp839, pn1t2_7, tmp846, tmp847, tmp848, tmp856, termpnx, sumpnx, tmp859, termpny, sumpny, tmp862, termpnz, sumpnz], [Array{Taylor1{_S}, 2}(undef, 0, 0)], [Array{Taylor1{_S}, 3}(undef, 0, 0, 0)], [Array{Taylor1{_S}, 4}(undef, 0, 0, 0, 0)])
end

# TaylorIntegration.jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph!
function TaylorIntegration.jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp806 = __ralloc.v0[1]
    tmp808 = __ralloc.v0[2]
    tmp809 = __ralloc.v0[3]
    tmp811 = __ralloc.v0[4]
    tmp874 = __ralloc.v0[5]
    tmp875 = __ralloc.v0[6]
    tmp877 = __ralloc.v0[7]
    tmp878 = __ralloc.v0[8]
    tmp880 = __ralloc.v0[9]
    tmp881 = __ralloc.v0[10]
    tmp883 = __ralloc.v0[11]
    tmp884 = __ralloc.v0[12]
    tmp886 = __ralloc.v0[13]
    tmp887 = __ralloc.v0[14]
    tmp889 = __ralloc.v0[15]
    tmp890 = __ralloc.v0[16]
    tmp893 = __ralloc.v0[17]
    tmp895 = __ralloc.v0[18]
    tmp896 = __ralloc.v0[19]
    tmp898 = __ralloc.v0[20]
    tmp899 = __ralloc.v0[21]
    tmp904 = __ralloc.v0[22]
    tmp906 = __ralloc.v0[23]
    tmp908 = __ralloc.v0[24]
    tmp912 = __ralloc.v0[25]
    tmp913 = __ralloc.v0[26]
    tmp915 = __ralloc.v0[27]
    tmp916 = __ralloc.v0[28]
    tmp918 = __ralloc.v0[29]
    tmp919 = __ralloc.v0[30]
    tmp921 = __ralloc.v0[31]
    tmp923 = __ralloc.v0[32]
    tmp925 = __ralloc.v0[33]
    pntempX = __ralloc.v0[34]
    pntempY = __ralloc.v0[35]
    pntempZ = __ralloc.v0[36]
    accX = __ralloc.v0[37]
    accY = __ralloc.v0[38]
    accZ = __ralloc.v0[39]
    postNewtonX = __ralloc.v0[40]
    postNewtonY = __ralloc.v0[41]
    postNewtonZ = __ralloc.v0[42]
    hx = __ralloc.v0[43]
    hy = __ralloc.v0[44]
    hz = __ralloc.v0[45]
    t_x = __ralloc.v0[46]
    t_y = __ralloc.v0[47]
    t_z = __ralloc.v0[48]
    t_norm = __ralloc.v0[49]
    t_x_unit = __ralloc.v0[50]
    t_y_unit = __ralloc.v0[51]
    t_z_unit = __ralloc.v0[52]
    r_x_unit = __ralloc.v0[53]
    r_y_unit = __ralloc.v0[54]
    r_z_unit = __ralloc.v0[55]
    g_r = __ralloc.v0[56]
    A2_t_g_r = __ralloc.v0[57]
    A1_t_g_r = __ralloc.v0[58]
    NGAx = __ralloc.v0[59]
    NGAy = __ralloc.v0[60]
    NGAz = __ralloc.v0[61]
    X = __ralloc.v1[1]
    Y = __ralloc.v1[2]
    Z = __ralloc.v1[3]
    r_p2 = __ralloc.v1[4]
    r_p1d2 = __ralloc.v1[5]
    r_p3d2 = __ralloc.v1[6]
    r_p7d2 = __ralloc.v1[7]
    newtonianCoeff = __ralloc.v1[8]
    ui = __ralloc.v1[9]
    vi = __ralloc.v1[10]
    wi = __ralloc.v1[11]
    U = __ralloc.v1[12]
    V = __ralloc.v1[13]
    W = __ralloc.v1[14]
    _4U_m_3X = __ralloc.v1[15]
    _4V_m_3Y = __ralloc.v1[16]
    _4W_m_3Z = __ralloc.v1[17]
    UU = __ralloc.v1[18]
    VV = __ralloc.v1[19]
    WW = __ralloc.v1[20]
    newtonian1b_Potential = __ralloc.v1[21]
    newtonianNb_Potential = __ralloc.v1[22]
    newton_acc_X = __ralloc.v1[23]
    newton_acc_Y = __ralloc.v1[24]
    newton_acc_Z = __ralloc.v1[25]
    v2 = __ralloc.v1[26]
    vi_dot_vj = __ralloc.v1[27]
    pn2 = __ralloc.v1[28]
    U_t_pn2 = __ralloc.v1[29]
    V_t_pn2 = __ralloc.v1[30]
    W_t_pn2 = __ralloc.v1[31]
    pn3 = __ralloc.v1[32]
    pNX_t_pn3 = __ralloc.v1[33]
    pNY_t_pn3 = __ralloc.v1[34]
    pNZ_t_pn3 = __ralloc.v1[35]
    _4ϕj = __ralloc.v1[36]
    ϕi_plus_4ϕj = __ralloc.v1[37]
    sj2_plus_2si2_minus_4vivj = __ralloc.v1[38]
    ϕs_and_vs = __ralloc.v1[39]
    pn1t1_7 = __ralloc.v1[40]
    pNX_t_X = __ralloc.v1[41]
    pNY_t_Y = __ralloc.v1[42]
    pNZ_t_Z = __ralloc.v1[43]
    pn1 = __ralloc.v1[44]
    X_t_pn1 = __ralloc.v1[45]
    Y_t_pn1 = __ralloc.v1[46]
    Z_t_pn1 = __ralloc.v1[47]
    t31 = __ralloc.v1[48]
    t32 = __ralloc.v1[49]
    t33 = __ralloc.v1[50]
    r_sin_ϕ = __ralloc.v1[51]
    sin_ϕ = __ralloc.v1[52]
    ϕ = __ralloc.v1[53]
    cos_ϕ = __ralloc.v1[54]
    sin2_ϕ = __ralloc.v1[55]
    sin3_ϕ = __ralloc.v1[56]
    F_J2_x = __ralloc.v1[57]
    F_J2_y = __ralloc.v1[58]
    F_J2_z = __ralloc.v1[59]
    F_J2_x1 = __ralloc.v1[60]
    F_J2_y1 = __ralloc.v1[61]
    F_J2_z1 = __ralloc.v1[62]
    F_J2_x2 = __ralloc.v1[63]
    F_J2_y2 = __ralloc.v1[64]
    F_J2_z2 = __ralloc.v1[65]
    temp_accX_i = __ralloc.v1[66]
    temp_accY_i = __ralloc.v1[67]
    temp_accZ_i = __ralloc.v1[68]
    P_2_sin_ϕ = __ralloc.v1[69]
    ∂P_2_sin_ϕ = __ralloc.v1[70]
    P_3_sin_ϕ = __ralloc.v1[71]
    ∂P_3_sin_ϕ = __ralloc.v1[72]
    m_c_ϕ_∂P_2 = __ralloc.v1[73]
    m_c_ϕ_∂P_3 = __ralloc.v1[74]
    Λ2j_div_r4 = __ralloc.v1[75]
    Λ3j_div_r5 = __ralloc.v1[76]
    F_J_ξ = __ralloc.v1[77]
    F_J_ζ = __ralloc.v1[78]
    F_J2_ξ = __ralloc.v1[79]
    F_J2_ζ = __ralloc.v1[80]
    F_J3_ξ = __ralloc.v1[81]
    F_J3_ζ = __ralloc.v1[82]
    ξx = __ralloc.v1[83]
    ξy = __ralloc.v1[84]
    ξz = __ralloc.v1[85]
    ηx = __ralloc.v1[86]
    ηy = __ralloc.v1[87]
    ηz = __ralloc.v1[88]
    ηx1 = __ralloc.v1[89]
    ηy1 = __ralloc.v1[90]
    ηz1 = __ralloc.v1[91]
    ηx2 = __ralloc.v1[92]
    ηy2 = __ralloc.v1[93]
    ηz2 = __ralloc.v1[94]
    ζx = __ralloc.v1[95]
    ζy = __ralloc.v1[96]
    ζz = __ralloc.v1[97]
    ζx1 = __ralloc.v1[98]
    ζy1 = __ralloc.v1[99]
    ζz1 = __ralloc.v1[100]
    ζx2 = __ralloc.v1[101]
    ζy2 = __ralloc.v1[102]
    ζz2 = __ralloc.v1[103]
    tmp666 = __ralloc.v1[104]
    tmp668 = __ralloc.v1[105]
    tmp671 = __ralloc.v1[106]
    tmp673 = __ralloc.v1[107]
    tmp676 = __ralloc.v1[108]
    tmp678 = __ralloc.v1[109]
    pn2x = __ralloc.v1[110]
    pn2y = __ralloc.v1[111]
    pn2z = __ralloc.v1[112]
    tmp686 = __ralloc.v1[113]
    tmp689 = __ralloc.v1[114]
    tmp691 = __ralloc.v1[115]
    tmp692 = __ralloc.v1[116]
    tmp694 = __ralloc.v1[117]
    tmp702 = __ralloc.v1[118]
    tmp703 = __ralloc.v1[119]
    tmp714 = __ralloc.v1[120]
    tmp716 = __ralloc.v1[121]
    tmp718 = __ralloc.v1[122]
    tmp720 = __ralloc.v1[123]
    tmp927 = __ralloc.v1[124]
    tmp928 = __ralloc.v1[125]
    tmp730 = __ralloc.v1[126]
    tmp736 = __ralloc.v1[127]
    tmp738 = __ralloc.v1[128]
    tmp742 = __ralloc.v1[129]
    tmp745 = __ralloc.v1[130]
    tmp746 = __ralloc.v1[131]
    tmp749 = __ralloc.v1[132]
    tmp750 = __ralloc.v1[133]
    tmp752 = __ralloc.v1[134]
    tmp754 = __ralloc.v1[135]
    tmp757 = __ralloc.v1[136]
    tmp761 = __ralloc.v1[137]
    tmp764 = __ralloc.v1[138]
    tmp766 = __ralloc.v1[139]
    tmp768 = __ralloc.v1[140]
    tmp798 = __ralloc.v1[141]
    tmp800 = __ralloc.v1[142]
    tmp801 = __ralloc.v1[143]
    tmp803 = __ralloc.v1[144]
    temp_004 = __ralloc.v1[145]
    tmp814 = __ralloc.v1[146]
    tmp816 = __ralloc.v1[147]
    tmp818 = __ralloc.v1[148]
    tmp824 = __ralloc.v1[149]
    tmp826 = __ralloc.v1[150]
    tmp827 = __ralloc.v1[151]
    Xij_t_Ui = __ralloc.v1[152]
    Yij_t_Vi = __ralloc.v1[153]
    Zij_t_Wi = __ralloc.v1[154]
    tmp833 = __ralloc.v1[155]
    Rij_dot_Vi = __ralloc.v1[156]
    tmp836 = __ralloc.v1[157]
    pn1t7 = __ralloc.v1[158]
    tmp839 = __ralloc.v1[159]
    pn1t2_7 = __ralloc.v1[160]
    tmp846 = __ralloc.v1[161]
    tmp847 = __ralloc.v1[162]
    tmp848 = __ralloc.v1[163]
    tmp856 = __ralloc.v1[164]
    termpnx = __ralloc.v1[165]
    sumpnx = __ralloc.v1[166]
    tmp859 = __ralloc.v1[167]
    termpny = __ralloc.v1[168]
    sumpny = __ralloc.v1[169]
    tmp862 = __ralloc.v1[170]
    termpnz = __ralloc.v1[171]
    sumpnz = __ralloc.v1[172]
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = params[1]
    local acceph_t = params[2]
    local newtonianNb_Potential_t = params[3]
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    pntempX.coeffs[1] = identity(constant_term(zero_q_1))
    pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
    pntempY.coeffs[1] = identity(constant_term(zero_q_1))
    pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
    pntempZ.coeffs[1] = identity(constant_term(zero_q_1))
    pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    accX.coeffs[1] = identity(constant_term(zero_q_1))
    accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
    accY.coeffs[1] = identity(constant_term(zero_q_1))
    accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
    accZ.coeffs[1] = identity(constant_term(zero_q_1))
    accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    (dq[1]).coeffs[1] = identity(constant_term(q[4]))
    (dq[1]).coeffs[2:order + 1] .= zero((dq[1]).coeffs[1])
    (dq[2]).coeffs[1] = identity(constant_term(q[5]))
    (dq[2]).coeffs[2:order + 1] .= zero((dq[2]).coeffs[1])
    (dq[3]).coeffs[1] = identity(constant_term(q[6]))
    (dq[3]).coeffs[2:order + 1] .= zero((dq[3]).coeffs[1])
    (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(zero_q_1))
    (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
    for i = 1:Nm1
        (ui[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2]))
        (ui[i]).coeffs[2:order + 1] .= zero((ui[i]).coeffs[1])
        (vi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1]))
        (vi[i]).coeffs[2:order + 1] .= zero((vi[i]).coeffs[1])
        (wi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)]))
        (wi[i]).coeffs[2:order + 1] .= zero((wi[i]).coeffs[1])
        (X[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1])
        (X[i]).coeffs[2:order + 1] .= zero((X[i]).coeffs[1])
        (Y[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2])
        (Y[i]).coeffs[2:order + 1] .= zero((Y[i]).coeffs[1])
        (Z[i]).coeffs[1] = constant_term(ss16asteph_t[3i]) - constant_term(q[3])
        (Z[i]).coeffs[2:order + 1] .= zero((Z[i]).coeffs[1])
        (U[i]).coeffs[1] = constant_term(ui[i]) - constant_term(dq[1])
        (U[i]).coeffs[2:order + 1] .= zero((U[i]).coeffs[1])
        (V[i]).coeffs[1] = constant_term(vi[i]) - constant_term(dq[2])
        (V[i]).coeffs[2:order + 1] .= zero((V[i]).coeffs[1])
        (W[i]).coeffs[1] = constant_term(wi[i]) - constant_term(dq[3])
        (W[i]).coeffs[2:order + 1] .= zero((W[i]).coeffs[1])
        (tmp666[1]).coeffs[1] = constant_term(4) * constant_term(dq[1])
        (tmp666[1]).coeffs[2:order + 1] .= zero((tmp666[1]).coeffs[1])
        (tmp668[i]).coeffs[1] = constant_term(3) * constant_term(ui[i])
        (tmp668[i]).coeffs[2:order + 1] .= zero((tmp668[i]).coeffs[1])
        (_4U_m_3X[i]).coeffs[1] = constant_term(tmp666[1]) - constant_term(tmp668[i])
        (_4U_m_3X[i]).coeffs[2:order + 1] .= zero((_4U_m_3X[i]).coeffs[1])
        (tmp671[2]).coeffs[1] = constant_term(4) * constant_term(dq[2])
        (tmp671[2]).coeffs[2:order + 1] .= zero((tmp671[2]).coeffs[1])
        (tmp673[i]).coeffs[1] = constant_term(3) * constant_term(vi[i])
        (tmp673[i]).coeffs[2:order + 1] .= zero((tmp673[i]).coeffs[1])
        (_4V_m_3Y[i]).coeffs[1] = constant_term(tmp671[2]) - constant_term(tmp673[i])
        (_4V_m_3Y[i]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i]).coeffs[1])
        (tmp676[3]).coeffs[1] = constant_term(4) * constant_term(dq[3])
        (tmp676[3]).coeffs[2:order + 1] .= zero((tmp676[3]).coeffs[1])
        (tmp678[i]).coeffs[1] = constant_term(3) * constant_term(wi[i])
        (tmp678[i]).coeffs[2:order + 1] .= zero((tmp678[i]).coeffs[1])
        (_4W_m_3Z[i]).coeffs[1] = constant_term(tmp676[3]) - constant_term(tmp678[i])
        (_4W_m_3Z[i]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i]).coeffs[1])
        (pn2x[i]).coeffs[1] = constant_term(X[i]) * constant_term(_4U_m_3X[i])
        (pn2x[i]).coeffs[2:order + 1] .= zero((pn2x[i]).coeffs[1])
        (pn2y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(_4V_m_3Y[i])
        (pn2y[i]).coeffs[2:order + 1] .= zero((pn2y[i]).coeffs[1])
        (pn2z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(_4W_m_3Z[i])
        (pn2z[i]).coeffs[2:order + 1] .= zero((pn2z[i]).coeffs[1])
        (UU[i]).coeffs[1] = constant_term(ui[i]) * constant_term(dq[1])
        (UU[i]).coeffs[2:order + 1] .= zero((UU[i]).coeffs[1])
        (VV[i]).coeffs[1] = constant_term(vi[i]) * constant_term(dq[2])
        (VV[i]).coeffs[2:order + 1] .= zero((VV[i]).coeffs[1])
        (WW[i]).coeffs[1] = constant_term(wi[i]) * constant_term(dq[3])
        (WW[i]).coeffs[2:order + 1] .= zero((WW[i]).coeffs[1])
        (tmp686[i]).coeffs[1] = constant_term(UU[i]) + constant_term(VV[i])
        (tmp686[i]).coeffs[2:order + 1] .= zero((tmp686[i]).coeffs[1])
        (vi_dot_vj[i]).coeffs[1] = constant_term(tmp686[i]) + constant_term(WW[i])
        (vi_dot_vj[i]).coeffs[2:order + 1] .= zero((vi_dot_vj[i]).coeffs[1])
        (tmp689[i]).coeffs[1] = constant_term(X[i]) ^ float(constant_term(2))
        (tmp689[i]).coeffs[2:order + 1] .= zero((tmp689[i]).coeffs[1])
        (tmp691[i]).coeffs[1] = constant_term(Y[i]) ^ float(constant_term(2))
        (tmp691[i]).coeffs[2:order + 1] .= zero((tmp691[i]).coeffs[1])
        (tmp692[i]).coeffs[1] = constant_term(tmp689[i]) + constant_term(tmp691[i])
        (tmp692[i]).coeffs[2:order + 1] .= zero((tmp692[i]).coeffs[1])
        (tmp694[i]).coeffs[1] = constant_term(Z[i]) ^ float(constant_term(2))
        (tmp694[i]).coeffs[2:order + 1] .= zero((tmp694[i]).coeffs[1])
        (r_p2[i]).coeffs[1] = constant_term(tmp692[i]) + constant_term(tmp694[i])
        (r_p2[i]).coeffs[2:order + 1] .= zero((r_p2[i]).coeffs[1])
        (r_p1d2[i]).coeffs[1] = sqrt(constant_term(r_p2[i]))
        (r_p1d2[i]).coeffs[2:order + 1] .= zero((r_p1d2[i]).coeffs[1])
        (r_p3d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(1.5))
        (r_p3d2[i]).coeffs[2:order + 1] .= zero((r_p3d2[i]).coeffs[1])
        (r_p7d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(3.5))
        (r_p7d2[i]).coeffs[2:order + 1] .= zero((r_p7d2[i]).coeffs[1])
        (newtonianCoeff[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i])
        (newtonianCoeff[i]).coeffs[2:order + 1] .= zero((newtonianCoeff[i]).coeffs[1])
        (tmp702[i]).coeffs[1] = constant_term(pn2x[i]) + constant_term(pn2y[i])
        (tmp702[i]).coeffs[2:order + 1] .= zero((tmp702[i]).coeffs[1])
        (tmp703[i]).coeffs[1] = constant_term(tmp702[i]) + constant_term(pn2z[i])
        (tmp703[i]).coeffs[2:order + 1] .= zero((tmp703[i]).coeffs[1])
        (pn2[i]).coeffs[1] = constant_term(newtonianCoeff[i]) * constant_term(tmp703[i])
        (pn2[i]).coeffs[2:order + 1] .= zero((pn2[i]).coeffs[1])
        (newton_acc_X[i]).coeffs[1] = constant_term(X[i]) * constant_term(newtonianCoeff[i])
        (newton_acc_X[i]).coeffs[2:order + 1] .= zero((newton_acc_X[i]).coeffs[1])
        (newton_acc_Y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(newtonianCoeff[i])
        (newton_acc_Y[i]).coeffs[2:order + 1] .= zero((newton_acc_Y[i]).coeffs[1])
        (newton_acc_Z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(newtonianCoeff[i])
        (newton_acc_Z[i]).coeffs[2:order + 1] .= zero((newton_acc_Z[i]).coeffs[1])
        (newtonian1b_Potential[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i])
        (newtonian1b_Potential[i]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i]).coeffs[1])
        (pn3[i]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i])
        (pn3[i]).coeffs[2:order + 1] .= zero((pn3[i]).coeffs[1])
        (U_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(U[i])
        (U_t_pn2[i]).coeffs[2:order + 1] .= zero((U_t_pn2[i]).coeffs[1])
        (V_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(V[i])
        (V_t_pn2[i]).coeffs[2:order + 1] .= zero((V_t_pn2[i]).coeffs[1])
        (W_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(W[i])
        (W_t_pn2[i]).coeffs[2:order + 1] .= zero((W_t_pn2[i]).coeffs[1])
        if UJ_interaction[i]
            (tmp714[i]).coeffs[1] = -(constant_term(X[i]))
            (tmp714[i]).coeffs[2:order + 1] .= zero((tmp714[i]).coeffs[1])
            (t31[i]).coeffs[1] = constant_term(tmp714[i]) * constant_term(M_[1, 3, i])
            (t31[i]).coeffs[2:order + 1] .= zero((t31[i]).coeffs[1])
            (tmp716[i]).coeffs[1] = -(constant_term(Y[i]))
            (tmp716[i]).coeffs[2:order + 1] .= zero((tmp716[i]).coeffs[1])
            (t32[i]).coeffs[1] = constant_term(tmp716[i]) * constant_term(M_[2, 3, i])
            (t32[i]).coeffs[2:order + 1] .= zero((t32[i]).coeffs[1])
            (tmp718[i]).coeffs[1] = -(constant_term(Z[i]))
            (tmp718[i]).coeffs[2:order + 1] .= zero((tmp718[i]).coeffs[1])
            (t33[i]).coeffs[1] = constant_term(tmp718[i]) * constant_term(M_[3, 3, i])
            (t33[i]).coeffs[2:order + 1] .= zero((t33[i]).coeffs[1])
            (tmp720[i]).coeffs[1] = constant_term(t31[i]) + constant_term(t32[i])
            (tmp720[i]).coeffs[2:order + 1] .= zero((tmp720[i]).coeffs[1])
            (r_sin_ϕ[i]).coeffs[1] = constant_term(tmp720[i]) + constant_term(t33[i])
            (r_sin_ϕ[i]).coeffs[2:order + 1] .= zero((r_sin_ϕ[i]).coeffs[1])
            (sin_ϕ[i]).coeffs[1] = constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i])
            (sin_ϕ[i]).coeffs[2:order + 1] .= zero((sin_ϕ[i]).coeffs[1])
            (ϕ[i]).coeffs[1] = asin(constant_term(sin_ϕ[i]))
            (ϕ[i]).coeffs[2:order + 1] .= zero((ϕ[i]).coeffs[1])
            (tmp927[i]).coeffs[1] = sqrt(1 - constant_term(sin_ϕ[i]) ^ 2)
            (tmp927[i]).coeffs[2:order + 1] .= zero((tmp927[i]).coeffs[1])
            (cos_ϕ[i]).coeffs[1] = cos(constant_term(ϕ[i]))
            (cos_ϕ[i]).coeffs[2:order + 1] .= zero((cos_ϕ[i]).coeffs[1])
            (tmp928[i]).coeffs[1] = sin(constant_term(ϕ[i]))
            (tmp928[i]).coeffs[2:order + 1] .= zero((tmp928[i]).coeffs[1])
            (sin2_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(2))
            (sin2_ϕ[i]).coeffs[2:order + 1] .= zero((sin2_ϕ[i]).coeffs[1])
            (sin3_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(3))
            (sin3_ϕ[i]).coeffs[2:order + 1] .= zero((sin3_ϕ[i]).coeffs[1])
            (tmp730[i]).coeffs[1] = constant_term(1.5) * constant_term(sin2_ϕ[i])
            (tmp730[i]).coeffs[2:order + 1] .= zero((tmp730[i]).coeffs[1])
            (P_2_sin_ϕ[i]).coeffs[1] = constant_term(tmp730[i]) - constant_term(0.5)
            (P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_2_sin_ϕ[i]).coeffs[1])
            (∂P_2_sin_ϕ[i]).coeffs[1] = constant_term(3) * constant_term(sin_ϕ[i])
            (∂P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_2_sin_ϕ[i]).coeffs[1])
            (tmp736[i]).coeffs[1] = constant_term(-1.5) * constant_term(sin_ϕ[i])
            (tmp736[i]).coeffs[2:order + 1] .= zero((tmp736[i]).coeffs[1])
            (tmp738[i]).coeffs[1] = constant_term(2.5) * constant_term(sin3_ϕ[i])
            (tmp738[i]).coeffs[2:order + 1] .= zero((tmp738[i]).coeffs[1])
            (P_3_sin_ϕ[i]).coeffs[1] = constant_term(tmp736[i]) + constant_term(tmp738[i])
            (P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_3_sin_ϕ[i]).coeffs[1])
            (tmp742[i]).coeffs[1] = constant_term(7.5) * constant_term(sin2_ϕ[i])
            (tmp742[i]).coeffs[2:order + 1] .= zero((tmp742[i]).coeffs[1])
            (∂P_3_sin_ϕ[i]).coeffs[1] = constant_term(-1.5) + constant_term(tmp742[i])
            (∂P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_3_sin_ϕ[i]).coeffs[1])
            (tmp745[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(2))
            (tmp745[i]).coeffs[2:order + 1] .= zero((tmp745[i]).coeffs[1])
            (tmp746[i]).coeffs[1] = constant_term(Λ2[i]) / constant_term(tmp745[i])
            (tmp746[i]).coeffs[2:order + 1] .= zero((tmp746[i]).coeffs[1])
            (Λ2j_div_r4[i]).coeffs[1] = -(constant_term(tmp746[i]))
            (Λ2j_div_r4[i]).coeffs[2:order + 1] .= zero((Λ2j_div_r4[i]).coeffs[1])
            (tmp749[i]).coeffs[1] = constant_term(r_p1d2[i]) ^ float(constant_term(5))
            (tmp749[i]).coeffs[2:order + 1] .= zero((tmp749[i]).coeffs[1])
            (tmp750[i]).coeffs[1] = constant_term(Λ3[i]) / constant_term(tmp749[i])
            (tmp750[i]).coeffs[2:order + 1] .= zero((tmp750[i]).coeffs[1])
            (Λ3j_div_r5[i]).coeffs[1] = -(constant_term(tmp750[i]))
            (Λ3j_div_r5[i]).coeffs[2:order + 1] .= zero((Λ3j_div_r5[i]).coeffs[1])
            (tmp752[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
            (tmp752[i]).coeffs[2:order + 1] .= zero((tmp752[i]).coeffs[1])
            (m_c_ϕ_∂P_2[i]).coeffs[1] = constant_term(tmp752[i]) * constant_term(∂P_2_sin_ϕ[i])
            (m_c_ϕ_∂P_2[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_2[i]).coeffs[1])
            (tmp754[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
            (tmp754[i]).coeffs[2:order + 1] .= zero((tmp754[i]).coeffs[1])
            (m_c_ϕ_∂P_3[i]).coeffs[1] = constant_term(tmp754[i]) * constant_term(∂P_3_sin_ϕ[i])
            (m_c_ϕ_∂P_3[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_3[i]).coeffs[1])
            (tmp757[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(3)
            (tmp757[i]).coeffs[2:order + 1] .= zero((tmp757[i]).coeffs[1])
            (F_J2_ξ[i]).coeffs[1] = constant_term(tmp757[i]) * constant_term(P_2_sin_ϕ[i])
            (F_J2_ξ[i]).coeffs[2:order + 1] .= zero((F_J2_ξ[i]).coeffs[1])
            (F_J2_ζ[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i])
            (F_J2_ζ[i]).coeffs[2:order + 1] .= zero((F_J2_ζ[i]).coeffs[1])
            (tmp761[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(4)
            (tmp761[i]).coeffs[2:order + 1] .= zero((tmp761[i]).coeffs[1])
            (F_J3_ξ[i]).coeffs[1] = constant_term(tmp761[i]) * constant_term(P_3_sin_ϕ[i])
            (F_J3_ξ[i]).coeffs[2:order + 1] .= zero((F_J3_ξ[i]).coeffs[1])
            (F_J3_ζ[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i])
            (F_J3_ζ[i]).coeffs[2:order + 1] .= zero((F_J3_ζ[i]).coeffs[1])
            (F_J_ξ[i]).coeffs[1] = identity(constant_term(F_J2_ξ[i]))
            (F_J_ξ[i]).coeffs[2:order + 1] .= zero((F_J_ξ[i]).coeffs[1])
            (F_J_ζ[i]).coeffs[1] = identity(constant_term(F_J2_ζ[i]))
            (F_J_ζ[i]).coeffs[2:order + 1] .= zero((F_J_ζ[i]).coeffs[1])
            (tmp764[i]).coeffs[1] = -(constant_term(X[i]))
            (tmp764[i]).coeffs[2:order + 1] .= zero((tmp764[i]).coeffs[1])
            (ξx[i]).coeffs[1] = constant_term(tmp764[i]) / constant_term(r_p1d2[i])
            (ξx[i]).coeffs[2:order + 1] .= zero((ξx[i]).coeffs[1])
            (tmp766[i]).coeffs[1] = -(constant_term(Y[i]))
            (tmp766[i]).coeffs[2:order + 1] .= zero((tmp766[i]).coeffs[1])
            (ξy[i]).coeffs[1] = constant_term(tmp766[i]) / constant_term(r_p1d2[i])
            (ξy[i]).coeffs[2:order + 1] .= zero((ξy[i]).coeffs[1])
            (tmp768[i]).coeffs[1] = -(constant_term(Z[i]))
            (tmp768[i]).coeffs[2:order + 1] .= zero((tmp768[i]).coeffs[1])
            (ξz[i]).coeffs[1] = constant_term(tmp768[i]) / constant_term(r_p1d2[i])
            (ξz[i]).coeffs[2:order + 1] .= zero((ξz[i]).coeffs[1])
            (ηx1[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξz[i])
            (ηx1[i]).coeffs[2:order + 1] .= zero((ηx1[i]).coeffs[1])
            (ηy1[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξx[i])
            (ηy1[i]).coeffs[2:order + 1] .= zero((ηy1[i]).coeffs[1])
            (ηz1[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξy[i])
            (ηz1[i]).coeffs[2:order + 1] .= zero((ηz1[i]).coeffs[1])
            (ηx2[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξy[i])
            (ηx2[i]).coeffs[2:order + 1] .= zero((ηx2[i]).coeffs[1])
            (ηy2[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξz[i])
            (ηy2[i]).coeffs[2:order + 1] .= zero((ηy2[i]).coeffs[1])
            (ηz2[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξx[i])
            (ηz2[i]).coeffs[2:order + 1] .= zero((ηz2[i]).coeffs[1])
            (ηx[i]).coeffs[1] = constant_term(ηx1[i]) - constant_term(ηx2[i])
            (ηx[i]).coeffs[2:order + 1] .= zero((ηx[i]).coeffs[1])
            (ηy[i]).coeffs[1] = constant_term(ηy1[i]) - constant_term(ηy2[i])
            (ηy[i]).coeffs[2:order + 1] .= zero((ηy[i]).coeffs[1])
            (ηz[i]).coeffs[1] = constant_term(ηz1[i]) - constant_term(ηz2[i])
            (ηz[i]).coeffs[2:order + 1] .= zero((ηz[i]).coeffs[1])
            (ζx1[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηz[i])
            (ζx1[i]).coeffs[2:order + 1] .= zero((ζx1[i]).coeffs[1])
            (ζy1[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηx[i])
            (ζy1[i]).coeffs[2:order + 1] .= zero((ζy1[i]).coeffs[1])
            (ζz1[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηy[i])
            (ζz1[i]).coeffs[2:order + 1] .= zero((ζz1[i]).coeffs[1])
            (ζx2[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηy[i])
            (ζx2[i]).coeffs[2:order + 1] .= zero((ζx2[i]).coeffs[1])
            (ζy2[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηz[i])
            (ζy2[i]).coeffs[2:order + 1] .= zero((ζy2[i]).coeffs[1])
            (ζz2[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηx[i])
            (ζz2[i]).coeffs[2:order + 1] .= zero((ζz2[i]).coeffs[1])
            (ζx[i]).coeffs[1] = constant_term(ζx1[i]) - constant_term(ζx2[i])
            (ζx[i]).coeffs[2:order + 1] .= zero((ζx[i]).coeffs[1])
            (ζy[i]).coeffs[1] = constant_term(ζy1[i]) - constant_term(ζy2[i])
            (ζy[i]).coeffs[2:order + 1] .= zero((ζy[i]).coeffs[1])
            (ζz[i]).coeffs[1] = constant_term(ζz1[i]) - constant_term(ζz2[i])
            (ζz[i]).coeffs[2:order + 1] .= zero((ζz[i]).coeffs[1])
            (F_J2_x1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξx[i])
            (F_J2_x1[i]).coeffs[2:order + 1] .= zero((F_J2_x1[i]).coeffs[1])
            (F_J2_y1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξy[i])
            (F_J2_y1[i]).coeffs[2:order + 1] .= zero((F_J2_y1[i]).coeffs[1])
            (F_J2_z1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξz[i])
            (F_J2_z1[i]).coeffs[2:order + 1] .= zero((F_J2_z1[i]).coeffs[1])
            (F_J2_x2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζx[i])
            (F_J2_x2[i]).coeffs[2:order + 1] .= zero((F_J2_x2[i]).coeffs[1])
            (F_J2_y2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζy[i])
            (F_J2_y2[i]).coeffs[2:order + 1] .= zero((F_J2_y2[i]).coeffs[1])
            (F_J2_z2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζz[i])
            (F_J2_z2[i]).coeffs[2:order + 1] .= zero((F_J2_z2[i]).coeffs[1])
            (F_J2_x[i]).coeffs[1] = constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i])
            (F_J2_x[i]).coeffs[2:order + 1] .= zero((F_J2_x[i]).coeffs[1])
            (F_J2_y[i]).coeffs[1] = constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i])
            (F_J2_y[i]).coeffs[2:order + 1] .= zero((F_J2_y[i]).coeffs[1])
            (F_J2_z[i]).coeffs[1] = constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i])
            (F_J2_z[i]).coeffs[2:order + 1] .= zero((F_J2_z[i]).coeffs[1])
        end
        (tmp798[i]).coeffs[1] = constant_term(ui[i]) ^ float(constant_term(2))
        (tmp798[i]).coeffs[2:order + 1] .= zero((tmp798[i]).coeffs[1])
        (tmp800[i]).coeffs[1] = constant_term(vi[i]) ^ float(constant_term(2))
        (tmp800[i]).coeffs[2:order + 1] .= zero((tmp800[i]).coeffs[1])
        (tmp801[i]).coeffs[1] = constant_term(tmp798[i]) + constant_term(tmp800[i])
        (tmp801[i]).coeffs[2:order + 1] .= zero((tmp801[i]).coeffs[1])
        (tmp803[i]).coeffs[1] = constant_term(wi[i]) ^ float(constant_term(2))
        (tmp803[i]).coeffs[2:order + 1] .= zero((tmp803[i]).coeffs[1])
        (v2[i]).coeffs[1] = constant_term(tmp801[i]) + constant_term(tmp803[i])
        (v2[i]).coeffs[2:order + 1] .= zero((v2[i]).coeffs[1])
    end
    tmp806.coeffs[1] = constant_term(q[4]) ^ float(constant_term(2))
    tmp806.coeffs[2:order + 1] .= zero(tmp806.coeffs[1])
    tmp808.coeffs[1] = constant_term(q[5]) ^ float(constant_term(2))
    tmp808.coeffs[2:order + 1] .= zero(tmp808.coeffs[1])
    tmp809.coeffs[1] = constant_term(tmp806) + constant_term(tmp808)
    tmp809.coeffs[2:order + 1] .= zero(tmp809.coeffs[1])
    tmp811.coeffs[1] = constant_term(q[6]) ^ float(constant_term(2))
    tmp811.coeffs[2:order + 1] .= zero(tmp811.coeffs[1])
    (v2[N]).coeffs[1] = constant_term(tmp809) + constant_term(tmp811)
    (v2[N]).coeffs[2:order + 1] .= zero((v2[N]).coeffs[1])
    for i = 1:Nm1
        (temp_004[i]).coeffs[1] = constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N])
        (temp_004[i]).coeffs[2:order + 1] .= zero((temp_004[i]).coeffs[1])
        (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(temp_004[i]))
        (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
        if UJ_interaction[i]
            (tmp814[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_x[i])
            (tmp814[i]).coeffs[2:order + 1] .= zero((tmp814[i]).coeffs[1])
            (temp_accX_i[i]).coeffs[1] = constant_term(accX) - constant_term(tmp814[i])
            (temp_accX_i[i]).coeffs[2:order + 1] .= zero((temp_accX_i[i]).coeffs[1])
            accX.coeffs[1] = identity(constant_term(temp_accX_i[i]))
            accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
            (tmp816[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_y[i])
            (tmp816[i]).coeffs[2:order + 1] .= zero((tmp816[i]).coeffs[1])
            (temp_accY_i[i]).coeffs[1] = constant_term(accY) - constant_term(tmp816[i])
            (temp_accY_i[i]).coeffs[2:order + 1] .= zero((temp_accY_i[i]).coeffs[1])
            accY.coeffs[1] = identity(constant_term(temp_accY_i[i]))
            accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
            (tmp818[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_z[i])
            (tmp818[i]).coeffs[2:order + 1] .= zero((tmp818[i]).coeffs[1])
            (temp_accZ_i[i]).coeffs[1] = constant_term(accZ) - constant_term(tmp818[i])
            (temp_accZ_i[i]).coeffs[2:order + 1] .= zero((temp_accZ_i[i]).coeffs[1])
            accZ.coeffs[1] = identity(constant_term(temp_accZ_i[i]))
            accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
        end
    end
    (_4ϕj[N]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[N])
    (_4ϕj[N]).coeffs[2:order + 1] .= zero((_4ϕj[N]).coeffs[1])
    for i = 1:10
        (ϕi_plus_4ϕj[i]).coeffs[1] = constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N])
        (ϕi_plus_4ϕj[i]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i]).coeffs[1])
        (tmp824[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
        (tmp824[i]).coeffs[2:order + 1] .= zero((tmp824[i]).coeffs[1])
        (tmp826[i]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i])
        (tmp826[i]).coeffs[2:order + 1] .= zero((tmp826[i]).coeffs[1])
        (tmp827[i]).coeffs[1] = constant_term(tmp824[i]) - constant_term(tmp826[i])
        (tmp827[i]).coeffs[2:order + 1] .= zero((tmp827[i]).coeffs[1])
        (sj2_plus_2si2_minus_4vivj[i]).coeffs[1] = constant_term(tmp827[i]) + constant_term(v2[N])
        (sj2_plus_2si2_minus_4vivj[i]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i]).coeffs[1])
        (ϕs_and_vs[i]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i])
        (ϕs_and_vs[i]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i]).coeffs[1])
        (Xij_t_Ui[i]).coeffs[1] = constant_term(X[i]) * constant_term(ui[i])
        (Xij_t_Ui[i]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i]).coeffs[1])
        (Yij_t_Vi[i]).coeffs[1] = constant_term(Y[i]) * constant_term(vi[i])
        (Yij_t_Vi[i]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i]).coeffs[1])
        (Zij_t_Wi[i]).coeffs[1] = constant_term(Z[i]) * constant_term(wi[i])
        (Zij_t_Wi[i]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i]).coeffs[1])
        (tmp833[i]).coeffs[1] = constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i])
        (tmp833[i]).coeffs[2:order + 1] .= zero((tmp833[i]).coeffs[1])
        (Rij_dot_Vi[i]).coeffs[1] = constant_term(tmp833[i]) + constant_term(Zij_t_Wi[i])
        (Rij_dot_Vi[i]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i]).coeffs[1])
        (tmp836[i]).coeffs[1] = constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2))
        (tmp836[i]).coeffs[2:order + 1] .= zero((tmp836[i]).coeffs[1])
        (pn1t7[i]).coeffs[1] = constant_term(tmp836[i]) / constant_term(r_p2[i])
        (pn1t7[i]).coeffs[2:order + 1] .= zero((pn1t7[i]).coeffs[1])
        (tmp839[i]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i])
        (tmp839[i]).coeffs[2:order + 1] .= zero((tmp839[i]).coeffs[1])
        (pn1t2_7[i]).coeffs[1] = constant_term(ϕs_and_vs[i]) - constant_term(tmp839[i])
        (pn1t2_7[i]).coeffs[2:order + 1] .= zero((pn1t2_7[i]).coeffs[1])
        (pn1t1_7[i]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i])
        (pn1t1_7[i]).coeffs[2:order + 1] .= zero((pn1t1_7[i]).coeffs[1])
        (pNX_t_X[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(X[i])
        (pNX_t_X[i]).coeffs[2:order + 1] .= zero((pNX_t_X[i]).coeffs[1])
        (pNY_t_Y[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(Y[i])
        (pNY_t_Y[i]).coeffs[2:order + 1] .= zero((pNY_t_Y[i]).coeffs[1])
        (pNZ_t_Z[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(Z[i])
        (pNZ_t_Z[i]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i]).coeffs[1])
        (tmp846[i]).coeffs[1] = constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i])
        (tmp846[i]).coeffs[2:order + 1] .= zero((tmp846[i]).coeffs[1])
        (tmp847[i]).coeffs[1] = constant_term(tmp846[i]) + constant_term(pNZ_t_Z[i])
        (tmp847[i]).coeffs[2:order + 1] .= zero((tmp847[i]).coeffs[1])
        (tmp848[i]).coeffs[1] = constant_term(0.5) * constant_term(tmp847[i])
        (tmp848[i]).coeffs[2:order + 1] .= zero((tmp848[i]).coeffs[1])
        (pn1[i]).coeffs[1] = constant_term(pn1t1_7[i]) + constant_term(tmp848[i])
        (pn1[i]).coeffs[2:order + 1] .= zero((pn1[i]).coeffs[1])
        (X_t_pn1[i]).coeffs[1] = constant_term(newton_acc_X[i]) * constant_term(pn1[i])
        (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
        (Y_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Y[i]) * constant_term(pn1[i])
        (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
        (Z_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Z[i]) * constant_term(pn1[i])
        (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
        (pNX_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(pn3[i])
        (pNX_t_pn3[i]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i]).coeffs[1])
        (pNY_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(pn3[i])
        (pNY_t_pn3[i]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i]).coeffs[1])
        (pNZ_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(pn3[i])
        (pNZ_t_pn3[i]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i]).coeffs[1])
    end
    for i = 1:10
        (tmp856[i]).coeffs[1] = constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i])
        (tmp856[i]).coeffs[2:order + 1] .= zero((tmp856[i]).coeffs[1])
        (termpnx[i]).coeffs[1] = constant_term(X_t_pn1[i]) + constant_term(tmp856[i])
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (tmp859[i]).coeffs[1] = constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i])
        (tmp859[i]).coeffs[2:order + 1] .= zero((tmp859[i]).coeffs[1])
        (termpny[i]).coeffs[1] = constant_term(Y_t_pn1[i]) + constant_term(tmp859[i])
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (tmp862[i]).coeffs[1] = constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i])
        (tmp862[i]).coeffs[2:order + 1] .= zero((tmp862[i]).coeffs[1])
        (termpnz[i]).coeffs[1] = constant_term(Z_t_pn1[i]) + constant_term(tmp862[i])
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    for i = 11:Nm1
        (X_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_X[i])
        (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
        (Y_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Y[i])
        (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
        (Z_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Z[i])
        (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
    end
    for i = 11:Nm1
        (termpnx[i]).coeffs[1] = identity(constant_term(X_t_pn1[i]))
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (termpny[i]).coeffs[1] = identity(constant_term(Y_t_pn1[i]))
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (termpnz[i]).coeffs[1] = identity(constant_term(Z_t_pn1[i]))
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    postNewtonX.coeffs[1] = constant_term(pntempX) * constant_term(c_m2)
    postNewtonX.coeffs[2:order + 1] .= zero(postNewtonX.coeffs[1])
    postNewtonY.coeffs[1] = constant_term(pntempY) * constant_term(c_m2)
    postNewtonY.coeffs[2:order + 1] .= zero(postNewtonY.coeffs[1])
    postNewtonZ.coeffs[1] = constant_term(pntempZ) * constant_term(c_m2)
    postNewtonZ.coeffs[2:order + 1] .= zero(postNewtonZ.coeffs[1])
    tmp874.coeffs[1] = constant_term(Y[1]) * constant_term(W[1])
    tmp874.coeffs[2:order + 1] .= zero(tmp874.coeffs[1])
    tmp875.coeffs[1] = constant_term(Z[1]) * constant_term(V[1])
    tmp875.coeffs[2:order + 1] .= zero(tmp875.coeffs[1])
    hx.coeffs[1] = constant_term(tmp874) - constant_term(tmp875)
    hx.coeffs[2:order + 1] .= zero(hx.coeffs[1])
    tmp877.coeffs[1] = constant_term(Z[1]) * constant_term(U[1])
    tmp877.coeffs[2:order + 1] .= zero(tmp877.coeffs[1])
    tmp878.coeffs[1] = constant_term(X[1]) * constant_term(W[1])
    tmp878.coeffs[2:order + 1] .= zero(tmp878.coeffs[1])
    hy.coeffs[1] = constant_term(tmp877) - constant_term(tmp878)
    hy.coeffs[2:order + 1] .= zero(hy.coeffs[1])
    tmp880.coeffs[1] = constant_term(X[1]) * constant_term(V[1])
    tmp880.coeffs[2:order + 1] .= zero(tmp880.coeffs[1])
    tmp881.coeffs[1] = constant_term(Y[1]) * constant_term(U[1])
    tmp881.coeffs[2:order + 1] .= zero(tmp881.coeffs[1])
    hz.coeffs[1] = constant_term(tmp880) - constant_term(tmp881)
    hz.coeffs[2:order + 1] .= zero(hz.coeffs[1])
    tmp883.coeffs[1] = constant_term(hz) * constant_term(Y[1])
    tmp883.coeffs[2:order + 1] .= zero(tmp883.coeffs[1])
    tmp884.coeffs[1] = constant_term(hy) * constant_term(Z[1])
    tmp884.coeffs[2:order + 1] .= zero(tmp884.coeffs[1])
    t_x.coeffs[1] = constant_term(tmp883) - constant_term(tmp884)
    t_x.coeffs[2:order + 1] .= zero(t_x.coeffs[1])
    tmp886.coeffs[1] = constant_term(hx) * constant_term(Z[1])
    tmp886.coeffs[2:order + 1] .= zero(tmp886.coeffs[1])
    tmp887.coeffs[1] = constant_term(hz) * constant_term(X[1])
    tmp887.coeffs[2:order + 1] .= zero(tmp887.coeffs[1])
    t_y.coeffs[1] = constant_term(tmp886) - constant_term(tmp887)
    t_y.coeffs[2:order + 1] .= zero(t_y.coeffs[1])
    tmp889.coeffs[1] = constant_term(hy) * constant_term(X[1])
    tmp889.coeffs[2:order + 1] .= zero(tmp889.coeffs[1])
    tmp890.coeffs[1] = constant_term(hx) * constant_term(Y[1])
    tmp890.coeffs[2:order + 1] .= zero(tmp890.coeffs[1])
    t_z.coeffs[1] = constant_term(tmp889) - constant_term(tmp890)
    t_z.coeffs[2:order + 1] .= zero(t_z.coeffs[1])
    tmp893.coeffs[1] = constant_term(t_x) ^ float(constant_term(2))
    tmp893.coeffs[2:order + 1] .= zero(tmp893.coeffs[1])
    tmp895.coeffs[1] = constant_term(t_y) ^ float(constant_term(2))
    tmp895.coeffs[2:order + 1] .= zero(tmp895.coeffs[1])
    tmp896.coeffs[1] = constant_term(tmp893) + constant_term(tmp895)
    tmp896.coeffs[2:order + 1] .= zero(tmp896.coeffs[1])
    tmp898.coeffs[1] = constant_term(t_z) ^ float(constant_term(2))
    tmp898.coeffs[2:order + 1] .= zero(tmp898.coeffs[1])
    tmp899.coeffs[1] = constant_term(tmp896) + constant_term(tmp898)
    tmp899.coeffs[2:order + 1] .= zero(tmp899.coeffs[1])
    t_norm.coeffs[1] = sqrt(constant_term(tmp899))
    t_norm.coeffs[2:order + 1] .= zero(t_norm.coeffs[1])
    t_x_unit.coeffs[1] = constant_term(t_x) / constant_term(t_norm)
    t_x_unit.coeffs[2:order + 1] .= zero(t_x_unit.coeffs[1])
    t_y_unit.coeffs[1] = constant_term(t_y) / constant_term(t_norm)
    t_y_unit.coeffs[2:order + 1] .= zero(t_y_unit.coeffs[1])
    t_z_unit.coeffs[1] = constant_term(t_z) / constant_term(t_norm)
    t_z_unit.coeffs[2:order + 1] .= zero(t_z_unit.coeffs[1])
    tmp904.coeffs[1] = constant_term(X[1]) / constant_term(r_p1d2[1])
    tmp904.coeffs[2:order + 1] .= zero(tmp904.coeffs[1])
    r_x_unit.coeffs[1] = -(constant_term(tmp904))
    r_x_unit.coeffs[2:order + 1] .= zero(r_x_unit.coeffs[1])
    tmp906.coeffs[1] = constant_term(Y[1]) / constant_term(r_p1d2[1])
    tmp906.coeffs[2:order + 1] .= zero(tmp906.coeffs[1])
    r_y_unit.coeffs[1] = -(constant_term(tmp906))
    r_y_unit.coeffs[2:order + 1] .= zero(r_y_unit.coeffs[1])
    tmp908.coeffs[1] = constant_term(Z[1]) / constant_term(r_p1d2[1])
    tmp908.coeffs[2:order + 1] .= zero(tmp908.coeffs[1])
    r_z_unit.coeffs[1] = -(constant_term(tmp908))
    r_z_unit.coeffs[2:order + 1] .= zero(r_z_unit.coeffs[1])
    g_r.coeffs[1] = identity(constant_term(r_p2[1]))
    g_r.coeffs[2:order + 1] .= zero(g_r.coeffs[1])
    A2_t_g_r.coeffs[1] = constant_term(q[7]) / constant_term(g_r)
    A2_t_g_r.coeffs[2:order + 1] .= zero(A2_t_g_r.coeffs[1])
    A1_t_g_r.coeffs[1] = constant_term(q[8]) / constant_term(g_r)
    A1_t_g_r.coeffs[2:order + 1] .= zero(A1_t_g_r.coeffs[1])
    tmp912.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_x_unit)
    tmp912.coeffs[2:order + 1] .= zero(tmp912.coeffs[1])
    tmp913.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_x_unit)
    tmp913.coeffs[2:order + 1] .= zero(tmp913.coeffs[1])
    NGAx.coeffs[1] = constant_term(tmp912) + constant_term(tmp913)
    NGAx.coeffs[2:order + 1] .= zero(NGAx.coeffs[1])
    tmp915.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_y_unit)
    tmp915.coeffs[2:order + 1] .= zero(tmp915.coeffs[1])
    tmp916.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_y_unit)
    tmp916.coeffs[2:order + 1] .= zero(tmp916.coeffs[1])
    NGAy.coeffs[1] = constant_term(tmp915) + constant_term(tmp916)
    NGAy.coeffs[2:order + 1] .= zero(NGAy.coeffs[1])
    tmp918.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_z_unit)
    tmp918.coeffs[2:order + 1] .= zero(tmp918.coeffs[1])
    tmp919.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_z_unit)
    tmp919.coeffs[2:order + 1] .= zero(tmp919.coeffs[1])
    NGAz.coeffs[1] = constant_term(tmp918) + constant_term(tmp919)
    NGAz.coeffs[2:order + 1] .= zero(NGAz.coeffs[1])
    tmp921.coeffs[1] = constant_term(postNewtonX) + constant_term(accX)
    tmp921.coeffs[2:order + 1] .= zero(tmp921.coeffs[1])
    (dq[4]).coeffs[1] = constant_term(tmp921) + constant_term(NGAx)
    (dq[4]).coeffs[2:order + 1] .= zero((dq[4]).coeffs[1])
    tmp923.coeffs[1] = constant_term(postNewtonY) + constant_term(accY)
    tmp923.coeffs[2:order + 1] .= zero(tmp923.coeffs[1])
    (dq[5]).coeffs[1] = constant_term(tmp923) + constant_term(NGAy)
    (dq[5]).coeffs[2:order + 1] .= zero((dq[5]).coeffs[1])
    tmp925.coeffs[1] = constant_term(postNewtonZ) + constant_term(accZ)
    tmp925.coeffs[2:order + 1] .= zero(tmp925.coeffs[1])
    (dq[6]).coeffs[1] = constant_term(tmp925) + constant_term(NGAz)
    (dq[6]).coeffs[2:order + 1] .= zero((dq[6]).coeffs[1])
    (dq[7]).coeffs[1] = identity(constant_term(zero_q_1))
    (dq[7]).coeffs[2:order + 1] .= zero((dq[7]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(pntempX, zero_q_1, ord)
        TaylorSeries.identity!(pntempY, zero_q_1, ord)
        TaylorSeries.identity!(pntempZ, zero_q_1, ord)
        TaylorSeries.identity!(accX, zero_q_1, ord)
        TaylorSeries.identity!(accY, zero_q_1, ord)
        TaylorSeries.identity!(accZ, zero_q_1, ord)
        TaylorSeries.identity!(dq[1], q[4], ord)
        TaylorSeries.identity!(dq[2], q[5], ord)
        TaylorSeries.identity!(dq[3], q[6], ord)
        TaylorSeries.identity!(newtonianNb_Potential[N], zero_q_1, ord)
        for i = 1:Nm1
            TaylorSeries.identity!(ui[i], ss16asteph_t[3 * ((N - 1) + i) - 2], ord)
            TaylorSeries.identity!(vi[i], ss16asteph_t[3 * ((N - 1) + i) - 1], ord)
            TaylorSeries.identity!(wi[i], ss16asteph_t[3 * ((N - 1) + i)], ord)
            TaylorSeries.subst!(X[i], ss16asteph_t[3i - 2], q[1], ord)
            TaylorSeries.subst!(Y[i], ss16asteph_t[3i - 1], q[2], ord)
            TaylorSeries.subst!(Z[i], ss16asteph_t[3i], q[3], ord)
            TaylorSeries.subst!(U[i], ui[i], dq[1], ord)
            TaylorSeries.subst!(V[i], vi[i], dq[2], ord)
            TaylorSeries.subst!(W[i], wi[i], dq[3], ord)
            TaylorSeries.mul!(tmp666[1], 4, dq[1], ord)
            TaylorSeries.mul!(tmp668[i], 3, ui[i], ord)
            TaylorSeries.subst!(_4U_m_3X[i], tmp666[1], tmp668[i], ord)
            TaylorSeries.mul!(tmp671[2], 4, dq[2], ord)
            TaylorSeries.mul!(tmp673[i], 3, vi[i], ord)
            TaylorSeries.subst!(_4V_m_3Y[i], tmp671[2], tmp673[i], ord)
            TaylorSeries.mul!(tmp676[3], 4, dq[3], ord)
            TaylorSeries.mul!(tmp678[i], 3, wi[i], ord)
            TaylorSeries.subst!(_4W_m_3Z[i], tmp676[3], tmp678[i], ord)
            TaylorSeries.mul!(pn2x[i], X[i], _4U_m_3X[i], ord)
            TaylorSeries.mul!(pn2y[i], Y[i], _4V_m_3Y[i], ord)
            TaylorSeries.mul!(pn2z[i], Z[i], _4W_m_3Z[i], ord)
            TaylorSeries.mul!(UU[i], ui[i], dq[1], ord)
            TaylorSeries.mul!(VV[i], vi[i], dq[2], ord)
            TaylorSeries.mul!(WW[i], wi[i], dq[3], ord)
            TaylorSeries.add!(tmp686[i], UU[i], VV[i], ord)
            TaylorSeries.add!(vi_dot_vj[i], tmp686[i], WW[i], ord)
            TaylorSeries.pow!(tmp689[i], X[i], 2, ord)
            TaylorSeries.pow!(tmp691[i], Y[i], 2, ord)
            TaylorSeries.add!(tmp692[i], tmp689[i], tmp691[i], ord)
            TaylorSeries.pow!(tmp694[i], Z[i], 2, ord)
            TaylorSeries.add!(r_p2[i], tmp692[i], tmp694[i], ord)
            TaylorSeries.sqrt!(r_p1d2[i], r_p2[i], ord)
            TaylorSeries.pow!(r_p3d2[i], r_p2[i], 1.5, ord)
            TaylorSeries.pow!(r_p7d2[i], r_p2[i], 3.5, ord)
            TaylorSeries.div!(newtonianCoeff[i], μ[i], r_p3d2[i], ord)
            TaylorSeries.add!(tmp702[i], pn2x[i], pn2y[i], ord)
            TaylorSeries.add!(tmp703[i], tmp702[i], pn2z[i], ord)
            TaylorSeries.mul!(pn2[i], newtonianCoeff[i], tmp703[i], ord)
            TaylorSeries.mul!(newton_acc_X[i], X[i], newtonianCoeff[i], ord)
            TaylorSeries.mul!(newton_acc_Y[i], Y[i], newtonianCoeff[i], ord)
            TaylorSeries.mul!(newton_acc_Z[i], Z[i], newtonianCoeff[i], ord)
            TaylorSeries.div!(newtonian1b_Potential[i], μ[i], r_p1d2[i], ord)
            TaylorSeries.mul!(pn3[i], 3.5, newtonian1b_Potential[i], ord)
            TaylorSeries.mul!(U_t_pn2[i], pn2[i], U[i], ord)
            TaylorSeries.mul!(V_t_pn2[i], pn2[i], V[i], ord)
            TaylorSeries.mul!(W_t_pn2[i], pn2[i], W[i], ord)
            if UJ_interaction[i]
                TaylorSeries.subst!(tmp714[i], X[i], ord)
                TaylorSeries.mul!(t31[i], tmp714[i], M_[1, 3, i], ord)
                TaylorSeries.subst!(tmp716[i], Y[i], ord)
                TaylorSeries.mul!(t32[i], tmp716[i], M_[2, 3, i], ord)
                TaylorSeries.subst!(tmp718[i], Z[i], ord)
                TaylorSeries.mul!(t33[i], tmp718[i], M_[3, 3, i], ord)
                TaylorSeries.add!(tmp720[i], t31[i], t32[i], ord)
                TaylorSeries.add!(r_sin_ϕ[i], tmp720[i], t33[i], ord)
                TaylorSeries.div!(sin_ϕ[i], r_sin_ϕ[i], r_p1d2[i], ord)
                TaylorSeries.asin!(ϕ[i], sin_ϕ[i], tmp927[i], ord)
                TaylorSeries.sincos!(tmp928[i], cos_ϕ[i], ϕ[i], ord)
                TaylorSeries.pow!(sin2_ϕ[i], sin_ϕ[i], 2, ord)
                TaylorSeries.pow!(sin3_ϕ[i], sin_ϕ[i], 3, ord)
                TaylorSeries.mul!(tmp730[i], 1.5, sin2_ϕ[i], ord)
                TaylorSeries.subst!(P_2_sin_ϕ[i], tmp730[i], 0.5, ord)
                TaylorSeries.mul!(∂P_2_sin_ϕ[i], 3, sin_ϕ[i], ord)
                TaylorSeries.mul!(tmp736[i], -1.5, sin_ϕ[i], ord)
                TaylorSeries.mul!(tmp738[i], 2.5, sin3_ϕ[i], ord)
                TaylorSeries.add!(P_3_sin_ϕ[i], tmp736[i], tmp738[i], ord)
                TaylorSeries.mul!(tmp742[i], 7.5, sin2_ϕ[i], ord)
                TaylorSeries.add!(∂P_3_sin_ϕ[i], -1.5, tmp742[i], ord)
                TaylorSeries.pow!(tmp745[i], r_p2[i], 2, ord)
                TaylorSeries.div!(tmp746[i], Λ2[i], tmp745[i], ord)
                TaylorSeries.subst!(Λ2j_div_r4[i], tmp746[i], ord)
                TaylorSeries.pow!(tmp749[i], r_p1d2[i], 5, ord)
                TaylorSeries.div!(tmp750[i], Λ3[i], tmp749[i], ord)
                TaylorSeries.subst!(Λ3j_div_r5[i], tmp750[i], ord)
                TaylorSeries.subst!(tmp752[i], cos_ϕ[i], ord)
                TaylorSeries.mul!(m_c_ϕ_∂P_2[i], tmp752[i], ∂P_2_sin_ϕ[i], ord)
                TaylorSeries.subst!(tmp754[i], cos_ϕ[i], ord)
                TaylorSeries.mul!(m_c_ϕ_∂P_3[i], tmp754[i], ∂P_3_sin_ϕ[i], ord)
                TaylorSeries.mul!(tmp757[i], Λ2j_div_r4[i], 3, ord)
                TaylorSeries.mul!(F_J2_ξ[i], tmp757[i], P_2_sin_ϕ[i], ord)
                TaylorSeries.mul!(F_J2_ζ[i], Λ2j_div_r4[i], m_c_ϕ_∂P_2[i], ord)
                TaylorSeries.mul!(tmp761[i], Λ3j_div_r5[i], 4, ord)
                TaylorSeries.mul!(F_J3_ξ[i], tmp761[i], P_3_sin_ϕ[i], ord)
                TaylorSeries.mul!(F_J3_ζ[i], Λ3j_div_r5[i], m_c_ϕ_∂P_3[i], ord)
                TaylorSeries.identity!(F_J_ξ[i], F_J2_ξ[i], ord)
                TaylorSeries.identity!(F_J_ζ[i], F_J2_ζ[i], ord)
                TaylorSeries.subst!(tmp764[i], X[i], ord)
                TaylorSeries.div!(ξx[i], tmp764[i], r_p1d2[i], ord)
                TaylorSeries.subst!(tmp766[i], Y[i], ord)
                TaylorSeries.div!(ξy[i], tmp766[i], r_p1d2[i], ord)
                TaylorSeries.subst!(tmp768[i], Z[i], ord)
                TaylorSeries.div!(ξz[i], tmp768[i], r_p1d2[i], ord)
                TaylorSeries.mul!(ηx1[i], M_[2, 3, i], ξz[i], ord)
                TaylorSeries.mul!(ηy1[i], M_[3, 3, i], ξx[i], ord)
                TaylorSeries.mul!(ηz1[i], M_[1, 3, i], ξy[i], ord)
                TaylorSeries.mul!(ηx2[i], M_[3, 3, i], ξy[i], ord)
                TaylorSeries.mul!(ηy2[i], M_[1, 3, i], ξz[i], ord)
                TaylorSeries.mul!(ηz2[i], M_[2, 3, i], ξx[i], ord)
                TaylorSeries.subst!(ηx[i], ηx1[i], ηx2[i], ord)
                TaylorSeries.subst!(ηy[i], ηy1[i], ηy2[i], ord)
                TaylorSeries.subst!(ηz[i], ηz1[i], ηz2[i], ord)
                TaylorSeries.mul!(ζx1[i], ξy[i], ηz[i], ord)
                TaylorSeries.mul!(ζy1[i], ξz[i], ηx[i], ord)
                TaylorSeries.mul!(ζz1[i], ξx[i], ηy[i], ord)
                TaylorSeries.mul!(ζx2[i], ξz[i], ηy[i], ord)
                TaylorSeries.mul!(ζy2[i], ξx[i], ηz[i], ord)
                TaylorSeries.mul!(ζz2[i], ξy[i], ηx[i], ord)
                TaylorSeries.subst!(ζx[i], ζx1[i], ζx2[i], ord)
                TaylorSeries.subst!(ζy[i], ζy1[i], ζy2[i], ord)
                TaylorSeries.subst!(ζz[i], ζz1[i], ζz2[i], ord)
                TaylorSeries.mul!(F_J2_x1[i], F_J_ξ[i], ξx[i], ord)
                TaylorSeries.mul!(F_J2_y1[i], F_J_ξ[i], ξy[i], ord)
                TaylorSeries.mul!(F_J2_z1[i], F_J_ξ[i], ξz[i], ord)
                TaylorSeries.mul!(F_J2_x2[i], F_J_ζ[i], ζx[i], ord)
                TaylorSeries.mul!(F_J2_y2[i], F_J_ζ[i], ζy[i], ord)
                TaylorSeries.mul!(F_J2_z2[i], F_J_ζ[i], ζz[i], ord)
                TaylorSeries.add!(F_J2_x[i], F_J2_x1[i], F_J2_x2[i], ord)
                TaylorSeries.add!(F_J2_y[i], F_J2_y1[i], F_J2_y2[i], ord)
                TaylorSeries.add!(F_J2_z[i], F_J2_z1[i], F_J2_z2[i], ord)
            end
            TaylorSeries.pow!(tmp798[i], ui[i], 2, ord)
            TaylorSeries.pow!(tmp800[i], vi[i], 2, ord)
            TaylorSeries.add!(tmp801[i], tmp798[i], tmp800[i], ord)
            TaylorSeries.pow!(tmp803[i], wi[i], 2, ord)
            TaylorSeries.add!(v2[i], tmp801[i], tmp803[i], ord)
        end
        TaylorSeries.pow!(tmp806, q[4], 2, ord)
        TaylorSeries.pow!(tmp808, q[5], 2, ord)
        TaylorSeries.add!(tmp809, tmp806, tmp808, ord)
        TaylorSeries.pow!(tmp811, q[6], 2, ord)
        TaylorSeries.add!(v2[N], tmp809, tmp811, ord)
        for i = 1:Nm1
            TaylorSeries.add!(temp_004[i], newtonian1b_Potential[i], newtonianNb_Potential[N], ord)
            TaylorSeries.identity!(newtonianNb_Potential[N], temp_004[i], ord)
            if UJ_interaction[i]
                TaylorSeries.mul!(tmp814[i], μ[i], F_J2_x[i], ord)
                TaylorSeries.subst!(temp_accX_i[i], accX, tmp814[i], ord)
                TaylorSeries.identity!(accX, temp_accX_i[i], ord)
                TaylorSeries.mul!(tmp816[i], μ[i], F_J2_y[i], ord)
                TaylorSeries.subst!(temp_accY_i[i], accY, tmp816[i], ord)
                TaylorSeries.identity!(accY, temp_accY_i[i], ord)
                TaylorSeries.mul!(tmp818[i], μ[i], F_J2_z[i], ord)
                TaylorSeries.subst!(temp_accZ_i[i], accZ, tmp818[i], ord)
                TaylorSeries.identity!(accZ, temp_accZ_i[i], ord)
            end
        end
        TaylorSeries.mul!(_4ϕj[N], 4, newtonianNb_Potential[N], ord)
        for i = 1:10
            TaylorSeries.add!(ϕi_plus_4ϕj[i], newtonianNb_Potential_t[i], _4ϕj[N], ord)
            TaylorSeries.mul!(tmp824[i], 2, v2[i], ord)
            TaylorSeries.mul!(tmp826[i], 4, vi_dot_vj[i], ord)
            TaylorSeries.subst!(tmp827[i], tmp824[i], tmp826[i], ord)
            TaylorSeries.add!(sj2_plus_2si2_minus_4vivj[i], tmp827[i], v2[N], ord)
            TaylorSeries.subst!(ϕs_and_vs[i], sj2_plus_2si2_minus_4vivj[i], ϕi_plus_4ϕj[i], ord)
            TaylorSeries.mul!(Xij_t_Ui[i], X[i], ui[i], ord)
            TaylorSeries.mul!(Yij_t_Vi[i], Y[i], vi[i], ord)
            TaylorSeries.mul!(Zij_t_Wi[i], Z[i], wi[i], ord)
            TaylorSeries.add!(tmp833[i], Xij_t_Ui[i], Yij_t_Vi[i], ord)
            TaylorSeries.add!(Rij_dot_Vi[i], tmp833[i], Zij_t_Wi[i], ord)
            TaylorSeries.pow!(tmp836[i], Rij_dot_Vi[i], 2, ord)
            TaylorSeries.div!(pn1t7[i], tmp836[i], r_p2[i], ord)
            TaylorSeries.mul!(tmp839[i], 1.5, pn1t7[i], ord)
            TaylorSeries.subst!(pn1t2_7[i], ϕs_and_vs[i], tmp839[i], ord)
            TaylorSeries.add!(pn1t1_7[i], c_p2, pn1t2_7[i], ord)
            TaylorSeries.mul!(pNX_t_X[i], acceph_t[3i - 2], X[i], ord)
            TaylorSeries.mul!(pNY_t_Y[i], acceph_t[3i - 1], Y[i], ord)
            TaylorSeries.mul!(pNZ_t_Z[i], acceph_t[3i], Z[i], ord)
            TaylorSeries.add!(tmp846[i], pNX_t_X[i], pNY_t_Y[i], ord)
            TaylorSeries.add!(tmp847[i], tmp846[i], pNZ_t_Z[i], ord)
            TaylorSeries.mul!(tmp848[i], 0.5, tmp847[i], ord)
            TaylorSeries.add!(pn1[i], pn1t1_7[i], tmp848[i], ord)
            TaylorSeries.mul!(X_t_pn1[i], newton_acc_X[i], pn1[i], ord)
            TaylorSeries.mul!(Y_t_pn1[i], newton_acc_Y[i], pn1[i], ord)
            TaylorSeries.mul!(Z_t_pn1[i], newton_acc_Z[i], pn1[i], ord)
            TaylorSeries.mul!(pNX_t_pn3[i], acceph_t[3i - 2], pn3[i], ord)
            TaylorSeries.mul!(pNY_t_pn3[i], acceph_t[3i - 1], pn3[i], ord)
            TaylorSeries.mul!(pNZ_t_pn3[i], acceph_t[3i], pn3[i], ord)
        end
        for i = 1:10
            TaylorSeries.add!(tmp856[i], U_t_pn2[i], pNX_t_pn3[i], ord)
            TaylorSeries.add!(termpnx[i], X_t_pn1[i], tmp856[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.add!(tmp859[i], V_t_pn2[i], pNY_t_pn3[i], ord)
            TaylorSeries.add!(termpny[i], Y_t_pn1[i], tmp859[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.add!(tmp862[i], W_t_pn2[i], pNZ_t_pn3[i], ord)
            TaylorSeries.add!(termpnz[i], Z_t_pn1[i], tmp862[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        for i = 11:Nm1
            TaylorSeries.mul!(X_t_pn1[i], c_p2, newton_acc_X[i], ord)
            TaylorSeries.mul!(Y_t_pn1[i], c_p2, newton_acc_Y[i], ord)
            TaylorSeries.mul!(Z_t_pn1[i], c_p2, newton_acc_Z[i], ord)
        end
        for i = 11:Nm1
            TaylorSeries.identity!(termpnx[i], X_t_pn1[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.identity!(termpny[i], Y_t_pn1[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.identity!(termpnz[i], Z_t_pn1[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        TaylorSeries.mul!(postNewtonX, pntempX, c_m2, ord)
        TaylorSeries.mul!(postNewtonY, pntempY, c_m2, ord)
        TaylorSeries.mul!(postNewtonZ, pntempZ, c_m2, ord)
        TaylorSeries.mul!(tmp874, Y[1], W[1], ord)
        TaylorSeries.mul!(tmp875, Z[1], V[1], ord)
        TaylorSeries.subst!(hx, tmp874, tmp875, ord)
        TaylorSeries.mul!(tmp877, Z[1], U[1], ord)
        TaylorSeries.mul!(tmp878, X[1], W[1], ord)
        TaylorSeries.subst!(hy, tmp877, tmp878, ord)
        TaylorSeries.mul!(tmp880, X[1], V[1], ord)
        TaylorSeries.mul!(tmp881, Y[1], U[1], ord)
        TaylorSeries.subst!(hz, tmp880, tmp881, ord)
        TaylorSeries.mul!(tmp883, hz, Y[1], ord)
        TaylorSeries.mul!(tmp884, hy, Z[1], ord)
        TaylorSeries.subst!(t_x, tmp883, tmp884, ord)
        TaylorSeries.mul!(tmp886, hx, Z[1], ord)
        TaylorSeries.mul!(tmp887, hz, X[1], ord)
        TaylorSeries.subst!(t_y, tmp886, tmp887, ord)
        TaylorSeries.mul!(tmp889, hy, X[1], ord)
        TaylorSeries.mul!(tmp890, hx, Y[1], ord)
        TaylorSeries.subst!(t_z, tmp889, tmp890, ord)
        TaylorSeries.pow!(tmp893, t_x, 2, ord)
        TaylorSeries.pow!(tmp895, t_y, 2, ord)
        TaylorSeries.add!(tmp896, tmp893, tmp895, ord)
        TaylorSeries.pow!(tmp898, t_z, 2, ord)
        TaylorSeries.add!(tmp899, tmp896, tmp898, ord)
        TaylorSeries.sqrt!(t_norm, tmp899, ord)
        TaylorSeries.div!(t_x_unit, t_x, t_norm, ord)
        TaylorSeries.div!(t_y_unit, t_y, t_norm, ord)
        TaylorSeries.div!(t_z_unit, t_z, t_norm, ord)
        TaylorSeries.div!(tmp904, X[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_x_unit, tmp904, ord)
        TaylorSeries.div!(tmp906, Y[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_y_unit, tmp906, ord)
        TaylorSeries.div!(tmp908, Z[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_z_unit, tmp908, ord)
        TaylorSeries.identity!(g_r, r_p2[1], ord)
        TaylorSeries.div!(A2_t_g_r, q[7], g_r, ord)
        TaylorSeries.div!(A1_t_g_r, q[8], g_r, ord)
        TaylorSeries.mul!(tmp912, A2_t_g_r, t_x_unit, ord)
        TaylorSeries.mul!(tmp913, A1_t_g_r, r_x_unit, ord)
        TaylorSeries.add!(NGAx, tmp912, tmp913, ord)
        TaylorSeries.mul!(tmp915, A2_t_g_r, t_y_unit, ord)
        TaylorSeries.mul!(tmp916, A1_t_g_r, r_y_unit, ord)
        TaylorSeries.add!(NGAy, tmp915, tmp916, ord)
        TaylorSeries.mul!(tmp918, A2_t_g_r, t_z_unit, ord)
        TaylorSeries.mul!(tmp919, A1_t_g_r, r_z_unit, ord)
        TaylorSeries.add!(NGAz, tmp918, tmp919, ord)
        TaylorSeries.add!(tmp921, postNewtonX, accX, ord)
        TaylorSeries.add!(dq[4], tmp921, NGAx, ord)
        TaylorSeries.add!(tmp923, postNewtonY, accY, ord)
        TaylorSeries.add!(dq[5], tmp923, NGAy, ord)
        TaylorSeries.add!(tmp925, postNewtonZ, accZ, ord)
        TaylorSeries.add!(dq[6], tmp925, NGAz, ord)
        TaylorSeries.identity!(dq[7], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end

# TaylorIntegration._allocate_jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph_threads!
function TaylorIntegration._allocate_jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params) where {_T <: Real, _S <: Number, _N}
    order = t.order
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = params[1]
    local acceph_t = params[2]
    local newtonianNb_Potential_t = params[3]
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    X = Array{S}(undef, N)
    Y = Array{S}(undef, N)
    Z = Array{S}(undef, N)
    r_p2 = Array{S}(undef, N)
    r_p1d2 = Array{S}(undef, N)
    r_p3d2 = Array{S}(undef, N)
    r_p7d2 = Array{S}(undef, N)
    newtonianCoeff = Array{S}(undef, N)
    ui = Array{S}(undef, N - 1)
    vi = Array{S}(undef, N - 1)
    wi = Array{S}(undef, N - 1)
    U = Array{S}(undef, N)
    V = Array{S}(undef, N)
    W = Array{S}(undef, N)
    _4U_m_3X = Array{S}(undef, N)
    _4V_m_3Y = Array{S}(undef, N)
    _4W_m_3Z = Array{S}(undef, N)
    UU = Array{S}(undef, N)
    VV = Array{S}(undef, N)
    WW = Array{S}(undef, N)
    newtonian1b_Potential = Array{S}(undef, N)
    newtonianNb_Potential = Array{S}(undef, N)
    newton_acc_X = Array{S}(undef, N)
    newton_acc_Y = Array{S}(undef, N)
    newton_acc_Z = Array{S}(undef, N)
    v2 = Array{S}(undef, N)
    vi_dot_vj = Array{S}(undef, N)
    pn2 = Array{S}(undef, N)
    U_t_pn2 = Array{S}(undef, N)
    V_t_pn2 = Array{S}(undef, N)
    W_t_pn2 = Array{S}(undef, N)
    pn3 = Array{S}(undef, N)
    pNX_t_pn3 = Array{S}(undef, N)
    pNY_t_pn3 = Array{S}(undef, N)
    pNZ_t_pn3 = Array{S}(undef, N)
    _4ϕj = Array{S}(undef, N)
    ϕi_plus_4ϕj = Array{S}(undef, N)
    sj2_plus_2si2_minus_4vivj = Array{S}(undef, N)
    ϕs_and_vs = Array{S}(undef, N)
    pn1t1_7 = Array{S}(undef, N)
    pNX_t_X = Array{S}(undef, N)
    pNY_t_Y = Array{S}(undef, N)
    pNZ_t_Z = Array{S}(undef, N)
    pn1 = Array{S}(undef, N)
    X_t_pn1 = Array{S}(undef, N)
    Y_t_pn1 = Array{S}(undef, N)
    Z_t_pn1 = Array{S}(undef, N)
    pntempX = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempY = Taylor1(identity(constant_term(zero_q_1)), order)
    pntempZ = Taylor1(identity(constant_term(zero_q_1)), order)
    t31 = Array{S}(undef, N)
    t32 = Array{S}(undef, N)
    t33 = Array{S}(undef, N)
    r_sin_ϕ = Array{S}(undef, N)
    sin_ϕ = Array{S}(undef, N)
    ϕ = Array{S}(undef, N)
    cos_ϕ = Array{S}(undef, N)
    sin2_ϕ = Array{S}(undef, N)
    sin3_ϕ = Array{S}(undef, N)
    sin4_ϕ = Array{S}(undef, N)
    F_J2_x = Array{S}(undef, N)
    F_J2_y = Array{S}(undef, N)
    F_J2_z = Array{S}(undef, N)
    F_J2_x1 = Array{S}(undef, N)
    F_J2_y1 = Array{S}(undef, N)
    F_J2_z1 = Array{S}(undef, N)
    F_J2_x2 = Array{S}(undef, N)
    F_J2_y2 = Array{S}(undef, N)
    F_J2_z2 = Array{S}(undef, N)
    temp_accX_i = Array{S}(undef, N)
    temp_accY_i = Array{S}(undef, N)
    temp_accZ_i = Array{S}(undef, N)
    P_2_sin_ϕ = Array{S}(undef, N)
    ∂P_2_sin_ϕ = Array{S}(undef, N)
    P_3_sin_ϕ = Array{S}(undef, N)
    ∂P_3_sin_ϕ = Array{S}(undef, N)
    m_c_ϕ_∂P_2 = Array{S}(undef, N)
    m_c_ϕ_∂P_3 = Array{S}(undef, N)
    Λ2j_div_r4 = Array{S}(undef, N)
    Λ3j_div_r5 = Array{S}(undef, N)
    F_J_ξ = Array{S}(undef, N)
    F_J_η = Array{S}(undef, N)
    F_J_ζ = Array{S}(undef, N)
    F_J2_ξ = Array{S}(undef, N)
    F_J2_η = Array{S}(undef, N)
    F_J2_ζ = Array{S}(undef, N)
    F_J3_ξ = Array{S}(undef, N)
    F_J3_η = Array{S}(undef, N)
    F_J3_ζ = Array{S}(undef, N)
    ξx = Array{S}(undef, N)
    ξy = Array{S}(undef, N)
    ξz = Array{S}(undef, N)
    ηx = Array{S}(undef, N)
    ηy = Array{S}(undef, N)
    ηz = Array{S}(undef, N)
    ηx1 = Array{S}(undef, N)
    ηy1 = Array{S}(undef, N)
    ηz1 = Array{S}(undef, N)
    ηx2 = Array{S}(undef, N)
    ηy2 = Array{S}(undef, N)
    ηz2 = Array{S}(undef, N)
    ζx = Array{S}(undef, N)
    ζy = Array{S}(undef, N)
    ζz = Array{S}(undef, N)
    ζx1 = Array{S}(undef, N)
    ζy1 = Array{S}(undef, N)
    ζz1 = Array{S}(undef, N)
    ζx2 = Array{S}(undef, N)
    ζy2 = Array{S}(undef, N)
    ζz2 = Array{S}(undef, N)
    accX = Taylor1(identity(constant_term(zero_q_1)), order)
    accY = Taylor1(identity(constant_term(zero_q_1)), order)
    accZ = Taylor1(identity(constant_term(zero_q_1)), order)
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    dq[1] = Taylor1(identity(constant_term(q[4])), order)
    dq[2] = Taylor1(identity(constant_term(q[5])), order)
    dq[3] = Taylor1(identity(constant_term(q[6])), order)
    newtonianNb_Potential[N] = Taylor1(identity(constant_term(zero_q_1)), order)
    tmp1320 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1320 .= Taylor1(zero(_S), order)
    tmp1322 = Array{Taylor1{_S}}(undef, size(ui))
    tmp1322 .= Taylor1(zero(_S), order)
    tmp1325 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1325 .= Taylor1(zero(_S), order)
    tmp1327 = Array{Taylor1{_S}}(undef, size(vi))
    tmp1327 .= Taylor1(zero(_S), order)
    tmp1330 = Array{Taylor1{_S}}(undef, size(dq))
    tmp1330 .= Taylor1(zero(_S), order)
    tmp1332 = Array{Taylor1{_S}}(undef, size(wi))
    tmp1332 .= Taylor1(zero(_S), order)
    pn2x = Array{Taylor1{_S}}(undef, size(X))
    pn2x .= Taylor1(zero(_S), order)
    pn2y = Array{Taylor1{_S}}(undef, size(Y))
    pn2y .= Taylor1(zero(_S), order)
    pn2z = Array{Taylor1{_S}}(undef, size(Z))
    pn2z .= Taylor1(zero(_S), order)
    tmp1340 = Array{Taylor1{_S}}(undef, size(UU))
    tmp1340 .= Taylor1(zero(_S), order)
    tmp1343 = Array{Taylor1{_S}}(undef, size(X))
    tmp1343 .= Taylor1(zero(_S), order)
    tmp1345 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1345 .= Taylor1(zero(_S), order)
    tmp1346 = Array{Taylor1{_S}}(undef, size(tmp1343))
    tmp1346 .= Taylor1(zero(_S), order)
    tmp1348 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1348 .= Taylor1(zero(_S), order)
    tmp1356 = Array{Taylor1{_S}}(undef, size(pn2x))
    tmp1356 .= Taylor1(zero(_S), order)
    tmp1357 = Array{Taylor1{_S}}(undef, size(tmp1356))
    tmp1357 .= Taylor1(zero(_S), order)
    tmp1452 = Array{Taylor1{_S}}(undef, size(ui))
    tmp1452 .= Taylor1(zero(_S), order)
    tmp1454 = Array{Taylor1{_S}}(undef, size(vi))
    tmp1454 .= Taylor1(zero(_S), order)
    tmp1455 = Array{Taylor1{_S}}(undef, size(tmp1452))
    tmp1455 .= Taylor1(zero(_S), order)
    tmp1457 = Array{Taylor1{_S}}(undef, size(wi))
    tmp1457 .= Taylor1(zero(_S), order)
    tmp1368 = Array{Taylor1{_S}}(undef, size(X))
    tmp1368 .= Taylor1(zero(_S), order)
    tmp1370 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1370 .= Taylor1(zero(_S), order)
    tmp1372 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1372 .= Taylor1(zero(_S), order)
    tmp1374 = Array{Taylor1{_S}}(undef, size(t31))
    tmp1374 .= Taylor1(zero(_S), order)
    tmp1581 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1581 .= Taylor1(zero(_S), order)
    tmp1582 = Array{Taylor1{_S}}(undef, size(ϕ))
    tmp1582 .= Taylor1(zero(_S), order)
    tmp1384 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp1384 .= Taylor1(zero(_S), order)
    tmp1390 = Array{Taylor1{_S}}(undef, size(sin_ϕ))
    tmp1390 .= Taylor1(zero(_S), order)
    tmp1392 = Array{Taylor1{_S}}(undef, size(sin3_ϕ))
    tmp1392 .= Taylor1(zero(_S), order)
    tmp1396 = Array{Taylor1{_S}}(undef, size(sin2_ϕ))
    tmp1396 .= Taylor1(zero(_S), order)
    tmp1399 = Array{Taylor1{_S}}(undef, size(r_p2))
    tmp1399 .= Taylor1(zero(_S), order)
    tmp1400 = Array{Taylor1{_S}}(undef, size(Λ2))
    tmp1400 .= Taylor1(zero(_S), order)
    tmp1403 = Array{Taylor1{_S}}(undef, size(r_p1d2))
    tmp1403 .= Taylor1(zero(_S), order)
    tmp1404 = Array{Taylor1{_S}}(undef, size(Λ3))
    tmp1404 .= Taylor1(zero(_S), order)
    tmp1406 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp1406 .= Taylor1(zero(_S), order)
    tmp1408 = Array{Taylor1{_S}}(undef, size(cos_ϕ))
    tmp1408 .= Taylor1(zero(_S), order)
    tmp1411 = Array{Taylor1{_S}}(undef, size(Λ2j_div_r4))
    tmp1411 .= Taylor1(zero(_S), order)
    tmp1415 = Array{Taylor1{_S}}(undef, size(Λ3j_div_r5))
    tmp1415 .= Taylor1(zero(_S), order)
    tmp1418 = Array{Taylor1{_S}}(undef, size(X))
    tmp1418 .= Taylor1(zero(_S), order)
    tmp1420 = Array{Taylor1{_S}}(undef, size(Y))
    tmp1420 .= Taylor1(zero(_S), order)
    tmp1422 = Array{Taylor1{_S}}(undef, size(Z))
    tmp1422 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:245 =# Threads.@threads for i = 1:Nm1
            ui[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2])), order)
            vi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1])), order)
            wi[i] = Taylor1(identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)])), order)
            X[i] = Taylor1(constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1]), order)
            Y[i] = Taylor1(constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2]), order)
            Z[i] = Taylor1(constant_term(ss16asteph_t[3i]) - constant_term(q[3]), order)
            U[i] = Taylor1(constant_term(ui[i]) - constant_term(dq[1]), order)
            V[i] = Taylor1(constant_term(vi[i]) - constant_term(dq[2]), order)
            W[i] = Taylor1(constant_term(wi[i]) - constant_term(dq[3]), order)
            tmp1320[1] = Taylor1(constant_term(4) * constant_term(dq[1]), order)
            tmp1322[i] = Taylor1(constant_term(3) * constant_term(ui[i]), order)
            _4U_m_3X[i] = Taylor1(constant_term(tmp1320[1]) - constant_term(tmp1322[i]), order)
            tmp1325[2] = Taylor1(constant_term(4) * constant_term(dq[2]), order)
            tmp1327[i] = Taylor1(constant_term(3) * constant_term(vi[i]), order)
            _4V_m_3Y[i] = Taylor1(constant_term(tmp1325[2]) - constant_term(tmp1327[i]), order)
            tmp1330[3] = Taylor1(constant_term(4) * constant_term(dq[3]), order)
            tmp1332[i] = Taylor1(constant_term(3) * constant_term(wi[i]), order)
            _4W_m_3Z[i] = Taylor1(constant_term(tmp1330[3]) - constant_term(tmp1332[i]), order)
            pn2x[i] = Taylor1(constant_term(X[i]) * constant_term(_4U_m_3X[i]), order)
            pn2y[i] = Taylor1(constant_term(Y[i]) * constant_term(_4V_m_3Y[i]), order)
            pn2z[i] = Taylor1(constant_term(Z[i]) * constant_term(_4W_m_3Z[i]), order)
            UU[i] = Taylor1(constant_term(ui[i]) * constant_term(dq[1]), order)
            VV[i] = Taylor1(constant_term(vi[i]) * constant_term(dq[2]), order)
            WW[i] = Taylor1(constant_term(wi[i]) * constant_term(dq[3]), order)
            tmp1340[i] = Taylor1(constant_term(UU[i]) + constant_term(VV[i]), order)
            vi_dot_vj[i] = Taylor1(constant_term(tmp1340[i]) + constant_term(WW[i]), order)
            tmp1343[i] = Taylor1(constant_term(X[i]) ^ float(constant_term(2)), order)
            tmp1345[i] = Taylor1(constant_term(Y[i]) ^ float(constant_term(2)), order)
            tmp1346[i] = Taylor1(constant_term(tmp1343[i]) + constant_term(tmp1345[i]), order)
            tmp1348[i] = Taylor1(constant_term(Z[i]) ^ float(constant_term(2)), order)
            r_p2[i] = Taylor1(constant_term(tmp1346[i]) + constant_term(tmp1348[i]), order)
            r_p1d2[i] = Taylor1(sqrt(constant_term(r_p2[i])), order)
            r_p3d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(1.5)), order)
            r_p7d2[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(3.5)), order)
            newtonianCoeff[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p3d2[i]), order)
            tmp1356[i] = Taylor1(constant_term(pn2x[i]) + constant_term(pn2y[i]), order)
            tmp1357[i] = Taylor1(constant_term(tmp1356[i]) + constant_term(pn2z[i]), order)
            pn2[i] = Taylor1(constant_term(newtonianCoeff[i]) * constant_term(tmp1357[i]), order)
            newton_acc_X[i] = Taylor1(constant_term(X[i]) * constant_term(newtonianCoeff[i]), order)
            newton_acc_Y[i] = Taylor1(constant_term(Y[i]) * constant_term(newtonianCoeff[i]), order)
            newton_acc_Z[i] = Taylor1(constant_term(Z[i]) * constant_term(newtonianCoeff[i]), order)
            newtonian1b_Potential[i] = Taylor1(constant_term(μ[i]) / constant_term(r_p1d2[i]), order)
            pn3[i] = Taylor1(constant_term(3.5) * constant_term(newtonian1b_Potential[i]), order)
            U_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(U[i]), order)
            V_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(V[i]), order)
            W_t_pn2[i] = Taylor1(constant_term(pn2[i]) * constant_term(W[i]), order)
            if UJ_interaction[i]
                tmp1368[i] = Taylor1(-(constant_term(X[i])), order)
                t31[i] = Taylor1(constant_term(tmp1368[i]) * constant_term(M_[1, 3, i]), order)
                tmp1370[i] = Taylor1(-(constant_term(Y[i])), order)
                t32[i] = Taylor1(constant_term(tmp1370[i]) * constant_term(M_[2, 3, i]), order)
                tmp1372[i] = Taylor1(-(constant_term(Z[i])), order)
                t33[i] = Taylor1(constant_term(tmp1372[i]) * constant_term(M_[3, 3, i]), order)
                tmp1374[i] = Taylor1(constant_term(t31[i]) + constant_term(t32[i]), order)
                r_sin_ϕ[i] = Taylor1(constant_term(tmp1374[i]) + constant_term(t33[i]), order)
                sin_ϕ[i] = Taylor1(constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i]), order)
                ϕ[i] = Taylor1(asin(constant_term(sin_ϕ[i])), order)
                tmp1581[i] = Taylor1(sqrt(1 - constant_term(sin_ϕ[i]) ^ 2), order)
                cos_ϕ[i] = Taylor1(cos(constant_term(ϕ[i])), order)
                tmp1582[i] = Taylor1(sin(constant_term(ϕ[i])), order)
                sin2_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(2)), order)
                sin3_ϕ[i] = Taylor1(constant_term(sin_ϕ[i]) ^ float(constant_term(3)), order)
                tmp1384[i] = Taylor1(constant_term(1.5) * constant_term(sin2_ϕ[i]), order)
                P_2_sin_ϕ[i] = Taylor1(constant_term(tmp1384[i]) - constant_term(0.5), order)
                ∂P_2_sin_ϕ[i] = Taylor1(constant_term(3) * constant_term(sin_ϕ[i]), order)
                tmp1390[i] = Taylor1(constant_term(-1.5) * constant_term(sin_ϕ[i]), order)
                tmp1392[i] = Taylor1(constant_term(2.5) * constant_term(sin3_ϕ[i]), order)
                P_3_sin_ϕ[i] = Taylor1(constant_term(tmp1390[i]) + constant_term(tmp1392[i]), order)
                tmp1396[i] = Taylor1(constant_term(7.5) * constant_term(sin2_ϕ[i]), order)
                ∂P_3_sin_ϕ[i] = Taylor1(constant_term(-1.5) + constant_term(tmp1396[i]), order)
                tmp1399[i] = Taylor1(constant_term(r_p2[i]) ^ float(constant_term(2)), order)
                tmp1400[i] = Taylor1(constant_term(Λ2[i]) / constant_term(tmp1399[i]), order)
                Λ2j_div_r4[i] = Taylor1(-(constant_term(tmp1400[i])), order)
                tmp1403[i] = Taylor1(constant_term(r_p1d2[i]) ^ float(constant_term(5)), order)
                tmp1404[i] = Taylor1(constant_term(Λ3[i]) / constant_term(tmp1403[i]), order)
                Λ3j_div_r5[i] = Taylor1(-(constant_term(tmp1404[i])), order)
                tmp1406[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
                m_c_ϕ_∂P_2[i] = Taylor1(constant_term(tmp1406[i]) * constant_term(∂P_2_sin_ϕ[i]), order)
                tmp1408[i] = Taylor1(-(constant_term(cos_ϕ[i])), order)
                m_c_ϕ_∂P_3[i] = Taylor1(constant_term(tmp1408[i]) * constant_term(∂P_3_sin_ϕ[i]), order)
                tmp1411[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(3), order)
                F_J2_ξ[i] = Taylor1(constant_term(tmp1411[i]) * constant_term(P_2_sin_ϕ[i]), order)
                F_J2_ζ[i] = Taylor1(constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i]), order)
                tmp1415[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(4), order)
                F_J3_ξ[i] = Taylor1(constant_term(tmp1415[i]) * constant_term(P_3_sin_ϕ[i]), order)
                F_J3_ζ[i] = Taylor1(constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i]), order)
                F_J_ξ[i] = Taylor1(identity(constant_term(F_J2_ξ[i])), order)
                F_J_ζ[i] = Taylor1(identity(constant_term(F_J2_ζ[i])), order)
                tmp1418[i] = Taylor1(-(constant_term(X[i])), order)
                ξx[i] = Taylor1(constant_term(tmp1418[i]) / constant_term(r_p1d2[i]), order)
                tmp1420[i] = Taylor1(-(constant_term(Y[i])), order)
                ξy[i] = Taylor1(constant_term(tmp1420[i]) / constant_term(r_p1d2[i]), order)
                tmp1422[i] = Taylor1(-(constant_term(Z[i])), order)
                ξz[i] = Taylor1(constant_term(tmp1422[i]) / constant_term(r_p1d2[i]), order)
                ηx1[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξz[i]), order)
                ηy1[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξx[i]), order)
                ηz1[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξy[i]), order)
                ηx2[i] = Taylor1(constant_term(M_[3, 3, i]) * constant_term(ξy[i]), order)
                ηy2[i] = Taylor1(constant_term(M_[1, 3, i]) * constant_term(ξz[i]), order)
                ηz2[i] = Taylor1(constant_term(M_[2, 3, i]) * constant_term(ξx[i]), order)
                ηx[i] = Taylor1(constant_term(ηx1[i]) - constant_term(ηx2[i]), order)
                ηy[i] = Taylor1(constant_term(ηy1[i]) - constant_term(ηy2[i]), order)
                ηz[i] = Taylor1(constant_term(ηz1[i]) - constant_term(ηz2[i]), order)
                ζx1[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηz[i]), order)
                ζy1[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηx[i]), order)
                ζz1[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηy[i]), order)
                ζx2[i] = Taylor1(constant_term(ξz[i]) * constant_term(ηy[i]), order)
                ζy2[i] = Taylor1(constant_term(ξx[i]) * constant_term(ηz[i]), order)
                ζz2[i] = Taylor1(constant_term(ξy[i]) * constant_term(ηx[i]), order)
                ζx[i] = Taylor1(constant_term(ζx1[i]) - constant_term(ζx2[i]), order)
                ζy[i] = Taylor1(constant_term(ζy1[i]) - constant_term(ζy2[i]), order)
                ζz[i] = Taylor1(constant_term(ζz1[i]) - constant_term(ζz2[i]), order)
                F_J2_x1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξx[i]), order)
                F_J2_y1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξy[i]), order)
                F_J2_z1[i] = Taylor1(constant_term(F_J_ξ[i]) * constant_term(ξz[i]), order)
                F_J2_x2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζx[i]), order)
                F_J2_y2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζy[i]), order)
                F_J2_z2[i] = Taylor1(constant_term(F_J_ζ[i]) * constant_term(ζz[i]), order)
                F_J2_x[i] = Taylor1(constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i]), order)
                F_J2_y[i] = Taylor1(constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i]), order)
                F_J2_z[i] = Taylor1(constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i]), order)
            end
            tmp1452[i] = Taylor1(constant_term(ui[i]) ^ float(constant_term(2)), order)
            tmp1454[i] = Taylor1(constant_term(vi[i]) ^ float(constant_term(2)), order)
            tmp1455[i] = Taylor1(constant_term(tmp1452[i]) + constant_term(tmp1454[i]), order)
            tmp1457[i] = Taylor1(constant_term(wi[i]) ^ float(constant_term(2)), order)
            v2[i] = Taylor1(constant_term(tmp1455[i]) + constant_term(tmp1457[i]), order)
        end
    tmp1460 = Taylor1(constant_term(q[4]) ^ float(constant_term(2)), order)
    tmp1462 = Taylor1(constant_term(q[5]) ^ float(constant_term(2)), order)
    tmp1463 = Taylor1(constant_term(tmp1460) + constant_term(tmp1462), order)
    tmp1465 = Taylor1(constant_term(q[6]) ^ float(constant_term(2)), order)
    v2[N] = Taylor1(constant_term(tmp1463) + constant_term(tmp1465), order)
    temp_004 = Array{Taylor1{_S}}(undef, size(newtonian1b_Potential))
    temp_004 .= Taylor1(zero(_S), order)
    tmp1468 = Array{Taylor1{_S}}(undef, size(μ))
    tmp1468 .= Taylor1(zero(_S), order)
    tmp1470 = Array{Taylor1{_S}}(undef, size(μ))
    tmp1470 .= Taylor1(zero(_S), order)
    tmp1472 = Array{Taylor1{_S}}(undef, size(μ))
    tmp1472 .= Taylor1(zero(_S), order)
    for i = 1:Nm1
        temp_004[i] = Taylor1(constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N]), order)
        newtonianNb_Potential[N] = Taylor1(identity(constant_term(temp_004[i])), order)
        if UJ_interaction[i]
            tmp1468[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_x[i]), order)
            temp_accX_i[i] = Taylor1(constant_term(accX) - constant_term(tmp1468[i]), order)
            accX = Taylor1(identity(constant_term(temp_accX_i[i])), order)
            tmp1470[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_y[i]), order)
            temp_accY_i[i] = Taylor1(constant_term(accY) - constant_term(tmp1470[i]), order)
            accY = Taylor1(identity(constant_term(temp_accY_i[i])), order)
            tmp1472[i] = Taylor1(constant_term(μ[i]) * constant_term(F_J2_z[i]), order)
            temp_accZ_i[i] = Taylor1(constant_term(accZ) - constant_term(tmp1472[i]), order)
            accZ = Taylor1(identity(constant_term(temp_accZ_i[i])), order)
        end
    end
    _4ϕj[N] = Taylor1(constant_term(4) * constant_term(newtonianNb_Potential[N]), order)
    tmp1478 = Array{Taylor1{_S}}(undef, size(v2))
    tmp1478 .= Taylor1(zero(_S), order)
    tmp1480 = Array{Taylor1{_S}}(undef, size(vi_dot_vj))
    tmp1480 .= Taylor1(zero(_S), order)
    tmp1481 = Array{Taylor1{_S}}(undef, size(tmp1478))
    tmp1481 .= Taylor1(zero(_S), order)
    Xij_t_Ui = Array{Taylor1{_S}}(undef, size(X))
    Xij_t_Ui .= Taylor1(zero(_S), order)
    Yij_t_Vi = Array{Taylor1{_S}}(undef, size(Y))
    Yij_t_Vi .= Taylor1(zero(_S), order)
    Zij_t_Wi = Array{Taylor1{_S}}(undef, size(Z))
    Zij_t_Wi .= Taylor1(zero(_S), order)
    tmp1487 = Array{Taylor1{_S}}(undef, size(Xij_t_Ui))
    tmp1487 .= Taylor1(zero(_S), order)
    Rij_dot_Vi = Array{Taylor1{_S}}(undef, size(tmp1487))
    Rij_dot_Vi .= Taylor1(zero(_S), order)
    tmp1490 = Array{Taylor1{_S}}(undef, size(Rij_dot_Vi))
    tmp1490 .= Taylor1(zero(_S), order)
    pn1t7 = Array{Taylor1{_S}}(undef, size(tmp1490))
    pn1t7 .= Taylor1(zero(_S), order)
    tmp1493 = Array{Taylor1{_S}}(undef, size(pn1t7))
    tmp1493 .= Taylor1(zero(_S), order)
    pn1t2_7 = Array{Taylor1{_S}}(undef, size(ϕs_and_vs))
    pn1t2_7 .= Taylor1(zero(_S), order)
    tmp1500 = Array{Taylor1{_S}}(undef, size(pNX_t_X))
    tmp1500 .= Taylor1(zero(_S), order)
    tmp1501 = Array{Taylor1{_S}}(undef, size(tmp1500))
    tmp1501 .= Taylor1(zero(_S), order)
    tmp1502 = Array{Taylor1{_S}}(undef, size(tmp1501))
    tmp1502 .= Taylor1(zero(_S), order)
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:447 =# Threads.@threads for i = 1:10
            ϕi_plus_4ϕj[i] = Taylor1(constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N]), order)
            tmp1478[i] = Taylor1(constant_term(2) * constant_term(v2[i]), order)
            tmp1480[i] = Taylor1(constant_term(4) * constant_term(vi_dot_vj[i]), order)
            tmp1481[i] = Taylor1(constant_term(tmp1478[i]) - constant_term(tmp1480[i]), order)
            sj2_plus_2si2_minus_4vivj[i] = Taylor1(constant_term(tmp1481[i]) + constant_term(v2[N]), order)
            ϕs_and_vs[i] = Taylor1(constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i]), order)
            Xij_t_Ui[i] = Taylor1(constant_term(X[i]) * constant_term(ui[i]), order)
            Yij_t_Vi[i] = Taylor1(constant_term(Y[i]) * constant_term(vi[i]), order)
            Zij_t_Wi[i] = Taylor1(constant_term(Z[i]) * constant_term(wi[i]), order)
            tmp1487[i] = Taylor1(constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i]), order)
            Rij_dot_Vi[i] = Taylor1(constant_term(tmp1487[i]) + constant_term(Zij_t_Wi[i]), order)
            tmp1490[i] = Taylor1(constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2)), order)
            pn1t7[i] = Taylor1(constant_term(tmp1490[i]) / constant_term(r_p2[i]), order)
            tmp1493[i] = Taylor1(constant_term(1.5) * constant_term(pn1t7[i]), order)
            pn1t2_7[i] = Taylor1(constant_term(ϕs_and_vs[i]) - constant_term(tmp1493[i]), order)
            pn1t1_7[i] = Taylor1(constant_term(c_p2) + constant_term(pn1t2_7[i]), order)
            pNX_t_X[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(X[i]), order)
            pNY_t_Y[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(Y[i]), order)
            pNZ_t_Z[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(Z[i]), order)
            tmp1500[i] = Taylor1(constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i]), order)
            tmp1501[i] = Taylor1(constant_term(tmp1500[i]) + constant_term(pNZ_t_Z[i]), order)
            tmp1502[i] = Taylor1(constant_term(0.5) * constant_term(tmp1501[i]), order)
            pn1[i] = Taylor1(constant_term(pn1t1_7[i]) + constant_term(tmp1502[i]), order)
            X_t_pn1[i] = Taylor1(constant_term(newton_acc_X[i]) * constant_term(pn1[i]), order)
            Y_t_pn1[i] = Taylor1(constant_term(newton_acc_Y[i]) * constant_term(pn1[i]), order)
            Z_t_pn1[i] = Taylor1(constant_term(newton_acc_Z[i]) * constant_term(pn1[i]), order)
            pNX_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 2]) * constant_term(pn3[i]), order)
            pNY_t_pn3[i] = Taylor1(constant_term(acceph_t[3i - 1]) * constant_term(pn3[i]), order)
            pNZ_t_pn3[i] = Taylor1(constant_term(acceph_t[3i]) * constant_term(pn3[i]), order)
        end
    tmp1510 = Array{Taylor1{_S}}(undef, size(U_t_pn2))
    tmp1510 .= Taylor1(zero(_S), order)
    termpnx = Array{Taylor1{_S}}(undef, size(X_t_pn1))
    termpnx .= Taylor1(zero(_S), order)
    sumpnx = Array{Taylor1{_S}}(undef, size(termpnx))
    sumpnx .= Taylor1(zero(_S), order)
    tmp1513 = Array{Taylor1{_S}}(undef, size(V_t_pn2))
    tmp1513 .= Taylor1(zero(_S), order)
    termpny = Array{Taylor1{_S}}(undef, size(Y_t_pn1))
    termpny .= Taylor1(zero(_S), order)
    sumpny = Array{Taylor1{_S}}(undef, size(termpny))
    sumpny .= Taylor1(zero(_S), order)
    tmp1516 = Array{Taylor1{_S}}(undef, size(W_t_pn2))
    tmp1516 .= Taylor1(zero(_S), order)
    termpnz = Array{Taylor1{_S}}(undef, size(Z_t_pn1))
    termpnz .= Taylor1(zero(_S), order)
    sumpnz = Array{Taylor1{_S}}(undef, size(termpnz))
    sumpnz .= Taylor1(zero(_S), order)
    for i = 1:10
        tmp1510[i] = Taylor1(constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i]), order)
        termpnx[i] = Taylor1(constant_term(X_t_pn1[i]) + constant_term(tmp1510[i]), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        tmp1513[i] = Taylor1(constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i]), order)
        termpny[i] = Taylor1(constant_term(Y_t_pn1[i]) + constant_term(tmp1513[i]), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        tmp1516[i] = Taylor1(constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i]), order)
        termpnz[i] = Taylor1(constant_term(Z_t_pn1[i]) + constant_term(tmp1516[i]), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:500 =# Threads.@threads for i = 11:Nm1
            X_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_X[i]), order)
            Y_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Y[i]), order)
            Z_t_pn1[i] = Taylor1(constant_term(c_p2) * constant_term(newton_acc_Z[i]), order)
        end
    for i = 11:Nm1
        termpnx[i] = Taylor1(identity(constant_term(X_t_pn1[i])), order)
        sumpnx[i] = Taylor1(constant_term(pntempX) + constant_term(termpnx[i]), order)
        pntempX = Taylor1(identity(constant_term(sumpnx[i])), order)
        termpny[i] = Taylor1(identity(constant_term(Y_t_pn1[i])), order)
        sumpny[i] = Taylor1(constant_term(pntempY) + constant_term(termpny[i]), order)
        pntempY = Taylor1(identity(constant_term(sumpny[i])), order)
        termpnz[i] = Taylor1(identity(constant_term(Z_t_pn1[i])), order)
        sumpnz[i] = Taylor1(constant_term(pntempZ) + constant_term(termpnz[i]), order)
        pntempZ = Taylor1(identity(constant_term(sumpnz[i])), order)
    end
    postNewtonX = Taylor1(constant_term(pntempX) * constant_term(c_m2), order)
    postNewtonY = Taylor1(constant_term(pntempY) * constant_term(c_m2), order)
    postNewtonZ = Taylor1(constant_term(pntempZ) * constant_term(c_m2), order)
    tmp1528 = Taylor1(constant_term(Y[1]) * constant_term(W[1]), order)
    tmp1529 = Taylor1(constant_term(Z[1]) * constant_term(V[1]), order)
    hx = Taylor1(constant_term(tmp1528) - constant_term(tmp1529), order)
    tmp1531 = Taylor1(constant_term(Z[1]) * constant_term(U[1]), order)
    tmp1532 = Taylor1(constant_term(X[1]) * constant_term(W[1]), order)
    hy = Taylor1(constant_term(tmp1531) - constant_term(tmp1532), order)
    tmp1534 = Taylor1(constant_term(X[1]) * constant_term(V[1]), order)
    tmp1535 = Taylor1(constant_term(Y[1]) * constant_term(U[1]), order)
    hz = Taylor1(constant_term(tmp1534) - constant_term(tmp1535), order)
    tmp1537 = Taylor1(constant_term(hz) * constant_term(Y[1]), order)
    tmp1538 = Taylor1(constant_term(hy) * constant_term(Z[1]), order)
    t_x = Taylor1(constant_term(tmp1537) - constant_term(tmp1538), order)
    tmp1540 = Taylor1(constant_term(hx) * constant_term(Z[1]), order)
    tmp1541 = Taylor1(constant_term(hz) * constant_term(X[1]), order)
    t_y = Taylor1(constant_term(tmp1540) - constant_term(tmp1541), order)
    tmp1543 = Taylor1(constant_term(hy) * constant_term(X[1]), order)
    tmp1544 = Taylor1(constant_term(hx) * constant_term(Y[1]), order)
    t_z = Taylor1(constant_term(tmp1543) - constant_term(tmp1544), order)
    tmp1547 = Taylor1(constant_term(t_x) ^ float(constant_term(2)), order)
    tmp1549 = Taylor1(constant_term(t_y) ^ float(constant_term(2)), order)
    tmp1550 = Taylor1(constant_term(tmp1547) + constant_term(tmp1549), order)
    tmp1552 = Taylor1(constant_term(t_z) ^ float(constant_term(2)), order)
    tmp1553 = Taylor1(constant_term(tmp1550) + constant_term(tmp1552), order)
    t_norm = Taylor1(sqrt(constant_term(tmp1553)), order)
    t_x_unit = Taylor1(constant_term(t_x) / constant_term(t_norm), order)
    t_y_unit = Taylor1(constant_term(t_y) / constant_term(t_norm), order)
    t_z_unit = Taylor1(constant_term(t_z) / constant_term(t_norm), order)
    tmp1558 = Taylor1(constant_term(X[1]) / constant_term(r_p1d2[1]), order)
    r_x_unit = Taylor1(-(constant_term(tmp1558)), order)
    tmp1560 = Taylor1(constant_term(Y[1]) / constant_term(r_p1d2[1]), order)
    r_y_unit = Taylor1(-(constant_term(tmp1560)), order)
    tmp1562 = Taylor1(constant_term(Z[1]) / constant_term(r_p1d2[1]), order)
    r_z_unit = Taylor1(-(constant_term(tmp1562)), order)
    g_r = Taylor1(identity(constant_term(r_p2[1])), order)
    A2_t_g_r = Taylor1(constant_term(q[7]) / constant_term(g_r), order)
    A1_t_g_r = Taylor1(constant_term(q[8]) / constant_term(g_r), order)
    tmp1566 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_x_unit), order)
    tmp1567 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_x_unit), order)
    NGAx = Taylor1(constant_term(tmp1566) + constant_term(tmp1567), order)
    tmp1569 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_y_unit), order)
    tmp1570 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_y_unit), order)
    NGAy = Taylor1(constant_term(tmp1569) + constant_term(tmp1570), order)
    tmp1572 = Taylor1(constant_term(A2_t_g_r) * constant_term(t_z_unit), order)
    tmp1573 = Taylor1(constant_term(A1_t_g_r) * constant_term(r_z_unit), order)
    NGAz = Taylor1(constant_term(tmp1572) + constant_term(tmp1573), order)
    tmp1575 = Taylor1(constant_term(postNewtonX) + constant_term(accX), order)
    dq[4] = Taylor1(constant_term(tmp1575) + constant_term(NGAx), order)
    tmp1577 = Taylor1(constant_term(postNewtonY) + constant_term(accY), order)
    dq[5] = Taylor1(constant_term(tmp1577) + constant_term(NGAy), order)
    tmp1579 = Taylor1(constant_term(postNewtonZ) + constant_term(accZ), order)
    dq[6] = Taylor1(constant_term(tmp1579) + constant_term(NGAz), order)
    dq[7] = Taylor1(identity(constant_term(zero_q_1)), order)
    return TaylorIntegration.RetAlloc{Taylor1{_S}}([tmp1460, tmp1462, tmp1463, tmp1465, tmp1528, tmp1529, tmp1531, tmp1532, tmp1534, tmp1535, tmp1537, tmp1538, tmp1540, tmp1541, tmp1543, tmp1544, tmp1547, tmp1549, tmp1550, tmp1552, tmp1553, tmp1558, tmp1560, tmp1562, tmp1566, tmp1567, tmp1569, tmp1570, tmp1572, tmp1573, tmp1575, tmp1577, tmp1579, pntempX, pntempY, pntempZ, accX, accY, accZ, postNewtonX, postNewtonY, postNewtonZ, hx, hy, hz, t_x, t_y, t_z, t_norm, t_x_unit, t_y_unit, t_z_unit, r_x_unit, r_y_unit, r_z_unit, g_r, A2_t_g_r, A1_t_g_r, NGAx, NGAy, NGAz], [X, Y, Z, r_p2, r_p1d2, r_p3d2, r_p7d2, newtonianCoeff, ui, vi, wi, U, V, W, _4U_m_3X, _4V_m_3Y, _4W_m_3Z, UU, VV, WW, newtonian1b_Potential, newtonianNb_Potential, newton_acc_X, newton_acc_Y, newton_acc_Z, v2, vi_dot_vj, pn2, U_t_pn2, V_t_pn2, W_t_pn2, pn3, pNX_t_pn3, pNY_t_pn3, pNZ_t_pn3, _4ϕj, ϕi_plus_4ϕj, sj2_plus_2si2_minus_4vivj, ϕs_and_vs, pn1t1_7, pNX_t_X, pNY_t_Y, pNZ_t_Z, pn1, X_t_pn1, Y_t_pn1, Z_t_pn1, t31, t32, t33, r_sin_ϕ, sin_ϕ, ϕ, cos_ϕ, sin2_ϕ, sin3_ϕ, F_J2_x, F_J2_y, F_J2_z, F_J2_x1, F_J2_y1, F_J2_z1, F_J2_x2, F_J2_y2, F_J2_z2, temp_accX_i, temp_accY_i, temp_accZ_i, P_2_sin_ϕ, ∂P_2_sin_ϕ, P_3_sin_ϕ, ∂P_3_sin_ϕ, m_c_ϕ_∂P_2, m_c_ϕ_∂P_3, Λ2j_div_r4, Λ3j_div_r5, F_J_ξ, F_J_ζ, F_J2_ξ, F_J2_ζ, F_J3_ξ, F_J3_ζ, ξx, ξy, ξz, ηx, ηy, ηz, ηx1, ηy1, ηz1, ηx2, ηy2, ηz2, ζx, ζy, ζz, ζx1, ζy1, ζz1, ζx2, ζy2, ζz2, tmp1320, tmp1322, tmp1325, tmp1327, tmp1330, tmp1332, pn2x, pn2y, pn2z, tmp1340, tmp1343, tmp1345, tmp1346, tmp1348, tmp1356, tmp1357, tmp1368, tmp1370, tmp1372, tmp1374, tmp1581, tmp1582, tmp1384, tmp1390, tmp1392, tmp1396, tmp1399, tmp1400, tmp1403, tmp1404, tmp1406, tmp1408, tmp1411, tmp1415, tmp1418, tmp1420, tmp1422, tmp1452, tmp1454, tmp1455, tmp1457, temp_004, tmp1468, tmp1470, tmp1472, tmp1478, tmp1480, tmp1481, Xij_t_Ui, Yij_t_Vi, Zij_t_Wi, tmp1487, Rij_dot_Vi, tmp1490, pn1t7, tmp1493, pn1t2_7, tmp1500, tmp1501, tmp1502, tmp1510, termpnx, sumpnx, tmp1513, termpny, sumpny, tmp1516, termpnz, sumpnz], [Array{Taylor1{_S}, 2}(undef, 0, 0)], [Array{Taylor1{_S}, 3}(undef, 0, 0, 0)], [Array{Taylor1{_S}, 4}(undef, 0, 0, 0, 0)])
end

# TaylorIntegration.jetcoeffs! method for src/propagation/asteroid_dynamical_models.jl: RNp1BP_pN_A_J23E_J2S_ng_eph_threads!
function TaylorIntegration.jetcoeffs!(::Val{RNp1BP_pN_A_J23E_J2S_ng_eph_threads!}, t::Taylor1{_T}, q::AbstractArray{Taylor1{_S}, _N}, dq::AbstractArray{Taylor1{_S}, _N}, params, __ralloc::TaylorIntegration.RetAlloc{Taylor1{_S}}) where {_T <: Real, _S <: Number, _N}
    order = t.order
    tmp1460 = __ralloc.v0[1]
    tmp1462 = __ralloc.v0[2]
    tmp1463 = __ralloc.v0[3]
    tmp1465 = __ralloc.v0[4]
    tmp1528 = __ralloc.v0[5]
    tmp1529 = __ralloc.v0[6]
    tmp1531 = __ralloc.v0[7]
    tmp1532 = __ralloc.v0[8]
    tmp1534 = __ralloc.v0[9]
    tmp1535 = __ralloc.v0[10]
    tmp1537 = __ralloc.v0[11]
    tmp1538 = __ralloc.v0[12]
    tmp1540 = __ralloc.v0[13]
    tmp1541 = __ralloc.v0[14]
    tmp1543 = __ralloc.v0[15]
    tmp1544 = __ralloc.v0[16]
    tmp1547 = __ralloc.v0[17]
    tmp1549 = __ralloc.v0[18]
    tmp1550 = __ralloc.v0[19]
    tmp1552 = __ralloc.v0[20]
    tmp1553 = __ralloc.v0[21]
    tmp1558 = __ralloc.v0[22]
    tmp1560 = __ralloc.v0[23]
    tmp1562 = __ralloc.v0[24]
    tmp1566 = __ralloc.v0[25]
    tmp1567 = __ralloc.v0[26]
    tmp1569 = __ralloc.v0[27]
    tmp1570 = __ralloc.v0[28]
    tmp1572 = __ralloc.v0[29]
    tmp1573 = __ralloc.v0[30]
    tmp1575 = __ralloc.v0[31]
    tmp1577 = __ralloc.v0[32]
    tmp1579 = __ralloc.v0[33]
    pntempX = __ralloc.v0[34]
    pntempY = __ralloc.v0[35]
    pntempZ = __ralloc.v0[36]
    accX = __ralloc.v0[37]
    accY = __ralloc.v0[38]
    accZ = __ralloc.v0[39]
    postNewtonX = __ralloc.v0[40]
    postNewtonY = __ralloc.v0[41]
    postNewtonZ = __ralloc.v0[42]
    hx = __ralloc.v0[43]
    hy = __ralloc.v0[44]
    hz = __ralloc.v0[45]
    t_x = __ralloc.v0[46]
    t_y = __ralloc.v0[47]
    t_z = __ralloc.v0[48]
    t_norm = __ralloc.v0[49]
    t_x_unit = __ralloc.v0[50]
    t_y_unit = __ralloc.v0[51]
    t_z_unit = __ralloc.v0[52]
    r_x_unit = __ralloc.v0[53]
    r_y_unit = __ralloc.v0[54]
    r_z_unit = __ralloc.v0[55]
    g_r = __ralloc.v0[56]
    A2_t_g_r = __ralloc.v0[57]
    A1_t_g_r = __ralloc.v0[58]
    NGAx = __ralloc.v0[59]
    NGAy = __ralloc.v0[60]
    NGAz = __ralloc.v0[61]
    X = __ralloc.v1[1]
    Y = __ralloc.v1[2]
    Z = __ralloc.v1[3]
    r_p2 = __ralloc.v1[4]
    r_p1d2 = __ralloc.v1[5]
    r_p3d2 = __ralloc.v1[6]
    r_p7d2 = __ralloc.v1[7]
    newtonianCoeff = __ralloc.v1[8]
    ui = __ralloc.v1[9]
    vi = __ralloc.v1[10]
    wi = __ralloc.v1[11]
    U = __ralloc.v1[12]
    V = __ralloc.v1[13]
    W = __ralloc.v1[14]
    _4U_m_3X = __ralloc.v1[15]
    _4V_m_3Y = __ralloc.v1[16]
    _4W_m_3Z = __ralloc.v1[17]
    UU = __ralloc.v1[18]
    VV = __ralloc.v1[19]
    WW = __ralloc.v1[20]
    newtonian1b_Potential = __ralloc.v1[21]
    newtonianNb_Potential = __ralloc.v1[22]
    newton_acc_X = __ralloc.v1[23]
    newton_acc_Y = __ralloc.v1[24]
    newton_acc_Z = __ralloc.v1[25]
    v2 = __ralloc.v1[26]
    vi_dot_vj = __ralloc.v1[27]
    pn2 = __ralloc.v1[28]
    U_t_pn2 = __ralloc.v1[29]
    V_t_pn2 = __ralloc.v1[30]
    W_t_pn2 = __ralloc.v1[31]
    pn3 = __ralloc.v1[32]
    pNX_t_pn3 = __ralloc.v1[33]
    pNY_t_pn3 = __ralloc.v1[34]
    pNZ_t_pn3 = __ralloc.v1[35]
    _4ϕj = __ralloc.v1[36]
    ϕi_plus_4ϕj = __ralloc.v1[37]
    sj2_plus_2si2_minus_4vivj = __ralloc.v1[38]
    ϕs_and_vs = __ralloc.v1[39]
    pn1t1_7 = __ralloc.v1[40]
    pNX_t_X = __ralloc.v1[41]
    pNY_t_Y = __ralloc.v1[42]
    pNZ_t_Z = __ralloc.v1[43]
    pn1 = __ralloc.v1[44]
    X_t_pn1 = __ralloc.v1[45]
    Y_t_pn1 = __ralloc.v1[46]
    Z_t_pn1 = __ralloc.v1[47]
    t31 = __ralloc.v1[48]
    t32 = __ralloc.v1[49]
    t33 = __ralloc.v1[50]
    r_sin_ϕ = __ralloc.v1[51]
    sin_ϕ = __ralloc.v1[52]
    ϕ = __ralloc.v1[53]
    cos_ϕ = __ralloc.v1[54]
    sin2_ϕ = __ralloc.v1[55]
    sin3_ϕ = __ralloc.v1[56]
    F_J2_x = __ralloc.v1[57]
    F_J2_y = __ralloc.v1[58]
    F_J2_z = __ralloc.v1[59]
    F_J2_x1 = __ralloc.v1[60]
    F_J2_y1 = __ralloc.v1[61]
    F_J2_z1 = __ralloc.v1[62]
    F_J2_x2 = __ralloc.v1[63]
    F_J2_y2 = __ralloc.v1[64]
    F_J2_z2 = __ralloc.v1[65]
    temp_accX_i = __ralloc.v1[66]
    temp_accY_i = __ralloc.v1[67]
    temp_accZ_i = __ralloc.v1[68]
    P_2_sin_ϕ = __ralloc.v1[69]
    ∂P_2_sin_ϕ = __ralloc.v1[70]
    P_3_sin_ϕ = __ralloc.v1[71]
    ∂P_3_sin_ϕ = __ralloc.v1[72]
    m_c_ϕ_∂P_2 = __ralloc.v1[73]
    m_c_ϕ_∂P_3 = __ralloc.v1[74]
    Λ2j_div_r4 = __ralloc.v1[75]
    Λ3j_div_r5 = __ralloc.v1[76]
    F_J_ξ = __ralloc.v1[77]
    F_J_ζ = __ralloc.v1[78]
    F_J2_ξ = __ralloc.v1[79]
    F_J2_ζ = __ralloc.v1[80]
    F_J3_ξ = __ralloc.v1[81]
    F_J3_ζ = __ralloc.v1[82]
    ξx = __ralloc.v1[83]
    ξy = __ralloc.v1[84]
    ξz = __ralloc.v1[85]
    ηx = __ralloc.v1[86]
    ηy = __ralloc.v1[87]
    ηz = __ralloc.v1[88]
    ηx1 = __ralloc.v1[89]
    ηy1 = __ralloc.v1[90]
    ηz1 = __ralloc.v1[91]
    ηx2 = __ralloc.v1[92]
    ηy2 = __ralloc.v1[93]
    ηz2 = __ralloc.v1[94]
    ζx = __ralloc.v1[95]
    ζy = __ralloc.v1[96]
    ζz = __ralloc.v1[97]
    ζx1 = __ralloc.v1[98]
    ζy1 = __ralloc.v1[99]
    ζz1 = __ralloc.v1[100]
    ζx2 = __ralloc.v1[101]
    ζy2 = __ralloc.v1[102]
    ζz2 = __ralloc.v1[103]
    tmp1320 = __ralloc.v1[104]
    tmp1322 = __ralloc.v1[105]
    tmp1325 = __ralloc.v1[106]
    tmp1327 = __ralloc.v1[107]
    tmp1330 = __ralloc.v1[108]
    tmp1332 = __ralloc.v1[109]
    pn2x = __ralloc.v1[110]
    pn2y = __ralloc.v1[111]
    pn2z = __ralloc.v1[112]
    tmp1340 = __ralloc.v1[113]
    tmp1343 = __ralloc.v1[114]
    tmp1345 = __ralloc.v1[115]
    tmp1346 = __ralloc.v1[116]
    tmp1348 = __ralloc.v1[117]
    tmp1356 = __ralloc.v1[118]
    tmp1357 = __ralloc.v1[119]
    tmp1368 = __ralloc.v1[120]
    tmp1370 = __ralloc.v1[121]
    tmp1372 = __ralloc.v1[122]
    tmp1374 = __ralloc.v1[123]
    tmp1581 = __ralloc.v1[124]
    tmp1582 = __ralloc.v1[125]
    tmp1384 = __ralloc.v1[126]
    tmp1390 = __ralloc.v1[127]
    tmp1392 = __ralloc.v1[128]
    tmp1396 = __ralloc.v1[129]
    tmp1399 = __ralloc.v1[130]
    tmp1400 = __ralloc.v1[131]
    tmp1403 = __ralloc.v1[132]
    tmp1404 = __ralloc.v1[133]
    tmp1406 = __ralloc.v1[134]
    tmp1408 = __ralloc.v1[135]
    tmp1411 = __ralloc.v1[136]
    tmp1415 = __ralloc.v1[137]
    tmp1418 = __ralloc.v1[138]
    tmp1420 = __ralloc.v1[139]
    tmp1422 = __ralloc.v1[140]
    tmp1452 = __ralloc.v1[141]
    tmp1454 = __ralloc.v1[142]
    tmp1455 = __ralloc.v1[143]
    tmp1457 = __ralloc.v1[144]
    temp_004 = __ralloc.v1[145]
    tmp1468 = __ralloc.v1[146]
    tmp1470 = __ralloc.v1[147]
    tmp1472 = __ralloc.v1[148]
    tmp1478 = __ralloc.v1[149]
    tmp1480 = __ralloc.v1[150]
    tmp1481 = __ralloc.v1[151]
    Xij_t_Ui = __ralloc.v1[152]
    Yij_t_Vi = __ralloc.v1[153]
    Zij_t_Wi = __ralloc.v1[154]
    tmp1487 = __ralloc.v1[155]
    Rij_dot_Vi = __ralloc.v1[156]
    tmp1490 = __ralloc.v1[157]
    pn1t7 = __ralloc.v1[158]
    tmp1493 = __ralloc.v1[159]
    pn1t2_7 = __ralloc.v1[160]
    tmp1500 = __ralloc.v1[161]
    tmp1501 = __ralloc.v1[162]
    tmp1502 = __ralloc.v1[163]
    tmp1510 = __ralloc.v1[164]
    termpnx = __ralloc.v1[165]
    sumpnx = __ralloc.v1[166]
    tmp1513 = __ralloc.v1[167]
    termpny = __ralloc.v1[168]
    sumpny = __ralloc.v1[169]
    tmp1516 = __ralloc.v1[170]
    termpnz = __ralloc.v1[171]
    sumpnz = __ralloc.v1[172]
    local jd0 = params[4]
    local dsj2k = t + (jd0 - JD_J2000)
    local ss16asteph_t = params[1]
    local acceph_t = params[2]
    local newtonianNb_Potential_t = params[3]
    local S = eltype(q)
    local UJ_interaction = params[5]
    local N = params[6]
    local Nm1 = N - 1
    local μ = params[7]
    local zero_q_1 = auxzero(q[1])
    pntempX.coeffs[1] = identity(constant_term(zero_q_1))
    pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
    pntempY.coeffs[1] = identity(constant_term(zero_q_1))
    pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
    pntempZ.coeffs[1] = identity(constant_term(zero_q_1))
    pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    accX.coeffs[1] = identity(constant_term(zero_q_1))
    accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
    accY.coeffs[1] = identity(constant_term(zero_q_1))
    accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
    accZ.coeffs[1] = identity(constant_term(zero_q_1))
    accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
    local M_ = Array{S}(undef, 3, 3, N)
    local M_[:, :, ea] = t2c_jpl_de430(dsj2k)
    (dq[1]).coeffs[1] = identity(constant_term(q[4]))
    (dq[1]).coeffs[2:order + 1] .= zero((dq[1]).coeffs[1])
    (dq[2]).coeffs[1] = identity(constant_term(q[5]))
    (dq[2]).coeffs[2:order + 1] .= zero((dq[2]).coeffs[1])
    (dq[3]).coeffs[1] = identity(constant_term(q[6]))
    (dq[3]).coeffs[2:order + 1] .= zero((dq[3]).coeffs[1])
    (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(zero_q_1))
    (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:245 =# Threads.@threads for i = 1:Nm1
            (ui[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 2]))
            (ui[i]).coeffs[2:order + 1] .= zero((ui[i]).coeffs[1])
            (vi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i) - 1]))
            (vi[i]).coeffs[2:order + 1] .= zero((vi[i]).coeffs[1])
            (wi[i]).coeffs[1] = identity(constant_term(ss16asteph_t[3 * ((N - 1) + i)]))
            (wi[i]).coeffs[2:order + 1] .= zero((wi[i]).coeffs[1])
            (X[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 2]) - constant_term(q[1])
            (X[i]).coeffs[2:order + 1] .= zero((X[i]).coeffs[1])
            (Y[i]).coeffs[1] = constant_term(ss16asteph_t[3i - 1]) - constant_term(q[2])
            (Y[i]).coeffs[2:order + 1] .= zero((Y[i]).coeffs[1])
            (Z[i]).coeffs[1] = constant_term(ss16asteph_t[3i]) - constant_term(q[3])
            (Z[i]).coeffs[2:order + 1] .= zero((Z[i]).coeffs[1])
            (U[i]).coeffs[1] = constant_term(ui[i]) - constant_term(dq[1])
            (U[i]).coeffs[2:order + 1] .= zero((U[i]).coeffs[1])
            (V[i]).coeffs[1] = constant_term(vi[i]) - constant_term(dq[2])
            (V[i]).coeffs[2:order + 1] .= zero((V[i]).coeffs[1])
            (W[i]).coeffs[1] = constant_term(wi[i]) - constant_term(dq[3])
            (W[i]).coeffs[2:order + 1] .= zero((W[i]).coeffs[1])
            (tmp1320[1]).coeffs[1] = constant_term(4) * constant_term(dq[1])
            (tmp1320[1]).coeffs[2:order + 1] .= zero((tmp1320[1]).coeffs[1])
            (tmp1322[i]).coeffs[1] = constant_term(3) * constant_term(ui[i])
            (tmp1322[i]).coeffs[2:order + 1] .= zero((tmp1322[i]).coeffs[1])
            (_4U_m_3X[i]).coeffs[1] = constant_term(tmp1320[1]) - constant_term(tmp1322[i])
            (_4U_m_3X[i]).coeffs[2:order + 1] .= zero((_4U_m_3X[i]).coeffs[1])
            (tmp1325[2]).coeffs[1] = constant_term(4) * constant_term(dq[2])
            (tmp1325[2]).coeffs[2:order + 1] .= zero((tmp1325[2]).coeffs[1])
            (tmp1327[i]).coeffs[1] = constant_term(3) * constant_term(vi[i])
            (tmp1327[i]).coeffs[2:order + 1] .= zero((tmp1327[i]).coeffs[1])
            (_4V_m_3Y[i]).coeffs[1] = constant_term(tmp1325[2]) - constant_term(tmp1327[i])
            (_4V_m_3Y[i]).coeffs[2:order + 1] .= zero((_4V_m_3Y[i]).coeffs[1])
            (tmp1330[3]).coeffs[1] = constant_term(4) * constant_term(dq[3])
            (tmp1330[3]).coeffs[2:order + 1] .= zero((tmp1330[3]).coeffs[1])
            (tmp1332[i]).coeffs[1] = constant_term(3) * constant_term(wi[i])
            (tmp1332[i]).coeffs[2:order + 1] .= zero((tmp1332[i]).coeffs[1])
            (_4W_m_3Z[i]).coeffs[1] = constant_term(tmp1330[3]) - constant_term(tmp1332[i])
            (_4W_m_3Z[i]).coeffs[2:order + 1] .= zero((_4W_m_3Z[i]).coeffs[1])
            (pn2x[i]).coeffs[1] = constant_term(X[i]) * constant_term(_4U_m_3X[i])
            (pn2x[i]).coeffs[2:order + 1] .= zero((pn2x[i]).coeffs[1])
            (pn2y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(_4V_m_3Y[i])
            (pn2y[i]).coeffs[2:order + 1] .= zero((pn2y[i]).coeffs[1])
            (pn2z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(_4W_m_3Z[i])
            (pn2z[i]).coeffs[2:order + 1] .= zero((pn2z[i]).coeffs[1])
            (UU[i]).coeffs[1] = constant_term(ui[i]) * constant_term(dq[1])
            (UU[i]).coeffs[2:order + 1] .= zero((UU[i]).coeffs[1])
            (VV[i]).coeffs[1] = constant_term(vi[i]) * constant_term(dq[2])
            (VV[i]).coeffs[2:order + 1] .= zero((VV[i]).coeffs[1])
            (WW[i]).coeffs[1] = constant_term(wi[i]) * constant_term(dq[3])
            (WW[i]).coeffs[2:order + 1] .= zero((WW[i]).coeffs[1])
            (tmp1340[i]).coeffs[1] = constant_term(UU[i]) + constant_term(VV[i])
            (tmp1340[i]).coeffs[2:order + 1] .= zero((tmp1340[i]).coeffs[1])
            (vi_dot_vj[i]).coeffs[1] = constant_term(tmp1340[i]) + constant_term(WW[i])
            (vi_dot_vj[i]).coeffs[2:order + 1] .= zero((vi_dot_vj[i]).coeffs[1])
            (tmp1343[i]).coeffs[1] = constant_term(X[i]) ^ float(constant_term(2))
            (tmp1343[i]).coeffs[2:order + 1] .= zero((tmp1343[i]).coeffs[1])
            (tmp1345[i]).coeffs[1] = constant_term(Y[i]) ^ float(constant_term(2))
            (tmp1345[i]).coeffs[2:order + 1] .= zero((tmp1345[i]).coeffs[1])
            (tmp1346[i]).coeffs[1] = constant_term(tmp1343[i]) + constant_term(tmp1345[i])
            (tmp1346[i]).coeffs[2:order + 1] .= zero((tmp1346[i]).coeffs[1])
            (tmp1348[i]).coeffs[1] = constant_term(Z[i]) ^ float(constant_term(2))
            (tmp1348[i]).coeffs[2:order + 1] .= zero((tmp1348[i]).coeffs[1])
            (r_p2[i]).coeffs[1] = constant_term(tmp1346[i]) + constant_term(tmp1348[i])
            (r_p2[i]).coeffs[2:order + 1] .= zero((r_p2[i]).coeffs[1])
            (r_p1d2[i]).coeffs[1] = sqrt(constant_term(r_p2[i]))
            (r_p1d2[i]).coeffs[2:order + 1] .= zero((r_p1d2[i]).coeffs[1])
            (r_p3d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(1.5))
            (r_p3d2[i]).coeffs[2:order + 1] .= zero((r_p3d2[i]).coeffs[1])
            (r_p7d2[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(3.5))
            (r_p7d2[i]).coeffs[2:order + 1] .= zero((r_p7d2[i]).coeffs[1])
            (newtonianCoeff[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p3d2[i])
            (newtonianCoeff[i]).coeffs[2:order + 1] .= zero((newtonianCoeff[i]).coeffs[1])
            (tmp1356[i]).coeffs[1] = constant_term(pn2x[i]) + constant_term(pn2y[i])
            (tmp1356[i]).coeffs[2:order + 1] .= zero((tmp1356[i]).coeffs[1])
            (tmp1357[i]).coeffs[1] = constant_term(tmp1356[i]) + constant_term(pn2z[i])
            (tmp1357[i]).coeffs[2:order + 1] .= zero((tmp1357[i]).coeffs[1])
            (pn2[i]).coeffs[1] = constant_term(newtonianCoeff[i]) * constant_term(tmp1357[i])
            (pn2[i]).coeffs[2:order + 1] .= zero((pn2[i]).coeffs[1])
            (newton_acc_X[i]).coeffs[1] = constant_term(X[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_X[i]).coeffs[2:order + 1] .= zero((newton_acc_X[i]).coeffs[1])
            (newton_acc_Y[i]).coeffs[1] = constant_term(Y[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_Y[i]).coeffs[2:order + 1] .= zero((newton_acc_Y[i]).coeffs[1])
            (newton_acc_Z[i]).coeffs[1] = constant_term(Z[i]) * constant_term(newtonianCoeff[i])
            (newton_acc_Z[i]).coeffs[2:order + 1] .= zero((newton_acc_Z[i]).coeffs[1])
            (newtonian1b_Potential[i]).coeffs[1] = constant_term(μ[i]) / constant_term(r_p1d2[i])
            (newtonian1b_Potential[i]).coeffs[2:order + 1] .= zero((newtonian1b_Potential[i]).coeffs[1])
            (pn3[i]).coeffs[1] = constant_term(3.5) * constant_term(newtonian1b_Potential[i])
            (pn3[i]).coeffs[2:order + 1] .= zero((pn3[i]).coeffs[1])
            (U_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(U[i])
            (U_t_pn2[i]).coeffs[2:order + 1] .= zero((U_t_pn2[i]).coeffs[1])
            (V_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(V[i])
            (V_t_pn2[i]).coeffs[2:order + 1] .= zero((V_t_pn2[i]).coeffs[1])
            (W_t_pn2[i]).coeffs[1] = constant_term(pn2[i]) * constant_term(W[i])
            (W_t_pn2[i]).coeffs[2:order + 1] .= zero((W_t_pn2[i]).coeffs[1])
            if UJ_interaction[i]
                (tmp1368[i]).coeffs[1] = -(constant_term(X[i]))
                (tmp1368[i]).coeffs[2:order + 1] .= zero((tmp1368[i]).coeffs[1])
                (t31[i]).coeffs[1] = constant_term(tmp1368[i]) * constant_term(M_[1, 3, i])
                (t31[i]).coeffs[2:order + 1] .= zero((t31[i]).coeffs[1])
                (tmp1370[i]).coeffs[1] = -(constant_term(Y[i]))
                (tmp1370[i]).coeffs[2:order + 1] .= zero((tmp1370[i]).coeffs[1])
                (t32[i]).coeffs[1] = constant_term(tmp1370[i]) * constant_term(M_[2, 3, i])
                (t32[i]).coeffs[2:order + 1] .= zero((t32[i]).coeffs[1])
                (tmp1372[i]).coeffs[1] = -(constant_term(Z[i]))
                (tmp1372[i]).coeffs[2:order + 1] .= zero((tmp1372[i]).coeffs[1])
                (t33[i]).coeffs[1] = constant_term(tmp1372[i]) * constant_term(M_[3, 3, i])
                (t33[i]).coeffs[2:order + 1] .= zero((t33[i]).coeffs[1])
                (tmp1374[i]).coeffs[1] = constant_term(t31[i]) + constant_term(t32[i])
                (tmp1374[i]).coeffs[2:order + 1] .= zero((tmp1374[i]).coeffs[1])
                (r_sin_ϕ[i]).coeffs[1] = constant_term(tmp1374[i]) + constant_term(t33[i])
                (r_sin_ϕ[i]).coeffs[2:order + 1] .= zero((r_sin_ϕ[i]).coeffs[1])
                (sin_ϕ[i]).coeffs[1] = constant_term(r_sin_ϕ[i]) / constant_term(r_p1d2[i])
                (sin_ϕ[i]).coeffs[2:order + 1] .= zero((sin_ϕ[i]).coeffs[1])
                (ϕ[i]).coeffs[1] = asin(constant_term(sin_ϕ[i]))
                (ϕ[i]).coeffs[2:order + 1] .= zero((ϕ[i]).coeffs[1])
                (tmp1581[i]).coeffs[1] = sqrt(1 - constant_term(sin_ϕ[i]) ^ 2)
                (tmp1581[i]).coeffs[2:order + 1] .= zero((tmp1581[i]).coeffs[1])
                (cos_ϕ[i]).coeffs[1] = cos(constant_term(ϕ[i]))
                (cos_ϕ[i]).coeffs[2:order + 1] .= zero((cos_ϕ[i]).coeffs[1])
                (tmp1582[i]).coeffs[1] = sin(constant_term(ϕ[i]))
                (tmp1582[i]).coeffs[2:order + 1] .= zero((tmp1582[i]).coeffs[1])
                (sin2_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(2))
                (sin2_ϕ[i]).coeffs[2:order + 1] .= zero((sin2_ϕ[i]).coeffs[1])
                (sin3_ϕ[i]).coeffs[1] = constant_term(sin_ϕ[i]) ^ float(constant_term(3))
                (sin3_ϕ[i]).coeffs[2:order + 1] .= zero((sin3_ϕ[i]).coeffs[1])
                (tmp1384[i]).coeffs[1] = constant_term(1.5) * constant_term(sin2_ϕ[i])
                (tmp1384[i]).coeffs[2:order + 1] .= zero((tmp1384[i]).coeffs[1])
                (P_2_sin_ϕ[i]).coeffs[1] = constant_term(tmp1384[i]) - constant_term(0.5)
                (P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_2_sin_ϕ[i]).coeffs[1])
                (∂P_2_sin_ϕ[i]).coeffs[1] = constant_term(3) * constant_term(sin_ϕ[i])
                (∂P_2_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_2_sin_ϕ[i]).coeffs[1])
                (tmp1390[i]).coeffs[1] = constant_term(-1.5) * constant_term(sin_ϕ[i])
                (tmp1390[i]).coeffs[2:order + 1] .= zero((tmp1390[i]).coeffs[1])
                (tmp1392[i]).coeffs[1] = constant_term(2.5) * constant_term(sin3_ϕ[i])
                (tmp1392[i]).coeffs[2:order + 1] .= zero((tmp1392[i]).coeffs[1])
                (P_3_sin_ϕ[i]).coeffs[1] = constant_term(tmp1390[i]) + constant_term(tmp1392[i])
                (P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((P_3_sin_ϕ[i]).coeffs[1])
                (tmp1396[i]).coeffs[1] = constant_term(7.5) * constant_term(sin2_ϕ[i])
                (tmp1396[i]).coeffs[2:order + 1] .= zero((tmp1396[i]).coeffs[1])
                (∂P_3_sin_ϕ[i]).coeffs[1] = constant_term(-1.5) + constant_term(tmp1396[i])
                (∂P_3_sin_ϕ[i]).coeffs[2:order + 1] .= zero((∂P_3_sin_ϕ[i]).coeffs[1])
                (tmp1399[i]).coeffs[1] = constant_term(r_p2[i]) ^ float(constant_term(2))
                (tmp1399[i]).coeffs[2:order + 1] .= zero((tmp1399[i]).coeffs[1])
                (tmp1400[i]).coeffs[1] = constant_term(Λ2[i]) / constant_term(tmp1399[i])
                (tmp1400[i]).coeffs[2:order + 1] .= zero((tmp1400[i]).coeffs[1])
                (Λ2j_div_r4[i]).coeffs[1] = -(constant_term(tmp1400[i]))
                (Λ2j_div_r4[i]).coeffs[2:order + 1] .= zero((Λ2j_div_r4[i]).coeffs[1])
                (tmp1403[i]).coeffs[1] = constant_term(r_p1d2[i]) ^ float(constant_term(5))
                (tmp1403[i]).coeffs[2:order + 1] .= zero((tmp1403[i]).coeffs[1])
                (tmp1404[i]).coeffs[1] = constant_term(Λ3[i]) / constant_term(tmp1403[i])
                (tmp1404[i]).coeffs[2:order + 1] .= zero((tmp1404[i]).coeffs[1])
                (Λ3j_div_r5[i]).coeffs[1] = -(constant_term(tmp1404[i]))
                (Λ3j_div_r5[i]).coeffs[2:order + 1] .= zero((Λ3j_div_r5[i]).coeffs[1])
                (tmp1406[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
                (tmp1406[i]).coeffs[2:order + 1] .= zero((tmp1406[i]).coeffs[1])
                (m_c_ϕ_∂P_2[i]).coeffs[1] = constant_term(tmp1406[i]) * constant_term(∂P_2_sin_ϕ[i])
                (m_c_ϕ_∂P_2[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_2[i]).coeffs[1])
                (tmp1408[i]).coeffs[1] = -(constant_term(cos_ϕ[i]))
                (tmp1408[i]).coeffs[2:order + 1] .= zero((tmp1408[i]).coeffs[1])
                (m_c_ϕ_∂P_3[i]).coeffs[1] = constant_term(tmp1408[i]) * constant_term(∂P_3_sin_ϕ[i])
                (m_c_ϕ_∂P_3[i]).coeffs[2:order + 1] .= zero((m_c_ϕ_∂P_3[i]).coeffs[1])
                (tmp1411[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(3)
                (tmp1411[i]).coeffs[2:order + 1] .= zero((tmp1411[i]).coeffs[1])
                (F_J2_ξ[i]).coeffs[1] = constant_term(tmp1411[i]) * constant_term(P_2_sin_ϕ[i])
                (F_J2_ξ[i]).coeffs[2:order + 1] .= zero((F_J2_ξ[i]).coeffs[1])
                (F_J2_ζ[i]).coeffs[1] = constant_term(Λ2j_div_r4[i]) * constant_term(m_c_ϕ_∂P_2[i])
                (F_J2_ζ[i]).coeffs[2:order + 1] .= zero((F_J2_ζ[i]).coeffs[1])
                (tmp1415[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(4)
                (tmp1415[i]).coeffs[2:order + 1] .= zero((tmp1415[i]).coeffs[1])
                (F_J3_ξ[i]).coeffs[1] = constant_term(tmp1415[i]) * constant_term(P_3_sin_ϕ[i])
                (F_J3_ξ[i]).coeffs[2:order + 1] .= zero((F_J3_ξ[i]).coeffs[1])
                (F_J3_ζ[i]).coeffs[1] = constant_term(Λ3j_div_r5[i]) * constant_term(m_c_ϕ_∂P_3[i])
                (F_J3_ζ[i]).coeffs[2:order + 1] .= zero((F_J3_ζ[i]).coeffs[1])
                (F_J_ξ[i]).coeffs[1] = identity(constant_term(F_J2_ξ[i]))
                (F_J_ξ[i]).coeffs[2:order + 1] .= zero((F_J_ξ[i]).coeffs[1])
                (F_J_ζ[i]).coeffs[1] = identity(constant_term(F_J2_ζ[i]))
                (F_J_ζ[i]).coeffs[2:order + 1] .= zero((F_J_ζ[i]).coeffs[1])
                (tmp1418[i]).coeffs[1] = -(constant_term(X[i]))
                (tmp1418[i]).coeffs[2:order + 1] .= zero((tmp1418[i]).coeffs[1])
                (ξx[i]).coeffs[1] = constant_term(tmp1418[i]) / constant_term(r_p1d2[i])
                (ξx[i]).coeffs[2:order + 1] .= zero((ξx[i]).coeffs[1])
                (tmp1420[i]).coeffs[1] = -(constant_term(Y[i]))
                (tmp1420[i]).coeffs[2:order + 1] .= zero((tmp1420[i]).coeffs[1])
                (ξy[i]).coeffs[1] = constant_term(tmp1420[i]) / constant_term(r_p1d2[i])
                (ξy[i]).coeffs[2:order + 1] .= zero((ξy[i]).coeffs[1])
                (tmp1422[i]).coeffs[1] = -(constant_term(Z[i]))
                (tmp1422[i]).coeffs[2:order + 1] .= zero((tmp1422[i]).coeffs[1])
                (ξz[i]).coeffs[1] = constant_term(tmp1422[i]) / constant_term(r_p1d2[i])
                (ξz[i]).coeffs[2:order + 1] .= zero((ξz[i]).coeffs[1])
                (ηx1[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξz[i])
                (ηx1[i]).coeffs[2:order + 1] .= zero((ηx1[i]).coeffs[1])
                (ηy1[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξx[i])
                (ηy1[i]).coeffs[2:order + 1] .= zero((ηy1[i]).coeffs[1])
                (ηz1[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξy[i])
                (ηz1[i]).coeffs[2:order + 1] .= zero((ηz1[i]).coeffs[1])
                (ηx2[i]).coeffs[1] = constant_term(M_[3, 3, i]) * constant_term(ξy[i])
                (ηx2[i]).coeffs[2:order + 1] .= zero((ηx2[i]).coeffs[1])
                (ηy2[i]).coeffs[1] = constant_term(M_[1, 3, i]) * constant_term(ξz[i])
                (ηy2[i]).coeffs[2:order + 1] .= zero((ηy2[i]).coeffs[1])
                (ηz2[i]).coeffs[1] = constant_term(M_[2, 3, i]) * constant_term(ξx[i])
                (ηz2[i]).coeffs[2:order + 1] .= zero((ηz2[i]).coeffs[1])
                (ηx[i]).coeffs[1] = constant_term(ηx1[i]) - constant_term(ηx2[i])
                (ηx[i]).coeffs[2:order + 1] .= zero((ηx[i]).coeffs[1])
                (ηy[i]).coeffs[1] = constant_term(ηy1[i]) - constant_term(ηy2[i])
                (ηy[i]).coeffs[2:order + 1] .= zero((ηy[i]).coeffs[1])
                (ηz[i]).coeffs[1] = constant_term(ηz1[i]) - constant_term(ηz2[i])
                (ηz[i]).coeffs[2:order + 1] .= zero((ηz[i]).coeffs[1])
                (ζx1[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηz[i])
                (ζx1[i]).coeffs[2:order + 1] .= zero((ζx1[i]).coeffs[1])
                (ζy1[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηx[i])
                (ζy1[i]).coeffs[2:order + 1] .= zero((ζy1[i]).coeffs[1])
                (ζz1[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηy[i])
                (ζz1[i]).coeffs[2:order + 1] .= zero((ζz1[i]).coeffs[1])
                (ζx2[i]).coeffs[1] = constant_term(ξz[i]) * constant_term(ηy[i])
                (ζx2[i]).coeffs[2:order + 1] .= zero((ζx2[i]).coeffs[1])
                (ζy2[i]).coeffs[1] = constant_term(ξx[i]) * constant_term(ηz[i])
                (ζy2[i]).coeffs[2:order + 1] .= zero((ζy2[i]).coeffs[1])
                (ζz2[i]).coeffs[1] = constant_term(ξy[i]) * constant_term(ηx[i])
                (ζz2[i]).coeffs[2:order + 1] .= zero((ζz2[i]).coeffs[1])
                (ζx[i]).coeffs[1] = constant_term(ζx1[i]) - constant_term(ζx2[i])
                (ζx[i]).coeffs[2:order + 1] .= zero((ζx[i]).coeffs[1])
                (ζy[i]).coeffs[1] = constant_term(ζy1[i]) - constant_term(ζy2[i])
                (ζy[i]).coeffs[2:order + 1] .= zero((ζy[i]).coeffs[1])
                (ζz[i]).coeffs[1] = constant_term(ζz1[i]) - constant_term(ζz2[i])
                (ζz[i]).coeffs[2:order + 1] .= zero((ζz[i]).coeffs[1])
                (F_J2_x1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξx[i])
                (F_J2_x1[i]).coeffs[2:order + 1] .= zero((F_J2_x1[i]).coeffs[1])
                (F_J2_y1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξy[i])
                (F_J2_y1[i]).coeffs[2:order + 1] .= zero((F_J2_y1[i]).coeffs[1])
                (F_J2_z1[i]).coeffs[1] = constant_term(F_J_ξ[i]) * constant_term(ξz[i])
                (F_J2_z1[i]).coeffs[2:order + 1] .= zero((F_J2_z1[i]).coeffs[1])
                (F_J2_x2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζx[i])
                (F_J2_x2[i]).coeffs[2:order + 1] .= zero((F_J2_x2[i]).coeffs[1])
                (F_J2_y2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζy[i])
                (F_J2_y2[i]).coeffs[2:order + 1] .= zero((F_J2_y2[i]).coeffs[1])
                (F_J2_z2[i]).coeffs[1] = constant_term(F_J_ζ[i]) * constant_term(ζz[i])
                (F_J2_z2[i]).coeffs[2:order + 1] .= zero((F_J2_z2[i]).coeffs[1])
                (F_J2_x[i]).coeffs[1] = constant_term(F_J2_x1[i]) + constant_term(F_J2_x2[i])
                (F_J2_x[i]).coeffs[2:order + 1] .= zero((F_J2_x[i]).coeffs[1])
                (F_J2_y[i]).coeffs[1] = constant_term(F_J2_y1[i]) + constant_term(F_J2_y2[i])
                (F_J2_y[i]).coeffs[2:order + 1] .= zero((F_J2_y[i]).coeffs[1])
                (F_J2_z[i]).coeffs[1] = constant_term(F_J2_z1[i]) + constant_term(F_J2_z2[i])
                (F_J2_z[i]).coeffs[2:order + 1] .= zero((F_J2_z[i]).coeffs[1])
            end
            (tmp1452[i]).coeffs[1] = constant_term(ui[i]) ^ float(constant_term(2))
            (tmp1452[i]).coeffs[2:order + 1] .= zero((tmp1452[i]).coeffs[1])
            (tmp1454[i]).coeffs[1] = constant_term(vi[i]) ^ float(constant_term(2))
            (tmp1454[i]).coeffs[2:order + 1] .= zero((tmp1454[i]).coeffs[1])
            (tmp1455[i]).coeffs[1] = constant_term(tmp1452[i]) + constant_term(tmp1454[i])
            (tmp1455[i]).coeffs[2:order + 1] .= zero((tmp1455[i]).coeffs[1])
            (tmp1457[i]).coeffs[1] = constant_term(wi[i]) ^ float(constant_term(2))
            (tmp1457[i]).coeffs[2:order + 1] .= zero((tmp1457[i]).coeffs[1])
            (v2[i]).coeffs[1] = constant_term(tmp1455[i]) + constant_term(tmp1457[i])
            (v2[i]).coeffs[2:order + 1] .= zero((v2[i]).coeffs[1])
        end
    tmp1460.coeffs[1] = constant_term(q[4]) ^ float(constant_term(2))
    tmp1460.coeffs[2:order + 1] .= zero(tmp1460.coeffs[1])
    tmp1462.coeffs[1] = constant_term(q[5]) ^ float(constant_term(2))
    tmp1462.coeffs[2:order + 1] .= zero(tmp1462.coeffs[1])
    tmp1463.coeffs[1] = constant_term(tmp1460) + constant_term(tmp1462)
    tmp1463.coeffs[2:order + 1] .= zero(tmp1463.coeffs[1])
    tmp1465.coeffs[1] = constant_term(q[6]) ^ float(constant_term(2))
    tmp1465.coeffs[2:order + 1] .= zero(tmp1465.coeffs[1])
    (v2[N]).coeffs[1] = constant_term(tmp1463) + constant_term(tmp1465)
    (v2[N]).coeffs[2:order + 1] .= zero((v2[N]).coeffs[1])
    for i = 1:Nm1
        (temp_004[i]).coeffs[1] = constant_term(newtonian1b_Potential[i]) + constant_term(newtonianNb_Potential[N])
        (temp_004[i]).coeffs[2:order + 1] .= zero((temp_004[i]).coeffs[1])
        (newtonianNb_Potential[N]).coeffs[1] = identity(constant_term(temp_004[i]))
        (newtonianNb_Potential[N]).coeffs[2:order + 1] .= zero((newtonianNb_Potential[N]).coeffs[1])
        if UJ_interaction[i]
            (tmp1468[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_x[i])
            (tmp1468[i]).coeffs[2:order + 1] .= zero((tmp1468[i]).coeffs[1])
            (temp_accX_i[i]).coeffs[1] = constant_term(accX) - constant_term(tmp1468[i])
            (temp_accX_i[i]).coeffs[2:order + 1] .= zero((temp_accX_i[i]).coeffs[1])
            accX.coeffs[1] = identity(constant_term(temp_accX_i[i]))
            accX.coeffs[2:order + 1] .= zero(accX.coeffs[1])
            (tmp1470[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_y[i])
            (tmp1470[i]).coeffs[2:order + 1] .= zero((tmp1470[i]).coeffs[1])
            (temp_accY_i[i]).coeffs[1] = constant_term(accY) - constant_term(tmp1470[i])
            (temp_accY_i[i]).coeffs[2:order + 1] .= zero((temp_accY_i[i]).coeffs[1])
            accY.coeffs[1] = identity(constant_term(temp_accY_i[i]))
            accY.coeffs[2:order + 1] .= zero(accY.coeffs[1])
            (tmp1472[i]).coeffs[1] = constant_term(μ[i]) * constant_term(F_J2_z[i])
            (tmp1472[i]).coeffs[2:order + 1] .= zero((tmp1472[i]).coeffs[1])
            (temp_accZ_i[i]).coeffs[1] = constant_term(accZ) - constant_term(tmp1472[i])
            (temp_accZ_i[i]).coeffs[2:order + 1] .= zero((temp_accZ_i[i]).coeffs[1])
            accZ.coeffs[1] = identity(constant_term(temp_accZ_i[i]))
            accZ.coeffs[2:order + 1] .= zero(accZ.coeffs[1])
        end
    end
    (_4ϕj[N]).coeffs[1] = constant_term(4) * constant_term(newtonianNb_Potential[N])
    (_4ϕj[N]).coeffs[2:order + 1] .= zero((_4ϕj[N]).coeffs[1])
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:447 =# Threads.@threads for i = 1:10
            (ϕi_plus_4ϕj[i]).coeffs[1] = constant_term(newtonianNb_Potential_t[i]) + constant_term(_4ϕj[N])
            (ϕi_plus_4ϕj[i]).coeffs[2:order + 1] .= zero((ϕi_plus_4ϕj[i]).coeffs[1])
            (tmp1478[i]).coeffs[1] = constant_term(2) * constant_term(v2[i])
            (tmp1478[i]).coeffs[2:order + 1] .= zero((tmp1478[i]).coeffs[1])
            (tmp1480[i]).coeffs[1] = constant_term(4) * constant_term(vi_dot_vj[i])
            (tmp1480[i]).coeffs[2:order + 1] .= zero((tmp1480[i]).coeffs[1])
            (tmp1481[i]).coeffs[1] = constant_term(tmp1478[i]) - constant_term(tmp1480[i])
            (tmp1481[i]).coeffs[2:order + 1] .= zero((tmp1481[i]).coeffs[1])
            (sj2_plus_2si2_minus_4vivj[i]).coeffs[1] = constant_term(tmp1481[i]) + constant_term(v2[N])
            (sj2_plus_2si2_minus_4vivj[i]).coeffs[2:order + 1] .= zero((sj2_plus_2si2_minus_4vivj[i]).coeffs[1])
            (ϕs_and_vs[i]).coeffs[1] = constant_term(sj2_plus_2si2_minus_4vivj[i]) - constant_term(ϕi_plus_4ϕj[i])
            (ϕs_and_vs[i]).coeffs[2:order + 1] .= zero((ϕs_and_vs[i]).coeffs[1])
            (Xij_t_Ui[i]).coeffs[1] = constant_term(X[i]) * constant_term(ui[i])
            (Xij_t_Ui[i]).coeffs[2:order + 1] .= zero((Xij_t_Ui[i]).coeffs[1])
            (Yij_t_Vi[i]).coeffs[1] = constant_term(Y[i]) * constant_term(vi[i])
            (Yij_t_Vi[i]).coeffs[2:order + 1] .= zero((Yij_t_Vi[i]).coeffs[1])
            (Zij_t_Wi[i]).coeffs[1] = constant_term(Z[i]) * constant_term(wi[i])
            (Zij_t_Wi[i]).coeffs[2:order + 1] .= zero((Zij_t_Wi[i]).coeffs[1])
            (tmp1487[i]).coeffs[1] = constant_term(Xij_t_Ui[i]) + constant_term(Yij_t_Vi[i])
            (tmp1487[i]).coeffs[2:order + 1] .= zero((tmp1487[i]).coeffs[1])
            (Rij_dot_Vi[i]).coeffs[1] = constant_term(tmp1487[i]) + constant_term(Zij_t_Wi[i])
            (Rij_dot_Vi[i]).coeffs[2:order + 1] .= zero((Rij_dot_Vi[i]).coeffs[1])
            (tmp1490[i]).coeffs[1] = constant_term(Rij_dot_Vi[i]) ^ float(constant_term(2))
            (tmp1490[i]).coeffs[2:order + 1] .= zero((tmp1490[i]).coeffs[1])
            (pn1t7[i]).coeffs[1] = constant_term(tmp1490[i]) / constant_term(r_p2[i])
            (pn1t7[i]).coeffs[2:order + 1] .= zero((pn1t7[i]).coeffs[1])
            (tmp1493[i]).coeffs[1] = constant_term(1.5) * constant_term(pn1t7[i])
            (tmp1493[i]).coeffs[2:order + 1] .= zero((tmp1493[i]).coeffs[1])
            (pn1t2_7[i]).coeffs[1] = constant_term(ϕs_and_vs[i]) - constant_term(tmp1493[i])
            (pn1t2_7[i]).coeffs[2:order + 1] .= zero((pn1t2_7[i]).coeffs[1])
            (pn1t1_7[i]).coeffs[1] = constant_term(c_p2) + constant_term(pn1t2_7[i])
            (pn1t1_7[i]).coeffs[2:order + 1] .= zero((pn1t1_7[i]).coeffs[1])
            (pNX_t_X[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(X[i])
            (pNX_t_X[i]).coeffs[2:order + 1] .= zero((pNX_t_X[i]).coeffs[1])
            (pNY_t_Y[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(Y[i])
            (pNY_t_Y[i]).coeffs[2:order + 1] .= zero((pNY_t_Y[i]).coeffs[1])
            (pNZ_t_Z[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(Z[i])
            (pNZ_t_Z[i]).coeffs[2:order + 1] .= zero((pNZ_t_Z[i]).coeffs[1])
            (tmp1500[i]).coeffs[1] = constant_term(pNX_t_X[i]) + constant_term(pNY_t_Y[i])
            (tmp1500[i]).coeffs[2:order + 1] .= zero((tmp1500[i]).coeffs[1])
            (tmp1501[i]).coeffs[1] = constant_term(tmp1500[i]) + constant_term(pNZ_t_Z[i])
            (tmp1501[i]).coeffs[2:order + 1] .= zero((tmp1501[i]).coeffs[1])
            (tmp1502[i]).coeffs[1] = constant_term(0.5) * constant_term(tmp1501[i])
            (tmp1502[i]).coeffs[2:order + 1] .= zero((tmp1502[i]).coeffs[1])
            (pn1[i]).coeffs[1] = constant_term(pn1t1_7[i]) + constant_term(tmp1502[i])
            (pn1[i]).coeffs[2:order + 1] .= zero((pn1[i]).coeffs[1])
            (X_t_pn1[i]).coeffs[1] = constant_term(newton_acc_X[i]) * constant_term(pn1[i])
            (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
            (Y_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Y[i]) * constant_term(pn1[i])
            (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
            (Z_t_pn1[i]).coeffs[1] = constant_term(newton_acc_Z[i]) * constant_term(pn1[i])
            (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
            (pNX_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 2]) * constant_term(pn3[i])
            (pNX_t_pn3[i]).coeffs[2:order + 1] .= zero((pNX_t_pn3[i]).coeffs[1])
            (pNY_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i - 1]) * constant_term(pn3[i])
            (pNY_t_pn3[i]).coeffs[2:order + 1] .= zero((pNY_t_pn3[i]).coeffs[1])
            (pNZ_t_pn3[i]).coeffs[1] = constant_term(acceph_t[3i]) * constant_term(pn3[i])
            (pNZ_t_pn3[i]).coeffs[2:order + 1] .= zero((pNZ_t_pn3[i]).coeffs[1])
        end
    for i = 1:10
        (tmp1510[i]).coeffs[1] = constant_term(U_t_pn2[i]) + constant_term(pNX_t_pn3[i])
        (tmp1510[i]).coeffs[2:order + 1] .= zero((tmp1510[i]).coeffs[1])
        (termpnx[i]).coeffs[1] = constant_term(X_t_pn1[i]) + constant_term(tmp1510[i])
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (tmp1513[i]).coeffs[1] = constant_term(V_t_pn2[i]) + constant_term(pNY_t_pn3[i])
        (tmp1513[i]).coeffs[2:order + 1] .= zero((tmp1513[i]).coeffs[1])
        (termpny[i]).coeffs[1] = constant_term(Y_t_pn1[i]) + constant_term(tmp1513[i])
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (tmp1516[i]).coeffs[1] = constant_term(W_t_pn2[i]) + constant_term(pNZ_t_pn3[i])
        (tmp1516[i]).coeffs[2:order + 1] .= zero((tmp1516[i]).coeffs[1])
        (termpnz[i]).coeffs[1] = constant_term(Z_t_pn1[i]) + constant_term(tmp1516[i])
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:500 =# Threads.@threads for i = 11:Nm1
            (X_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_X[i])
            (X_t_pn1[i]).coeffs[2:order + 1] .= zero((X_t_pn1[i]).coeffs[1])
            (Y_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Y[i])
            (Y_t_pn1[i]).coeffs[2:order + 1] .= zero((Y_t_pn1[i]).coeffs[1])
            (Z_t_pn1[i]).coeffs[1] = constant_term(c_p2) * constant_term(newton_acc_Z[i])
            (Z_t_pn1[i]).coeffs[2:order + 1] .= zero((Z_t_pn1[i]).coeffs[1])
        end
    for i = 11:Nm1
        (termpnx[i]).coeffs[1] = identity(constant_term(X_t_pn1[i]))
        (termpnx[i]).coeffs[2:order + 1] .= zero((termpnx[i]).coeffs[1])
        (sumpnx[i]).coeffs[1] = constant_term(pntempX) + constant_term(termpnx[i])
        (sumpnx[i]).coeffs[2:order + 1] .= zero((sumpnx[i]).coeffs[1])
        pntempX.coeffs[1] = identity(constant_term(sumpnx[i]))
        pntempX.coeffs[2:order + 1] .= zero(pntempX.coeffs[1])
        (termpny[i]).coeffs[1] = identity(constant_term(Y_t_pn1[i]))
        (termpny[i]).coeffs[2:order + 1] .= zero((termpny[i]).coeffs[1])
        (sumpny[i]).coeffs[1] = constant_term(pntempY) + constant_term(termpny[i])
        (sumpny[i]).coeffs[2:order + 1] .= zero((sumpny[i]).coeffs[1])
        pntempY.coeffs[1] = identity(constant_term(sumpny[i]))
        pntempY.coeffs[2:order + 1] .= zero(pntempY.coeffs[1])
        (termpnz[i]).coeffs[1] = identity(constant_term(Z_t_pn1[i]))
        (termpnz[i]).coeffs[2:order + 1] .= zero((termpnz[i]).coeffs[1])
        (sumpnz[i]).coeffs[1] = constant_term(pntempZ) + constant_term(termpnz[i])
        (sumpnz[i]).coeffs[2:order + 1] .= zero((sumpnz[i]).coeffs[1])
        pntempZ.coeffs[1] = identity(constant_term(sumpnz[i]))
        pntempZ.coeffs[2:order + 1] .= zero(pntempZ.coeffs[1])
    end
    postNewtonX.coeffs[1] = constant_term(pntempX) * constant_term(c_m2)
    postNewtonX.coeffs[2:order + 1] .= zero(postNewtonX.coeffs[1])
    postNewtonY.coeffs[1] = constant_term(pntempY) * constant_term(c_m2)
    postNewtonY.coeffs[2:order + 1] .= zero(postNewtonY.coeffs[1])
    postNewtonZ.coeffs[1] = constant_term(pntempZ) * constant_term(c_m2)
    postNewtonZ.coeffs[2:order + 1] .= zero(postNewtonZ.coeffs[1])
    tmp1528.coeffs[1] = constant_term(Y[1]) * constant_term(W[1])
    tmp1528.coeffs[2:order + 1] .= zero(tmp1528.coeffs[1])
    tmp1529.coeffs[1] = constant_term(Z[1]) * constant_term(V[1])
    tmp1529.coeffs[2:order + 1] .= zero(tmp1529.coeffs[1])
    hx.coeffs[1] = constant_term(tmp1528) - constant_term(tmp1529)
    hx.coeffs[2:order + 1] .= zero(hx.coeffs[1])
    tmp1531.coeffs[1] = constant_term(Z[1]) * constant_term(U[1])
    tmp1531.coeffs[2:order + 1] .= zero(tmp1531.coeffs[1])
    tmp1532.coeffs[1] = constant_term(X[1]) * constant_term(W[1])
    tmp1532.coeffs[2:order + 1] .= zero(tmp1532.coeffs[1])
    hy.coeffs[1] = constant_term(tmp1531) - constant_term(tmp1532)
    hy.coeffs[2:order + 1] .= zero(hy.coeffs[1])
    tmp1534.coeffs[1] = constant_term(X[1]) * constant_term(V[1])
    tmp1534.coeffs[2:order + 1] .= zero(tmp1534.coeffs[1])
    tmp1535.coeffs[1] = constant_term(Y[1]) * constant_term(U[1])
    tmp1535.coeffs[2:order + 1] .= zero(tmp1535.coeffs[1])
    hz.coeffs[1] = constant_term(tmp1534) - constant_term(tmp1535)
    hz.coeffs[2:order + 1] .= zero(hz.coeffs[1])
    tmp1537.coeffs[1] = constant_term(hz) * constant_term(Y[1])
    tmp1537.coeffs[2:order + 1] .= zero(tmp1537.coeffs[1])
    tmp1538.coeffs[1] = constant_term(hy) * constant_term(Z[1])
    tmp1538.coeffs[2:order + 1] .= zero(tmp1538.coeffs[1])
    t_x.coeffs[1] = constant_term(tmp1537) - constant_term(tmp1538)
    t_x.coeffs[2:order + 1] .= zero(t_x.coeffs[1])
    tmp1540.coeffs[1] = constant_term(hx) * constant_term(Z[1])
    tmp1540.coeffs[2:order + 1] .= zero(tmp1540.coeffs[1])
    tmp1541.coeffs[1] = constant_term(hz) * constant_term(X[1])
    tmp1541.coeffs[2:order + 1] .= zero(tmp1541.coeffs[1])
    t_y.coeffs[1] = constant_term(tmp1540) - constant_term(tmp1541)
    t_y.coeffs[2:order + 1] .= zero(t_y.coeffs[1])
    tmp1543.coeffs[1] = constant_term(hy) * constant_term(X[1])
    tmp1543.coeffs[2:order + 1] .= zero(tmp1543.coeffs[1])
    tmp1544.coeffs[1] = constant_term(hx) * constant_term(Y[1])
    tmp1544.coeffs[2:order + 1] .= zero(tmp1544.coeffs[1])
    t_z.coeffs[1] = constant_term(tmp1543) - constant_term(tmp1544)
    t_z.coeffs[2:order + 1] .= zero(t_z.coeffs[1])
    tmp1547.coeffs[1] = constant_term(t_x) ^ float(constant_term(2))
    tmp1547.coeffs[2:order + 1] .= zero(tmp1547.coeffs[1])
    tmp1549.coeffs[1] = constant_term(t_y) ^ float(constant_term(2))
    tmp1549.coeffs[2:order + 1] .= zero(tmp1549.coeffs[1])
    tmp1550.coeffs[1] = constant_term(tmp1547) + constant_term(tmp1549)
    tmp1550.coeffs[2:order + 1] .= zero(tmp1550.coeffs[1])
    tmp1552.coeffs[1] = constant_term(t_z) ^ float(constant_term(2))
    tmp1552.coeffs[2:order + 1] .= zero(tmp1552.coeffs[1])
    tmp1553.coeffs[1] = constant_term(tmp1550) + constant_term(tmp1552)
    tmp1553.coeffs[2:order + 1] .= zero(tmp1553.coeffs[1])
    t_norm.coeffs[1] = sqrt(constant_term(tmp1553))
    t_norm.coeffs[2:order + 1] .= zero(t_norm.coeffs[1])
    t_x_unit.coeffs[1] = constant_term(t_x) / constant_term(t_norm)
    t_x_unit.coeffs[2:order + 1] .= zero(t_x_unit.coeffs[1])
    t_y_unit.coeffs[1] = constant_term(t_y) / constant_term(t_norm)
    t_y_unit.coeffs[2:order + 1] .= zero(t_y_unit.coeffs[1])
    t_z_unit.coeffs[1] = constant_term(t_z) / constant_term(t_norm)
    t_z_unit.coeffs[2:order + 1] .= zero(t_z_unit.coeffs[1])
    tmp1558.coeffs[1] = constant_term(X[1]) / constant_term(r_p1d2[1])
    tmp1558.coeffs[2:order + 1] .= zero(tmp1558.coeffs[1])
    r_x_unit.coeffs[1] = -(constant_term(tmp1558))
    r_x_unit.coeffs[2:order + 1] .= zero(r_x_unit.coeffs[1])
    tmp1560.coeffs[1] = constant_term(Y[1]) / constant_term(r_p1d2[1])
    tmp1560.coeffs[2:order + 1] .= zero(tmp1560.coeffs[1])
    r_y_unit.coeffs[1] = -(constant_term(tmp1560))
    r_y_unit.coeffs[2:order + 1] .= zero(r_y_unit.coeffs[1])
    tmp1562.coeffs[1] = constant_term(Z[1]) / constant_term(r_p1d2[1])
    tmp1562.coeffs[2:order + 1] .= zero(tmp1562.coeffs[1])
    r_z_unit.coeffs[1] = -(constant_term(tmp1562))
    r_z_unit.coeffs[2:order + 1] .= zero(r_z_unit.coeffs[1])
    g_r.coeffs[1] = identity(constant_term(r_p2[1]))
    g_r.coeffs[2:order + 1] .= zero(g_r.coeffs[1])
    A2_t_g_r.coeffs[1] = constant_term(q[7]) / constant_term(g_r)
    A2_t_g_r.coeffs[2:order + 1] .= zero(A2_t_g_r.coeffs[1])
    A1_t_g_r.coeffs[1] = constant_term(q[8]) / constant_term(g_r)
    A1_t_g_r.coeffs[2:order + 1] .= zero(A1_t_g_r.coeffs[1])
    tmp1566.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_x_unit)
    tmp1566.coeffs[2:order + 1] .= zero(tmp1566.coeffs[1])
    tmp1567.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_x_unit)
    tmp1567.coeffs[2:order + 1] .= zero(tmp1567.coeffs[1])
    NGAx.coeffs[1] = constant_term(tmp1566) + constant_term(tmp1567)
    NGAx.coeffs[2:order + 1] .= zero(NGAx.coeffs[1])
    tmp1569.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_y_unit)
    tmp1569.coeffs[2:order + 1] .= zero(tmp1569.coeffs[1])
    tmp1570.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_y_unit)
    tmp1570.coeffs[2:order + 1] .= zero(tmp1570.coeffs[1])
    NGAy.coeffs[1] = constant_term(tmp1569) + constant_term(tmp1570)
    NGAy.coeffs[2:order + 1] .= zero(NGAy.coeffs[1])
    tmp1572.coeffs[1] = constant_term(A2_t_g_r) * constant_term(t_z_unit)
    tmp1572.coeffs[2:order + 1] .= zero(tmp1572.coeffs[1])
    tmp1573.coeffs[1] = constant_term(A1_t_g_r) * constant_term(r_z_unit)
    tmp1573.coeffs[2:order + 1] .= zero(tmp1573.coeffs[1])
    NGAz.coeffs[1] = constant_term(tmp1572) + constant_term(tmp1573)
    NGAz.coeffs[2:order + 1] .= zero(NGAz.coeffs[1])
    tmp1575.coeffs[1] = constant_term(postNewtonX) + constant_term(accX)
    tmp1575.coeffs[2:order + 1] .= zero(tmp1575.coeffs[1])
    (dq[4]).coeffs[1] = constant_term(tmp1575) + constant_term(NGAx)
    (dq[4]).coeffs[2:order + 1] .= zero((dq[4]).coeffs[1])
    tmp1577.coeffs[1] = constant_term(postNewtonY) + constant_term(accY)
    tmp1577.coeffs[2:order + 1] .= zero(tmp1577.coeffs[1])
    (dq[5]).coeffs[1] = constant_term(tmp1577) + constant_term(NGAy)
    (dq[5]).coeffs[2:order + 1] .= zero((dq[5]).coeffs[1])
    tmp1579.coeffs[1] = constant_term(postNewtonZ) + constant_term(accZ)
    tmp1579.coeffs[2:order + 1] .= zero(tmp1579.coeffs[1])
    (dq[6]).coeffs[1] = constant_term(tmp1579) + constant_term(NGAz)
    (dq[6]).coeffs[2:order + 1] .= zero((dq[6]).coeffs[1])
    (dq[7]).coeffs[1] = identity(constant_term(zero_q_1))
    (dq[7]).coeffs[2:order + 1] .= zero((dq[7]).coeffs[1])
    for __idx = eachindex(q)
        (q[__idx]).coeffs[2] = (dq[__idx]).coeffs[1]
    end
    for ord = 1:order - 1
        ordnext = ord + 1
        TaylorSeries.identity!(pntempX, zero_q_1, ord)
        TaylorSeries.identity!(pntempY, zero_q_1, ord)
        TaylorSeries.identity!(pntempZ, zero_q_1, ord)
        TaylorSeries.identity!(accX, zero_q_1, ord)
        TaylorSeries.identity!(accY, zero_q_1, ord)
        TaylorSeries.identity!(accZ, zero_q_1, ord)
        TaylorSeries.identity!(dq[1], q[4], ord)
        TaylorSeries.identity!(dq[2], q[5], ord)
        TaylorSeries.identity!(dq[3], q[6], ord)
        TaylorSeries.identity!(newtonianNb_Potential[N], zero_q_1, ord)
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:245 =# Threads.@threads for i = 1:Nm1
                TaylorSeries.identity!(ui[i], ss16asteph_t[3 * ((N - 1) + i) - 2], ord)
                TaylorSeries.identity!(vi[i], ss16asteph_t[3 * ((N - 1) + i) - 1], ord)
                TaylorSeries.identity!(wi[i], ss16asteph_t[3 * ((N - 1) + i)], ord)
                TaylorSeries.subst!(X[i], ss16asteph_t[3i - 2], q[1], ord)
                TaylorSeries.subst!(Y[i], ss16asteph_t[3i - 1], q[2], ord)
                TaylorSeries.subst!(Z[i], ss16asteph_t[3i], q[3], ord)
                TaylorSeries.subst!(U[i], ui[i], dq[1], ord)
                TaylorSeries.subst!(V[i], vi[i], dq[2], ord)
                TaylorSeries.subst!(W[i], wi[i], dq[3], ord)
                TaylorSeries.mul!(tmp1320[1], 4, dq[1], ord)
                TaylorSeries.mul!(tmp1322[i], 3, ui[i], ord)
                TaylorSeries.subst!(_4U_m_3X[i], tmp1320[1], tmp1322[i], ord)
                TaylorSeries.mul!(tmp1325[2], 4, dq[2], ord)
                TaylorSeries.mul!(tmp1327[i], 3, vi[i], ord)
                TaylorSeries.subst!(_4V_m_3Y[i], tmp1325[2], tmp1327[i], ord)
                TaylorSeries.mul!(tmp1330[3], 4, dq[3], ord)
                TaylorSeries.mul!(tmp1332[i], 3, wi[i], ord)
                TaylorSeries.subst!(_4W_m_3Z[i], tmp1330[3], tmp1332[i], ord)
                TaylorSeries.mul!(pn2x[i], X[i], _4U_m_3X[i], ord)
                TaylorSeries.mul!(pn2y[i], Y[i], _4V_m_3Y[i], ord)
                TaylorSeries.mul!(pn2z[i], Z[i], _4W_m_3Z[i], ord)
                TaylorSeries.mul!(UU[i], ui[i], dq[1], ord)
                TaylorSeries.mul!(VV[i], vi[i], dq[2], ord)
                TaylorSeries.mul!(WW[i], wi[i], dq[3], ord)
                TaylorSeries.add!(tmp1340[i], UU[i], VV[i], ord)
                TaylorSeries.add!(vi_dot_vj[i], tmp1340[i], WW[i], ord)
                TaylorSeries.pow!(tmp1343[i], X[i], 2, ord)
                TaylorSeries.pow!(tmp1345[i], Y[i], 2, ord)
                TaylorSeries.add!(tmp1346[i], tmp1343[i], tmp1345[i], ord)
                TaylorSeries.pow!(tmp1348[i], Z[i], 2, ord)
                TaylorSeries.add!(r_p2[i], tmp1346[i], tmp1348[i], ord)
                TaylorSeries.sqrt!(r_p1d2[i], r_p2[i], ord)
                TaylorSeries.pow!(r_p3d2[i], r_p2[i], 1.5, ord)
                TaylorSeries.pow!(r_p7d2[i], r_p2[i], 3.5, ord)
                TaylorSeries.div!(newtonianCoeff[i], μ[i], r_p3d2[i], ord)
                TaylorSeries.add!(tmp1356[i], pn2x[i], pn2y[i], ord)
                TaylorSeries.add!(tmp1357[i], tmp1356[i], pn2z[i], ord)
                TaylorSeries.mul!(pn2[i], newtonianCoeff[i], tmp1357[i], ord)
                TaylorSeries.mul!(newton_acc_X[i], X[i], newtonianCoeff[i], ord)
                TaylorSeries.mul!(newton_acc_Y[i], Y[i], newtonianCoeff[i], ord)
                TaylorSeries.mul!(newton_acc_Z[i], Z[i], newtonianCoeff[i], ord)
                TaylorSeries.div!(newtonian1b_Potential[i], μ[i], r_p1d2[i], ord)
                TaylorSeries.mul!(pn3[i], 3.5, newtonian1b_Potential[i], ord)
                TaylorSeries.mul!(U_t_pn2[i], pn2[i], U[i], ord)
                TaylorSeries.mul!(V_t_pn2[i], pn2[i], V[i], ord)
                TaylorSeries.mul!(W_t_pn2[i], pn2[i], W[i], ord)
                if UJ_interaction[i]
                    TaylorSeries.subst!(tmp1368[i], X[i], ord)
                    TaylorSeries.mul!(t31[i], tmp1368[i], M_[1, 3, i], ord)
                    TaylorSeries.subst!(tmp1370[i], Y[i], ord)
                    TaylorSeries.mul!(t32[i], tmp1370[i], M_[2, 3, i], ord)
                    TaylorSeries.subst!(tmp1372[i], Z[i], ord)
                    TaylorSeries.mul!(t33[i], tmp1372[i], M_[3, 3, i], ord)
                    TaylorSeries.add!(tmp1374[i], t31[i], t32[i], ord)
                    TaylorSeries.add!(r_sin_ϕ[i], tmp1374[i], t33[i], ord)
                    TaylorSeries.div!(sin_ϕ[i], r_sin_ϕ[i], r_p1d2[i], ord)
                    TaylorSeries.asin!(ϕ[i], sin_ϕ[i], tmp1581[i], ord)
                    TaylorSeries.sincos!(tmp1582[i], cos_ϕ[i], ϕ[i], ord)
                    TaylorSeries.pow!(sin2_ϕ[i], sin_ϕ[i], 2, ord)
                    TaylorSeries.pow!(sin3_ϕ[i], sin_ϕ[i], 3, ord)
                    TaylorSeries.mul!(tmp1384[i], 1.5, sin2_ϕ[i], ord)
                    TaylorSeries.subst!(P_2_sin_ϕ[i], tmp1384[i], 0.5, ord)
                    TaylorSeries.mul!(∂P_2_sin_ϕ[i], 3, sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp1390[i], -1.5, sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp1392[i], 2.5, sin3_ϕ[i], ord)
                    TaylorSeries.add!(P_3_sin_ϕ[i], tmp1390[i], tmp1392[i], ord)
                    TaylorSeries.mul!(tmp1396[i], 7.5, sin2_ϕ[i], ord)
                    TaylorSeries.add!(∂P_3_sin_ϕ[i], -1.5, tmp1396[i], ord)
                    TaylorSeries.pow!(tmp1399[i], r_p2[i], 2, ord)
                    TaylorSeries.div!(tmp1400[i], Λ2[i], tmp1399[i], ord)
                    TaylorSeries.subst!(Λ2j_div_r4[i], tmp1400[i], ord)
                    TaylorSeries.pow!(tmp1403[i], r_p1d2[i], 5, ord)
                    TaylorSeries.div!(tmp1404[i], Λ3[i], tmp1403[i], ord)
                    TaylorSeries.subst!(Λ3j_div_r5[i], tmp1404[i], ord)
                    TaylorSeries.subst!(tmp1406[i], cos_ϕ[i], ord)
                    TaylorSeries.mul!(m_c_ϕ_∂P_2[i], tmp1406[i], ∂P_2_sin_ϕ[i], ord)
                    TaylorSeries.subst!(tmp1408[i], cos_ϕ[i], ord)
                    TaylorSeries.mul!(m_c_ϕ_∂P_3[i], tmp1408[i], ∂P_3_sin_ϕ[i], ord)
                    TaylorSeries.mul!(tmp1411[i], Λ2j_div_r4[i], 3, ord)
                    TaylorSeries.mul!(F_J2_ξ[i], tmp1411[i], P_2_sin_ϕ[i], ord)
                    TaylorSeries.mul!(F_J2_ζ[i], Λ2j_div_r4[i], m_c_ϕ_∂P_2[i], ord)
                    TaylorSeries.mul!(tmp1415[i], Λ3j_div_r5[i], 4, ord)
                    TaylorSeries.mul!(F_J3_ξ[i], tmp1415[i], P_3_sin_ϕ[i], ord)
                    TaylorSeries.mul!(F_J3_ζ[i], Λ3j_div_r5[i], m_c_ϕ_∂P_3[i], ord)
                    TaylorSeries.identity!(F_J_ξ[i], F_J2_ξ[i], ord)
                    TaylorSeries.identity!(F_J_ζ[i], F_J2_ζ[i], ord)
                    TaylorSeries.subst!(tmp1418[i], X[i], ord)
                    TaylorSeries.div!(ξx[i], tmp1418[i], r_p1d2[i], ord)
                    TaylorSeries.subst!(tmp1420[i], Y[i], ord)
                    TaylorSeries.div!(ξy[i], tmp1420[i], r_p1d2[i], ord)
                    TaylorSeries.subst!(tmp1422[i], Z[i], ord)
                    TaylorSeries.div!(ξz[i], tmp1422[i], r_p1d2[i], ord)
                    TaylorSeries.mul!(ηx1[i], M_[2, 3, i], ξz[i], ord)
                    TaylorSeries.mul!(ηy1[i], M_[3, 3, i], ξx[i], ord)
                    TaylorSeries.mul!(ηz1[i], M_[1, 3, i], ξy[i], ord)
                    TaylorSeries.mul!(ηx2[i], M_[3, 3, i], ξy[i], ord)
                    TaylorSeries.mul!(ηy2[i], M_[1, 3, i], ξz[i], ord)
                    TaylorSeries.mul!(ηz2[i], M_[2, 3, i], ξx[i], ord)
                    TaylorSeries.subst!(ηx[i], ηx1[i], ηx2[i], ord)
                    TaylorSeries.subst!(ηy[i], ηy1[i], ηy2[i], ord)
                    TaylorSeries.subst!(ηz[i], ηz1[i], ηz2[i], ord)
                    TaylorSeries.mul!(ζx1[i], ξy[i], ηz[i], ord)
                    TaylorSeries.mul!(ζy1[i], ξz[i], ηx[i], ord)
                    TaylorSeries.mul!(ζz1[i], ξx[i], ηy[i], ord)
                    TaylorSeries.mul!(ζx2[i], ξz[i], ηy[i], ord)
                    TaylorSeries.mul!(ζy2[i], ξx[i], ηz[i], ord)
                    TaylorSeries.mul!(ζz2[i], ξy[i], ηx[i], ord)
                    TaylorSeries.subst!(ζx[i], ζx1[i], ζx2[i], ord)
                    TaylorSeries.subst!(ζy[i], ζy1[i], ζy2[i], ord)
                    TaylorSeries.subst!(ζz[i], ζz1[i], ζz2[i], ord)
                    TaylorSeries.mul!(F_J2_x1[i], F_J_ξ[i], ξx[i], ord)
                    TaylorSeries.mul!(F_J2_y1[i], F_J_ξ[i], ξy[i], ord)
                    TaylorSeries.mul!(F_J2_z1[i], F_J_ξ[i], ξz[i], ord)
                    TaylorSeries.mul!(F_J2_x2[i], F_J_ζ[i], ζx[i], ord)
                    TaylorSeries.mul!(F_J2_y2[i], F_J_ζ[i], ζy[i], ord)
                    TaylorSeries.mul!(F_J2_z2[i], F_J_ζ[i], ζz[i], ord)
                    TaylorSeries.add!(F_J2_x[i], F_J2_x1[i], F_J2_x2[i], ord)
                    TaylorSeries.add!(F_J2_y[i], F_J2_y1[i], F_J2_y2[i], ord)
                    TaylorSeries.add!(F_J2_z[i], F_J2_z1[i], F_J2_z2[i], ord)
                end
                TaylorSeries.pow!(tmp1452[i], ui[i], 2, ord)
                TaylorSeries.pow!(tmp1454[i], vi[i], 2, ord)
                TaylorSeries.add!(tmp1455[i], tmp1452[i], tmp1454[i], ord)
                TaylorSeries.pow!(tmp1457[i], wi[i], 2, ord)
                TaylorSeries.add!(v2[i], tmp1455[i], tmp1457[i], ord)
            end
        TaylorSeries.pow!(tmp1460, q[4], 2, ord)
        TaylorSeries.pow!(tmp1462, q[5], 2, ord)
        TaylorSeries.add!(tmp1463, tmp1460, tmp1462, ord)
        TaylorSeries.pow!(tmp1465, q[6], 2, ord)
        TaylorSeries.add!(v2[N], tmp1463, tmp1465, ord)
        for i = 1:Nm1
            TaylorSeries.add!(temp_004[i], newtonian1b_Potential[i], newtonianNb_Potential[N], ord)
            TaylorSeries.identity!(newtonianNb_Potential[N], temp_004[i], ord)
            if UJ_interaction[i]
                TaylorSeries.mul!(tmp1468[i], μ[i], F_J2_x[i], ord)
                TaylorSeries.subst!(temp_accX_i[i], accX, tmp1468[i], ord)
                TaylorSeries.identity!(accX, temp_accX_i[i], ord)
                TaylorSeries.mul!(tmp1470[i], μ[i], F_J2_y[i], ord)
                TaylorSeries.subst!(temp_accY_i[i], accY, tmp1470[i], ord)
                TaylorSeries.identity!(accY, temp_accY_i[i], ord)
                TaylorSeries.mul!(tmp1472[i], μ[i], F_J2_z[i], ord)
                TaylorSeries.subst!(temp_accZ_i[i], accZ, tmp1472[i], ord)
                TaylorSeries.identity!(accZ, temp_accZ_i[i], ord)
            end
        end
        TaylorSeries.mul!(_4ϕj[N], 4, newtonianNb_Potential[N], ord)
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:447 =# Threads.@threads for i = 1:10
                TaylorSeries.add!(ϕi_plus_4ϕj[i], newtonianNb_Potential_t[i], _4ϕj[N], ord)
                TaylorSeries.mul!(tmp1478[i], 2, v2[i], ord)
                TaylorSeries.mul!(tmp1480[i], 4, vi_dot_vj[i], ord)
                TaylorSeries.subst!(tmp1481[i], tmp1478[i], tmp1480[i], ord)
                TaylorSeries.add!(sj2_plus_2si2_minus_4vivj[i], tmp1481[i], v2[N], ord)
                TaylorSeries.subst!(ϕs_and_vs[i], sj2_plus_2si2_minus_4vivj[i], ϕi_plus_4ϕj[i], ord)
                TaylorSeries.mul!(Xij_t_Ui[i], X[i], ui[i], ord)
                TaylorSeries.mul!(Yij_t_Vi[i], Y[i], vi[i], ord)
                TaylorSeries.mul!(Zij_t_Wi[i], Z[i], wi[i], ord)
                TaylorSeries.add!(tmp1487[i], Xij_t_Ui[i], Yij_t_Vi[i], ord)
                TaylorSeries.add!(Rij_dot_Vi[i], tmp1487[i], Zij_t_Wi[i], ord)
                TaylorSeries.pow!(tmp1490[i], Rij_dot_Vi[i], 2, ord)
                TaylorSeries.div!(pn1t7[i], tmp1490[i], r_p2[i], ord)
                TaylorSeries.mul!(tmp1493[i], 1.5, pn1t7[i], ord)
                TaylorSeries.subst!(pn1t2_7[i], ϕs_and_vs[i], tmp1493[i], ord)
                TaylorSeries.add!(pn1t1_7[i], c_p2, pn1t2_7[i], ord)
                TaylorSeries.mul!(pNX_t_X[i], acceph_t[3i - 2], X[i], ord)
                TaylorSeries.mul!(pNY_t_Y[i], acceph_t[3i - 1], Y[i], ord)
                TaylorSeries.mul!(pNZ_t_Z[i], acceph_t[3i], Z[i], ord)
                TaylorSeries.add!(tmp1500[i], pNX_t_X[i], pNY_t_Y[i], ord)
                TaylorSeries.add!(tmp1501[i], tmp1500[i], pNZ_t_Z[i], ord)
                TaylorSeries.mul!(tmp1502[i], 0.5, tmp1501[i], ord)
                TaylorSeries.add!(pn1[i], pn1t1_7[i], tmp1502[i], ord)
                TaylorSeries.mul!(X_t_pn1[i], newton_acc_X[i], pn1[i], ord)
                TaylorSeries.mul!(Y_t_pn1[i], newton_acc_Y[i], pn1[i], ord)
                TaylorSeries.mul!(Z_t_pn1[i], newton_acc_Z[i], pn1[i], ord)
                TaylorSeries.mul!(pNX_t_pn3[i], acceph_t[3i - 2], pn3[i], ord)
                TaylorSeries.mul!(pNY_t_pn3[i], acceph_t[3i - 1], pn3[i], ord)
                TaylorSeries.mul!(pNZ_t_pn3[i], acceph_t[3i], pn3[i], ord)
            end
        for i = 1:10
            TaylorSeries.add!(tmp1510[i], U_t_pn2[i], pNX_t_pn3[i], ord)
            TaylorSeries.add!(termpnx[i], X_t_pn1[i], tmp1510[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.add!(tmp1513[i], V_t_pn2[i], pNY_t_pn3[i], ord)
            TaylorSeries.add!(termpny[i], Y_t_pn1[i], tmp1513[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.add!(tmp1516[i], W_t_pn2[i], pNZ_t_pn3[i], ord)
            TaylorSeries.add!(termpnz[i], Z_t_pn1[i], tmp1516[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        #= C:\Users\luisi\UNAM\Fisica\Servicio Social\NEOs.jl\src\propagation\ex.jl:500 =# Threads.@threads for i = 11:Nm1
                TaylorSeries.mul!(X_t_pn1[i], c_p2, newton_acc_X[i], ord)
                TaylorSeries.mul!(Y_t_pn1[i], c_p2, newton_acc_Y[i], ord)
                TaylorSeries.mul!(Z_t_pn1[i], c_p2, newton_acc_Z[i], ord)
            end
        for i = 11:Nm1
            TaylorSeries.identity!(termpnx[i], X_t_pn1[i], ord)
            TaylorSeries.add!(sumpnx[i], pntempX, termpnx[i], ord)
            TaylorSeries.identity!(pntempX, sumpnx[i], ord)
            TaylorSeries.identity!(termpny[i], Y_t_pn1[i], ord)
            TaylorSeries.add!(sumpny[i], pntempY, termpny[i], ord)
            TaylorSeries.identity!(pntempY, sumpny[i], ord)
            TaylorSeries.identity!(termpnz[i], Z_t_pn1[i], ord)
            TaylorSeries.add!(sumpnz[i], pntempZ, termpnz[i], ord)
            TaylorSeries.identity!(pntempZ, sumpnz[i], ord)
        end
        TaylorSeries.mul!(postNewtonX, pntempX, c_m2, ord)
        TaylorSeries.mul!(postNewtonY, pntempY, c_m2, ord)
        TaylorSeries.mul!(postNewtonZ, pntempZ, c_m2, ord)
        TaylorSeries.mul!(tmp1528, Y[1], W[1], ord)
        TaylorSeries.mul!(tmp1529, Z[1], V[1], ord)
        TaylorSeries.subst!(hx, tmp1528, tmp1529, ord)
        TaylorSeries.mul!(tmp1531, Z[1], U[1], ord)
        TaylorSeries.mul!(tmp1532, X[1], W[1], ord)
        TaylorSeries.subst!(hy, tmp1531, tmp1532, ord)
        TaylorSeries.mul!(tmp1534, X[1], V[1], ord)
        TaylorSeries.mul!(tmp1535, Y[1], U[1], ord)
        TaylorSeries.subst!(hz, tmp1534, tmp1535, ord)
        TaylorSeries.mul!(tmp1537, hz, Y[1], ord)
        TaylorSeries.mul!(tmp1538, hy, Z[1], ord)
        TaylorSeries.subst!(t_x, tmp1537, tmp1538, ord)
        TaylorSeries.mul!(tmp1540, hx, Z[1], ord)
        TaylorSeries.mul!(tmp1541, hz, X[1], ord)
        TaylorSeries.subst!(t_y, tmp1540, tmp1541, ord)
        TaylorSeries.mul!(tmp1543, hy, X[1], ord)
        TaylorSeries.mul!(tmp1544, hx, Y[1], ord)
        TaylorSeries.subst!(t_z, tmp1543, tmp1544, ord)
        TaylorSeries.pow!(tmp1547, t_x, 2, ord)
        TaylorSeries.pow!(tmp1549, t_y, 2, ord)
        TaylorSeries.add!(tmp1550, tmp1547, tmp1549, ord)
        TaylorSeries.pow!(tmp1552, t_z, 2, ord)
        TaylorSeries.add!(tmp1553, tmp1550, tmp1552, ord)
        TaylorSeries.sqrt!(t_norm, tmp1553, ord)
        TaylorSeries.div!(t_x_unit, t_x, t_norm, ord)
        TaylorSeries.div!(t_y_unit, t_y, t_norm, ord)
        TaylorSeries.div!(t_z_unit, t_z, t_norm, ord)
        TaylorSeries.div!(tmp1558, X[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_x_unit, tmp1558, ord)
        TaylorSeries.div!(tmp1560, Y[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_y_unit, tmp1560, ord)
        TaylorSeries.div!(tmp1562, Z[1], r_p1d2[1], ord)
        TaylorSeries.subst!(r_z_unit, tmp1562, ord)
        TaylorSeries.identity!(g_r, r_p2[1], ord)
        TaylorSeries.div!(A2_t_g_r, q[7], g_r, ord)
        TaylorSeries.div!(A1_t_g_r, q[8], g_r, ord)
        TaylorSeries.mul!(tmp1566, A2_t_g_r, t_x_unit, ord)
        TaylorSeries.mul!(tmp1567, A1_t_g_r, r_x_unit, ord)
        TaylorSeries.add!(NGAx, tmp1566, tmp1567, ord)
        TaylorSeries.mul!(tmp1569, A2_t_g_r, t_y_unit, ord)
        TaylorSeries.mul!(tmp1570, A1_t_g_r, r_y_unit, ord)
        TaylorSeries.add!(NGAy, tmp1569, tmp1570, ord)
        TaylorSeries.mul!(tmp1572, A2_t_g_r, t_z_unit, ord)
        TaylorSeries.mul!(tmp1573, A1_t_g_r, r_z_unit, ord)
        TaylorSeries.add!(NGAz, tmp1572, tmp1573, ord)
        TaylorSeries.add!(tmp1575, postNewtonX, accX, ord)
        TaylorSeries.add!(dq[4], tmp1575, NGAx, ord)
        TaylorSeries.add!(tmp1577, postNewtonY, accY, ord)
        TaylorSeries.add!(dq[5], tmp1577, NGAy, ord)
        TaylorSeries.add!(tmp1579, postNewtonZ, accZ, ord)
        TaylorSeries.add!(dq[6], tmp1579, NGAz, ord)
        TaylorSeries.identity!(dq[7], zero_q_1, ord)
        for __idx = eachindex(q)
            (q[__idx]).coeffs[ordnext + 1] = (dq[__idx]).coeffs[ordnext] / ordnext
        end
    end
    return nothing
end